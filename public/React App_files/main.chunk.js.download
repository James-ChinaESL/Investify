(this["webpackJsonpinvest-sim"] = this["webpackJsonpinvest-sim"] || []).push([["main"],{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./src/index.css":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!./node_modules/postcss-loader/src??postcss!./src/index.css ***!
  \**************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Montserrat&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Raleway&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Open+Sans|Roboto:400,700&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Cabin&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Quicksand&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Copse&family=Delius&family=Itim&family=Kalam:wght@700&family=Pridi&family=Rancho&family=Vollkorn+SC&family=Yomogi&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Baloo+2:wght@500&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Fredericka+the+Great&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Wallpoet&display=swap);"]);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Akronim&family=Baloo+2:wght@700&family=Bowlby+One+SC&family=Bungee&family=Cute+Font&family=Goldman:wght@700&family=Hanuman:wght@700&family=Lalezar&family=Monoton&family=Pridi:wght@500&family=Racing+Sans+One&family=Sanchez&family=Skranji:wght@700&family=Wallpoet&display=swap);"]);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ":root {\r\n  --body-gradient: linear-gradient(\r\n    0deg,\r\n    rgba(58, 64, 74, 1) 0%,\r\n    rgba(52, 62, 89, 1) 75%,\r\n    rgba(52, 62, 89, 1) 100%\r\n  );\r\n  --card-gradient: linear-gradient(170deg, var( --clr-primary) 0%, var( --clr-primary) 100%);\r\n  --fc-primary: #fafafa;\r\n  --fc-disabled: #ced7df;\r\n  --fc-secondary: #ffffff;\r\n\r\n  --clr-primary: var( --clr-primary);\r\n  --clr-primary-hover: #223144;\r\n  --clr-secondary: #293c55;\r\n  /* --clr-black: #223144; */\r\n  /* --clr-blue: #3f8fc3; */\r\n  --ff-primary: \"Raleway\", sans-serif;\r\n  --ff-secondary: \"Roboto\", sans-serif;\r\n  --ff-tertiary: \"Open Sans\", sans-serif;\r\n  --ff-numbers: \"Quicksand\", sans-serif;\r\n  --ff-primary: \"Cabin\", sans-serif;\r\n  --transition: all 0.3s linear;\r\n  --box-shadow: 1px 1px 3px black;\r\n  --text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.35);\r\n}\r\n\r\n*,\r\n::after,\r\n::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\nhtml {\r\n  font-size: 62.5%;\r\n}\r\n@media (min-width: 1250px) {\r\n  html {\r\n    font-size: 70%;\r\n  }\r\n}\r\n@media (max-width: 1030px) {\r\n  html {\r\n    font-size: 55%;\r\n  }\r\n}\r\n\r\n@media (max-width: 850px) {\r\n  html {\r\n    font-size: 50%;\r\n  }\r\n}\r\nbody {\r\n  /* font-family: \"Raleway\", sans-serif; */\r\n  font-size: 1.6rem;\r\n  color: var(--fc-primary);\r\n  background: var(--body-gradient);\r\n  background-repeat: no-repeat;\r\n  font-family: var(--ff-primary);\r\n  min-height: 110vh;\r\n}\r\nh1 {\r\n  font-weight: 400;\r\n  text-align: center;\r\n  font-family: var(--ff-primary);\r\n  font-size: 3.5rem;\r\n  margin: 2rem 0 3rem;\r\n}\r\nh2 {\r\n  font-weight: 400;\r\n}\r\n.card {\r\n  padding: 1rem 2rem 2rem;\r\n  font-family: var(--ff-primary);\r\n  background-color: var(--clr-primary);\r\n  border-radius: 15px;\r\n}\r\n.positive {\r\n  color: #afa;\r\n}\r\n.negative {\r\n  color: #fa5555;\r\n}\r\n\r\n.btn {\r\n  display: inline-block;\r\n  transition: background-color 0.2s;\r\n  text-shadow: var(--text-shadow);\r\n  -webkit-user-select: none;\r\n          user-select: none;\r\n  color: whitesmoke;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-family: var(--ff-primary);\r\n  letter-spacing: 1px;\r\n  padding: 0.3rem 0.6rem;\r\n  border: 2px solid transparent;\r\n  border-radius: 5px;\r\n  background-color: transparent;\r\n}\r\n.btn.active {\r\n  color: #afa;\r\n  color: var(--clr-primary);\r\n  font-weight: bolder;\r\n  text-shadow: -2px 0px 2px rgba(255, 255, 255, 0.4);\r\n  background-color: #afa;\r\n}\r\n.btn:hover {\r\n  border: 2px solid #afa;\r\n}\r\n.btn:active {\r\n  transform: scale(0.97);\r\n  color: #afa;\r\n}\r\n", "",{"version":3,"sources":["webpack://src/index.css"],"names":[],"mappings":"AAYA;EACE;;;;;GAKC;EACD,kEAAkE;EAClE,qBAAqB;EACrB,sBAAsB;EACtB,uBAAuB;;EAEvB,kBAAkB;EAClB,wBAAwB;EACxB,oBAAoB;EACpB,0BAA0B;EAC1B,yBAAyB;EACzB,mCAAmC;EACnC,oCAAoC;EACpC,sCAAsC;EACtC,qCAAqC;EACrC,qCAAqC;EACrC,6BAA6B;EAC7B,+BAA+B;EAC/B,8CAA8C;AAChD;;AAEA;;;EAGE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;AACA;EACE,gBAAgB;AAClB;AACA;EACE;IACE,cAAc;EAChB;AACF;AACA;EACE;IACE,cAAc;EAChB;AACF;;AAEA;EACE;IACE,cAAc;EAChB;AACF;AACA;EACE,wCAAwC;EACxC,iBAAiB;EACjB,wBAAwB;EACxB,gCAAgC;EAChC,4BAA4B;EAC5B,8BAA8B;EAC9B,iBAAiB;AACnB;AACA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,kCAAkC;EAClC,iBAAiB;EACjB,mBAAmB;AACrB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,uBAAuB;EACvB,kCAAkC;EAClC,gCAAgC;EAChC,mBAAmB;AACrB;AACA;EACE,WAAW;AACb;AACA;EACE,cAAc;AAChB;;AAEA;EACE,qBAAqB;EACrB,iCAAiC;EACjC,+BAA+B;EAC/B,yBAAiB;UAAjB,iBAAiB;EACjB,iBAAiB;EACjB,eAAe;EACf,eAAe;EACf,qBAAqB;EACrB,kCAAkC;EAClC,mBAAmB;EACnB,sBAAsB;EACtB,6BAA6B;EAC7B,kBAAkB;EAClB,6BAA6B;AAC/B;AACA;EACE,WAAW;EACX,qBAAqB;EACrB,mBAAmB;EACnB,kDAAkD;EAClD,sBAAsB;AACxB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,sBAAsB;EACtB,WAAW;AACb","sourcesContent":["@import url(\"https://fonts.googleapis.com/css2?family=Montserrat&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Raleway&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css?family=Open+Sans|Roboto:400,700&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Cabin&display=swap\");\r\n\r\n@import url(\"https://fonts.googleapis.com/css2?family=Quicksand&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Copse&family=Delius&family=Itim&family=Kalam:wght@700&family=Pridi&family=Rancho&family=Vollkorn+SC&family=Yomogi&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Baloo+2:wght@500&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Fredericka+the+Great&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Wallpoet&display=swap\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Akronim&family=Baloo+2:wght@700&family=Bowlby+One+SC&family=Bungee&family=Cute+Font&family=Goldman:wght@700&family=Hanuman:wght@700&family=Lalezar&family=Monoton&family=Pridi:wght@500&family=Racing+Sans+One&family=Sanchez&family=Skranji:wght@700&family=Wallpoet&display=swap\");\r\n:root {\r\n  --body-gradient: linear-gradient(\r\n    0deg,\r\n    rgba(58, 64, 74, 1) 0%,\r\n    rgba(52, 62, 89, 1) 75%,\r\n    rgba(52, 62, 89, 1) 100%\r\n  );\r\n  --card-gradient: linear-gradient(170deg, var( --clr-primary) 0%, var( --clr-primary) 100%);\r\n  --fc-primary: #fafafa;\r\n  --fc-disabled: #ced7df;\r\n  --fc-secondary: #ffffff;\r\n\r\n  --clr-primary: var( --clr-primary);\r\n  --clr-primary-hover: #223144;\r\n  --clr-secondary: #293c55;\r\n  /* --clr-black: #223144; */\r\n  /* --clr-blue: #3f8fc3; */\r\n  --ff-primary: \"Raleway\", sans-serif;\r\n  --ff-secondary: \"Roboto\", sans-serif;\r\n  --ff-tertiary: \"Open Sans\", sans-serif;\r\n  --ff-numbers: \"Quicksand\", sans-serif;\r\n  --ff-primary: \"Cabin\", sans-serif;\r\n  --transition: all 0.3s linear;\r\n  --box-shadow: 1px 1px 3px black;\r\n  --text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.35);\r\n}\r\n\r\n*,\r\n::after,\r\n::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\nhtml {\r\n  font-size: 62.5%;\r\n}\r\n@media (min-width: 1250px) {\r\n  html {\r\n    font-size: 70%;\r\n  }\r\n}\r\n@media (max-width: 1030px) {\r\n  html {\r\n    font-size: 55%;\r\n  }\r\n}\r\n\r\n@media (max-width: 850px) {\r\n  html {\r\n    font-size: 50%;\r\n  }\r\n}\r\nbody {\r\n  /* font-family: \"Raleway\", sans-serif; */\r\n  font-size: 1.6rem;\r\n  color: var(--fc-primary);\r\n  background: var(--body-gradient);\r\n  background-repeat: no-repeat;\r\n  font-family: var(--ff-primary);\r\n  min-height: 110vh;\r\n}\r\nh1 {\r\n  font-weight: 400;\r\n  text-align: center;\r\n  font-family: var(--ff-primary);\r\n  font-size: 3.5rem;\r\n  margin: 2rem 0 3rem;\r\n}\r\nh2 {\r\n  font-weight: 400;\r\n}\r\n.card {\r\n  padding: 1rem 2rem 2rem;\r\n  font-family: var(--ff-primary);\r\n  background-color: var(--clr-primary);\r\n  border-radius: 15px;\r\n}\r\n.positive {\r\n  color: #afa;\r\n}\r\n.negative {\r\n  color: #fa5555;\r\n}\r\n\r\n.btn {\r\n  display: inline-block;\r\n  transition: background-color 0.2s;\r\n  text-shadow: var(--text-shadow);\r\n  user-select: none;\r\n  color: whitesmoke;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-family: var(--ff-primary);\r\n  letter-spacing: 1px;\r\n  padding: 0.3rem 0.6rem;\r\n  border: 2px solid transparent;\r\n  border-radius: 5px;\r\n  background-color: transparent;\r\n}\r\n.btn.active {\r\n  color: #afa;\r\n  color: var(--clr-primary);\r\n  font-weight: bolder;\r\n  text-shadow: -2px 0px 2px rgba(255, 255, 255, 0.4);\r\n  background-color: #afa;\r\n}\r\n.btn:hover {\r\n  border: 2px solid #afa;\r\n}\r\n.btn:active {\r\n  transform: scale(0.97);\r\n  color: #afa;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./src/App.js":
/*!********************!*\
  !*** ./src/App.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/esm/react-router-dom.js");
/* harmony import */ var _components_Table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Table */ "./src/components/Table.js");
/* harmony import */ var _components_Navbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Navbar */ "./src/components/Navbar.js");
/* harmony import */ var _pages_Stocks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/Stocks */ "./src/pages/Stocks.js");
/* harmony import */ var _pages_SingleStock__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/SingleStock */ "./src/pages/SingleStock.js");
/* harmony import */ var _pages_HomePage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pages/HomePage */ "./src/pages/HomePage.js");
/* harmony import */ var _pages_Portfolio__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pages/Portfolio */ "./src/pages/Portfolio.js");
/* harmony import */ var _pages_Watchlist__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pages/Watchlist */ "./src/pages/Watchlist.js");
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var _pages_AllPlayers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pages/AllPlayers */ "./src/pages/AllPlayers.js");
/* harmony import */ var _pages_DayLosers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pages/DayLosers */ "./src/pages/DayLosers.js");
/* harmony import */ var _auth0_auth0_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @auth0/auth0-react */ "./node_modules/@auth0/auth0-react/dist/auth0-react.esm.js");
/* harmony import */ var _pages_LandingPage__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pages/LandingPage */ "./src/pages/LandingPage.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\App.js",
    _s = __webpack_require__.$Refresh$.signature();
















const App = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(_c = _s(() => {
  _s();

  const {
    isAuthenticated
  } = Object(_auth0_auth0_react__WEBPACK_IMPORTED_MODULE_12__["useAuth0"])();
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["BrowserRouter"], {
    children: [isAuthenticated && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(_components_Navbar__WEBPACK_IMPORTED_MODULE_3__["default"], {}, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 27
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["Switch"], {
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["Route"], {
        exact: true,
        path: "/",
        children: isAuthenticated ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(_pages_Stocks__WEBPACK_IMPORTED_MODULE_4__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 29,
          columnNumber: 30
        }, undefined) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(_pages_LandingPage__WEBPACK_IMPORTED_MODULE_13__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 29,
          columnNumber: 43
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 28,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["Route"], {
        path: "/stocks",
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(_pages_Stocks__WEBPACK_IMPORTED_MODULE_4__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 32,
          columnNumber: 11
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 31,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["Route"], {
        path: "/company/:ticker",
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(_pages_SingleStock__WEBPACK_IMPORTED_MODULE_5__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 35,
          columnNumber: 11
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 34,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["Route"], {
        path: "/portfolio/:name",
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(_pages_Portfolio__WEBPACK_IMPORTED_MODULE_7__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 39,
          columnNumber: 11
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 38,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["Route"], {
        path: "/watchlist",
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(_pages_Watchlist__WEBPACK_IMPORTED_MODULE_8__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 42,
          columnNumber: 11
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["Route"], {
        path: "/allplayers",
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_14__["jsxDEV"])(_pages_AllPlayers__WEBPACK_IMPORTED_MODULE_10__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 45,
          columnNumber: 11
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 44,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 25,
    columnNumber: 5
  }, undefined);
}, "SJ46nY+CQf5aUIyUDDAQ/VmzCOc=", false, function () {
  return [_auth0_auth0_react__WEBPACK_IMPORTED_MODULE_12__["useAuth0"]];
}));
_c2 = App;
/* harmony default export */ __webpack_exports__["default"] = (App);

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "App$React.memo");
__webpack_require__.$Refresh$.register(_c2, "App");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/DonutChart.js":
/*!**************************************!*\
  !*** ./src/components/DonutChart.js ***!
  \**************************************/
/*! exports provided: DonutChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DonutChart", function() { return DonutChart; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_fusioncharts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-fusioncharts */ "./node_modules/react-fusioncharts/lib/ReactFC.js");
/* harmony import */ var react_fusioncharts__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_fusioncharts__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var fusioncharts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fusioncharts */ "./node_modules/fusioncharts/fusioncharts.js");
/* harmony import */ var fusioncharts__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fusioncharts__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var fusioncharts_fusioncharts_charts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fusioncharts/fusioncharts.charts */ "./node_modules/fusioncharts/fusioncharts.charts.js");
/* harmony import */ var fusioncharts_fusioncharts_charts__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fusioncharts_fusioncharts_charts__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\DonutChart.js";





react_fusioncharts__WEBPACK_IMPORTED_MODULE_1___default.a.fcRoot(fusioncharts__WEBPACK_IMPORTED_MODULE_2___default.a, fusioncharts_fusioncharts_charts__WEBPACK_IMPORTED_MODULE_3___default.a);
const DonutChart = ({
  data
}) => {
  const chartConfigs = {
    type: "doughnut2d",
    width: "100%",
    height: "100%",
    dataFormat: "json",
    dataSource: {
      chart: {
        caption: "",
        theme: "fusion",
        decimals: 1,
        pieRadius: "75%",
        doughnutRadius: "50%",
        showPercentValues: 1,
        baseFont: "Quicksand",
        baseFontSize: 12,
        baseFontColor: "#fafafa",
        smartLineColor: "#617d98",
        showShadow: 0,
        showPlotBorder: 1,
        paletteColors: "#2caeba,#B2EA70, #5D62B5, #FFC533, #F2726F, #1de9b6, #DFD8CA, #9C19E0 ,#FF5DA2  ,#99DDCC",
        use3DLighting: 0,
        useDataPlotColorForLabels: 0,
        bgColor: "2b2d3e, 2b2d3e",
        bgratio: "30, 50",
        bgAlpha: "100,100",
        bgAngle: "80",
        showBorder: 0,
        borderThickness: 5,
        borderColor: "#223144",
        borderAlpha: 100,
        showPlotBorder: 1,
        showToolTip: 1,
        toolTipColor: "#000",
        toolTipBgColor: "#ced7df",
        toolTipBorderColor: "#ced7df",
        showHoverEffect: 1,
        showLegend: 0,
        tooltipPosition: "bottom"
      },
      // Chart Data
      data
    }
  };
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(react_fusioncharts__WEBPACK_IMPORTED_MODULE_1___default.a, { ...chartConfigs
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 54,
    columnNumber: 10
  }, undefined);
};
_c = DonutChart;

var _c;

__webpack_require__.$Refresh$.register(_c, "DonutChart");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/EarningsChart.js":
/*!*****************************************!*\
  !*** ./src/components/EarningsChart.js ***!
  \*****************************************/
/*! exports provided: EarningsChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EarningsChart", function() { return EarningsChart; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_chartjs_2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-chartjs-2 */ "./node_modules/react-chartjs-2/dist/index.modern.js");
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/Button/index.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\EarningsChart.js",
    _s = __webpack_require__.$Refresh$.signature();







const EarningsChart = ({
  currency,
  yearly,
  quarterly
}) => {
  _s();

  const [intervals, setIntervals] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(yearly);
  console.log(currency);

  if (!(currency && yearly && quarterly)) {
    return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(Wrapper, {
      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])("div", {
        className: "no_data",
        children: "No data to display"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 13,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 12,
      columnNumber: 7
    }, undefined);
  }

  currency = currency === "USD" ? "$" : currency;
  const units = intervals[0].revenue.raw > 10 ** 9 ? "B" : "M";
  const data = {
    labels: intervals.map(period => period.date),
    datasets: [{
      label: `Revenue, ${currency}${units}`,
      data: intervals.map(period => {
        if (units === "B") {
          return (period.revenue.raw / 10 ** 9).toFixed(2);
        } else {
          return (period.revenue.raw / 10 ** 6).toFixed(2);
        }
      }),
      backgroundColor: "#36A2EB",
      barThickness: "flex",
      stack: "Stack 0"
    }, {
      label: `Earnings, ${currency}${units}`,
      data: intervals.map(period => {
        if (units === "B") {
          return (period.earnings.raw / 10 ** 9).toFixed(2);
        } else {
          return (period.earnings.raw / 10 ** 6).toFixed(2);
        }
      }),
      backgroundColor: intervals.map(period => {
        return period.earnings.raw > 0 ? "#4BC096" : "#FF6384";
      }),
      barThickness: "flex",
      stack: "Stack 1"
    }]
  };
  const options = {
    maintainAspectRatio: false,
    color: "#fafafa",
    plugins: {
      legend: {
        display: false,
        align: "end",
        labels: {
          font: {
            size: 16,
            family: "Raleway"
          }
        }
      }
    },
    scales: {
      y: {
        display: false,
        ticks: {
          display: false
        },
        grid: {
          display: false
        }
      },
      x: {
        ticks: {
          color: "white",
          font: {
            size: 14,
            family: "Quicksand"
          },
          padding: 0
        },
        grid: {
          display: false
        },
        gridLines: {
          zeroLineColor: "white",
          drawBorder: false
        }
      }
    }
  };
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["Fragment"], {
    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])("div", {
      className: "buttons",
      style: {
        position: "relative",
        left: "2rem"
      },
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_mui_material_Button__WEBPACK_IMPORTED_MODULE_2__["default"], {
        variant: `${intervals === yearly ? "contained" : "outlined"}`,
        size: "small",
        onClick: () => setIntervals(yearly),
        sx: {
          marginRight: "0.5rem"
        },
        children: "Yearly"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 103,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_mui_material_Button__WEBPACK_IMPORTED_MODULE_2__["default"], {
        variant: `${intervals === quarterly ? "contained" : "outlined"}`,
        size: "small",
        onClick: () => setIntervals(quarterly),
        children: "Quarterly"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 113,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 7
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(react_chartjs_2__WEBPACK_IMPORTED_MODULE_1__["Bar"], {
      data: data,
      options: options
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 121,
      columnNumber: 7
    }, undefined)]
  }, void 0, true);
};

_s(EarningsChart, "DCpgVD+F5SsbgoLBTtnEGbi3zYo=");

_c = EarningsChart;
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div`
  & {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: start;
    align-items: center;
    font-size: 2rem;
  }
  .buttons {
    button:first-of-type {
      margin-right: 0.5rem;
    }
  }
  .no_data {
    margin-left: 5rem;
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "EarningsChart");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/Hero.js":
/*!********************************!*\
  !*** ./src/components/Hero.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\Hero.js";




const Hero = () => {
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])(Wrapper, {
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("div", {
      className: "hero_title",
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "I"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 8,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "N"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 9,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "V"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 10,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "E"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 11,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "$"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 12,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "T"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 13,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "I"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 14,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "F"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 15,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("span", {
        children: "Y"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 16,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 7,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 6,
    columnNumber: 5
  }, undefined);
};

_c = Hero;
/* harmony default export */ __webpack_exports__["default"] = (Hero);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div`
  & {
    padding: 2rem 4rem;

    .hero_title {
      display: inline-block;
      user-select: none;
      /* pointer-events: painted; */
      font-family: "Goldman", cursive;
      cursor: default;
      letter-spacing: 1px;
      font-size: 3rem;
      -webkit-background-clip: text;
      color: transparent;
      background-image: linear-gradient(
        to right,
        #72e672,
        #afa,
        #8eef54,
        #72e672,
        #8eef54,
        #afa
      );
      background-size: 300% 100%;

      text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.4);
      transition: all 0.4s ease-in-out;
      &:hover {
        background-position: 100% 0;

        text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
      }
      span {
        display: inline-block;
        top: 0;
        transition: top 0.3s;
      }
      span:hover {
        position: relative;
        top: -5px;
        transform: scale(1.05);
        color: #afa;
      }
    }
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "Hero");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/HoldingsTable.js":
/*!*****************************************!*\
  !*** ./src/components/HoldingsTable.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/formatNumbersForUI */ "./src/utils/formatNumbersForUI.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/esm/react-router-dom.js");
/* harmony import */ var _contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contexts/calculationsContext */ "./src/contexts/calculationsContext.js");
/* harmony import */ var _MiniButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MiniButton */ "./src/components/MiniButton.js");
/* harmony import */ var _utils_defineClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/defineClass */ "./src/utils/defineClass.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/index.js");
/* harmony import */ var _SortButtons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./SortButtons */ "./src/components/SortButtons.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\HoldingsTable.js",
    _s = __webpack_require__.$Refresh$.signature();












const HoldingsTable = ({
  user
}) => {
  _s();

  const {
    currentPrice,
    userStockDayChangePercent,
    userStockDayChangeUSD
  } = Object(_contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_4__["useCalculationsContext"])();
  const [todayUnit, setTodayUnit] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])("%");
  const [returnUnit, setReturnUnit] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])("%");
  const [sortedBy, setSortedBy] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const holdingsInfo = user.holdings.map(stock => {
    const price = currentPrice(stock);
    const totalValue = price * stock.quantity;
    const dayChangePercent = userStockDayChangePercent(user, stock);
    const dayChangeUSD = userStockDayChangeUSD(user, stock);
    const returnUSD = price * stock.quantity - stock.quantity * stock.average;
    const returnPercent = returnUSD / (stock.quantity * stock.average) * 100;
    return { ...stock,
      price,
      totalValue,
      dayChangeUSD,
      dayChangePercent,
      returnUSD,
      returnPercent
    };
  });
  const [holdings, setHoldings] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(holdingsInfo);

  const sort = (type, order) => {
    if (sortedBy === type + order) {
      console.log(holdingsInfo);
      setHoldings(holdingsInfo);
      setSortedBy("");
      return;
    }

    let sortedHoldings;

    switch (type) {
      case "symbol":
        sortedHoldings = [...holdingsInfo].sort((a, b) => {
          return a.symbol > b.symbol ? 1 : -1;
        });
        break;

      case "dayChangePercent":
        sortedHoldings = [...holdingsInfo].sort((a, b) => {
          return b.dayChangePercent - a.dayChangePercent;
        });
        break;

      case "dayChangeUSD":
        sortedHoldings = [...holdingsInfo].sort((a, b) => {
          return b.dayChangeUSD - a.dayChangeUSD;
        });
        break;

      case "returnUSD":
        sortedHoldings = [...holdingsInfo].sort((a, b) => {
          return b.returnUSD - a.returnUSD;
        });
        break;

      case "returnPercent":
        sortedHoldings = [...holdingsInfo].sort((a, b) => {
          return b.returnPercent - a.returnPercent;
        });
        break;

      case "totalValue":
        sortedHoldings = [...holdingsInfo].sort((a, b) => {
          return b.totalValue - a.totalValue;
        });
        break;
    }

    if (order === "Asc") {
      sortedHoldings.reverse();
    }

    setHoldings(sortedHoldings);
    setSortedBy(type + order);
  };

  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(Wrapper, {
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("table", {
      className: "holdings_table",
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("tr", {
        className: "header",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("th", {
          className: "symbol sort",
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
            type: "symbol",
            currentSort: sortedBy,
            sort: sort
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 96,
            columnNumber: 13
          }, undefined), "Symbol"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 95,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("th", {
          className: "price",
          children: "Price"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 99,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("th", {
          className: "today group sort",
          children: [todayUnit === "%" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
            type: "dayChangePercent",
            currentSort: sortedBy,
            sort: sort
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 102,
            columnNumber: 15
          }, undefined) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
            type: "dayChangeUSD",
            currentSort: sortedBy,
            sort: sort
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 108,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
            className: "label",
            children: "Today"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 114,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_MiniButton__WEBPACK_IMPORTED_MODULE_5__["default"], {
            content: "$",
            value: todayUnit,
            setValue: () => setTodayUnit("$")
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 116,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_MiniButton__WEBPACK_IMPORTED_MODULE_5__["default"], {
            content: "%",
            value: todayUnit,
            setValue: () => setTodayUnit("%")
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 121,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 100,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("th", {
          className: "average",
          children: "Average"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 127,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("th", {
          className: "quantity",
          children: "QTY"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 128,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("th", {
          className: "total sort",
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
            type: "totalValue",
            currentSort: sortedBy,
            sort: sort
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 131,
            columnNumber: 13
          }, undefined), "Total Value"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 130,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("th", {
          className: "return group sort",
          children: [returnUnit === "%" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
            type: "returnPercent",
            currentSort: sortedBy,
            sort: sort
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 137,
            columnNumber: 15
          }, undefined) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
            type: "returnUSD",
            currentSort: sortedBy,
            sort: sort
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 143,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
            className: "label",
            children: "Return"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 149,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_MiniButton__WEBPACK_IMPORTED_MODULE_5__["default"], {
            content: "$",
            value: returnUnit,
            setValue: () => setReturnUnit("$")
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 150,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_MiniButton__WEBPACK_IMPORTED_MODULE_5__["default"], {
            content: "%",
            value: returnUnit,
            setValue: () => setReturnUnit("%")
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 155,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 135,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 94,
        columnNumber: 9
      }, undefined), holdings.map(stock => {
        return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("tr", {
          className: "row",
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("td", {
            className: "link",
            children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_3__["Link"], {
              to: `/company/${stock.symbol}`,
              children: stock.symbol
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 166,
              columnNumber: 17
            }, undefined)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 165,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("td", {
            children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_2__["usdNoPlus"])(stock.price)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 168,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("td", {
            className: `${Object(_utils_defineClass__WEBPACK_IMPORTED_MODULE_6__["defineClass"])(stock.dayChangeUSD)}`,
            children: todayUnit === "%" ? Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_2__["percent"])(stock.dayChangePercent) : Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_2__["usdPlus"])(stock.dayChangeUSD)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 169,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("td", {
            children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_2__["usdNoPlus"])(stock.average)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 174,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("td", {
            children: stock.quantity
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 175,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("td", {
            children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_2__["usdNoPlus"])(stock.totalValue)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 176,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("td", {
            className: `${Object(_utils_defineClass__WEBPACK_IMPORTED_MODULE_6__["defineClass"])(stock.returnUSD)}`,
            children: returnUnit === "%" ? Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_2__["percent"])(stock.returnPercent) : Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_2__["usdPlus"])(stock.returnUSD)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 177,
            columnNumber: 15
          }, undefined)]
        }, Object(uuid__WEBPACK_IMPORTED_MODULE_7__["v4"])(), true, {
          fileName: _jsxFileName,
          lineNumber: 164,
          columnNumber: 13
        }, undefined);
      })]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 92,
    columnNumber: 5
  }, undefined);
};

_s(HoldingsTable, "AqIN6f+GYa+CHStxd4aXJoIQ7wE=", false, function () {
  return [_contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_4__["useCalculationsContext"]];
});

_c = HoldingsTable;
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div`
  table {
    font-size: 1.8rem;
    letter-spacing: 1px;
    padding: 0;
    margin: 0;
    width: 100%;
    border-collapse: collapse;
    border-radius: 15px;
    .header {
      .label {
        /* margin-left: 2rem; */
        position: relative;
        margin-right: 0.5rem;
        display: inline-block;
      }
    }
    th {
      font-weight: normal;
      font-size: 2rem;
      padding-top: 1.5rem;
      padding-bottom: 1.5rem;

      &.sort {
        position: relative;
        top: -0.9rem;
      }
    }

    td {
      text-align: center;
      padding-top: 1rem;
      padding-bottom: 1rem;
      &.link {
        cursor: pointer;
        &:hover {
          text-decoration: underline;
        }
        a {
          text-decoration: none;
          color: var(--clr-white);
          display: block;
          width: 100%;
        }
      }
    }
    tr:nth-child(even) {
      background-color: #293c55;
    }
  }
`;
_c2 = Wrapper;
/* harmony default export */ __webpack_exports__["default"] = (HoldingsTable);

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "HoldingsTable");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/Message.js":
/*!***********************************!*\
  !*** ./src/components/Message.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_icons_bs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-icons/bs */ "./node_modules/react-icons/bs/index.esm.js");
/* harmony import */ var react_icons_bi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-icons/bi */ "./node_modules/react-icons/bi/index.esm.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\Message.js";







const Message = ({
  active,
  status,
  content
}) => {
  return /*#__PURE__*/Object(react_dom__WEBPACK_IMPORTED_MODULE_1__["createPortal"])( /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(Wrapper, {
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
      className: `message_container ${active ? "active" : null}  ${status}`,
      children: [status === "success" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(react_icons_bs__WEBPACK_IMPORTED_MODULE_2__["BsCheck2Circle"], {}, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 13,
        columnNumber: 33
      }, undefined) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(react_icons_bi__WEBPACK_IMPORTED_MODULE_3__["BiError"], {}, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 13,
        columnNumber: 54
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("h2", {
        className: `message ${status}`,
        children: content
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 14,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 10,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 9,
    columnNumber: 5
  }, undefined), document.getElementById("portal"));
};

_c = Message;
/* harmony default export */ __webpack_exports__["default"] = (Message);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_4__["default"].div`
  .message_container {
    z-index: 100000;
    position: fixed;
    top: 120%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 10rem;
    width: 70rem;
    opacity: 0;
    border-radius: 15px;
    box-shadow: var(--box-shadow);
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.3s cubic-bezier(0.42, 0, 1, 1);
    &.active {
      top: 80%;
      opacity: 0.95;
    }
    &.success {
      background-color: #2c7c34;
    }
    &.error {
      background-color: #d32f2f;
    }
    &.warning {
      background-color: #ec6b04;
    }
    svg {
      font-size: 3.5rem;
      margin-right: 1.5rem;
    }
    .message {
      font-weight: bolder;
      letter-spacing: 2px;
    }
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "Message");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/MiniButton.js":
/*!**************************************!*\
  !*** ./src/components/MiniButton.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/Button/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\MiniButton.js";




const MiniButton = ({
  content,
  value,
  setValue,
  small
}) => {
  let sx = {
    boxSizing: "border-box",
    padding: "1px 2px 0",
    minWidth: "2rem",
    maxWidth: "2rem",
    fontSize: "1.5rem",
    lineHeigth: 0,
    maxHeight: "2rem",
    borderWidth: "1px",
    // "&.first"
    "&.MuiButton-contained": {
      backgroundColor: "#1970ab",
      minWidth: "1.9rem"
    },
    "&.MuiButton-outlined": {
      borderColor: "transparent",
      color: "#fafafa",
      "&:hover": {
        borderColor: "#1970ab",
        borderWidth: "2px"
      }
    },
    "&.MuiButton-root:first-of-type": {
      marginRight: "2px"
    }
  };

  if (small) {
    sx = { ...sx,
      padding: "4px 3px",
      minWidth: "1.8rem",
      maxWidth: "1.8rem",
      fontSize: "1.4rem",
      minHeight: "1.8rem",
      maxHeight: "1.8rem",
      borderWidth: "px",
      "&.MuiButton-contained": {
        backgroundColor: "#1970ab",
        minWidth: "1.8rem"
      },
      "&.MuiButton-root:first-of-type": {
        marginRight: "2px",
        marginLeft: "5px"
      }
    };
  }

  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])(_mui_material_Button__WEBPACK_IMPORTED_MODULE_1__["default"], {
    variant: `${value === content ? "contained" : "outlined"}`,
    size: "small",
    sx: sx,
    onClick: setValue,
    children: content
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 56,
    columnNumber: 5
  }, undefined);
};

_c = MiniButton;
/* harmony default export */ __webpack_exports__["default"] = (MiniButton);

var _c;

__webpack_require__.$Refresh$.register(_c, "MiniButton");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/NameEditor.js":
/*!**************************************!*\
  !*** ./src/components/NameEditor.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_icons_ai__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-icons/ai */ "./node_modules/react-icons/ai/index.esm.js");
/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Message */ "./src/components/Message.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\NameEditor.js",
    _s = __webpack_require__.$Refresh$.signature();









let server = "http://localhost:5000";

const NameEditor = ({
  close,
  editName,
  currentUser
}) => {
  _s();

  const [name, setName] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(currentUser.userName);
  const [message, setMessage] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({
    active: false,
    status: "",
    content: ""
  });

  const showMessage = (status, content) => {
    setMessage({
      active: true,
      status,
      content
    });
    setTimeout(() => {
      setMessage({
        active: false,
        status,
        content
      });
    }, 2500);
  };

  const changeHandler = e => {
    setName(e.target.value);
  };

  const submitHandler = async e => {
    e.preventDefault();
    if (name === currentUser.userName) return;
    const {
      data: allUsers
    } = await axios__WEBPACK_IMPORTED_MODULE_6___default.a.get(`${server}/api/v1/users/`);
    const userWithSameName = allUsers.find(user => {
      return user.userName.toLowerCase() === name.toLowerCase();
    });

    if (userWithSameName) {
      if (userWithSameName._id === currentUser._id) {
        showMessage("success", "Name was successfully changed!");
        editName(name);
        setTimeout(() => close(), 2000);
        return;
      }

      showMessage("error", "Sorry, this name is already taken 😔");
      return;
    }

    showMessage("success", "Name was successfully changed!");
    console.log(name);
    editName(name);
    setTimeout(() => close(), 2000);
  };

  const onKeydown = ({
    key
  }) => {
    switch (key) {
      case "Escape":
        close();
        break;
    }
  };

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    document.addEventListener("keydown", onKeydown);
    return () => document.removeEventListener("keydown", onKeydown);
  });
  return /*#__PURE__*/Object(react_dom__WEBPACK_IMPORTED_MODULE_3__["createPortal"])( /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])(Wrapper, {
    children: [message.active && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])(_Message__WEBPACK_IMPORTED_MODULE_5__["default"], { ...message
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 26
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])("div", {
      className: "modal",
      onClick: close,
      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])("form", {
        className: "icon_input",
        onClick: e => e.stopPropagation(),
        onSubmit: submitHandler,
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])("input", {
          type: "text",
          className: "input",
          value: name,
          onChange: changeHandler
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 85,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])("button", {
          className: "icon",
          type: "submit",
          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])(react_icons_ai__WEBPACK_IMPORTED_MODULE_4__["AiOutlineSend"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 92,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 91,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 80,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 77,
    columnNumber: 5
  }, undefined), document.getElementById("portal"));
};

_s(NameEditor, "Xf+HNJHP+arGPBeuyrphJBBPzTQ=");

_c = NameEditor;
/* harmony default export */ __webpack_exports__["default"] = (NameEditor);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div`
  .modal {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.45);
  }
  .icon_input {
    position: relative;
    width: 30rem;
  }
  .input {
    /* text-align: center; */
    width: 100%;
    z-index: 1000;
    background-color: #fafafa;
    outline: none;
    padding: 10px 35px 10px 15px;
    border: none;
    border-radius: 15px;
    /* outline: none; */
    font-family: inherit;
    font-size: 2rem;
    /* text-transform: uppercase; */
  }
  .icon {
    cursor: pointer;
    position: absolute;
    border: none;
    background-color: transparent;
    color: black;
    top: 0.8rem;
    right: 1rem;
    font-size: 3rem;
    z-index: 10001;
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "NameEditor");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/Navbar.js":
/*!**********************************!*\
  !*** ./src/components/Navbar.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/esm/react-router-dom.js");
/* harmony import */ var _auth0_auth0_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @auth0/auth0-react */ "./node_modules/@auth0/auth0-react/dist/auth0-react.esm.js");
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/Button/index.js");
/* harmony import */ var _mui_material_Menu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/Menu */ "./node_modules/@mui/material/Menu/index.js");
/* harmony import */ var _mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/MenuItem */ "./node_modules/@mui/material/MenuItem/index.js");
/* harmony import */ var _NameEditor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./NameEditor */ "./src/components/NameEditor.js");
/* harmony import */ var _mui_icons_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/icons-material */ "./node_modules/@mui/icons-material/esm/index.js");
/* harmony import */ var _SearchStocks__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./SearchStocks */ "./src/components/SearchStocks.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\Navbar.js",
    _s = __webpack_require__.$Refresh$.signature();
















const Navbar = () => {
  _s();

  const {
    isAuthenticated,
    loginWithRedirect,
    logout
  } = Object(_auth0_auth0_react__WEBPACK_IMPORTED_MODULE_3__["useAuth0"])();
  const {
    currentUser,
    editName
  } = Object(_contexts_userContext__WEBPACK_IMPORTED_MODULE_4__["useUserContext"])();
  const [isNameEditorOpened, setIsNameEditorOpened] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const nameButton = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const path = Object(react_router_dom__WEBPACK_IMPORTED_MODULE_2__["useLocation"])().pathname;
  const [anchorEl, setAnchorEl] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const open = Boolean(anchorEl);

  const logoutHandler = () => {
    setAnchorEl(null);
    logout();
  };

  const handleClick = event => {
    setAnchorEl(event.currentTarget);
  };

  const editNameHandler = () => {
    setAnchorEl(null);
    setIsNameEditorOpened(true);
  };

  const handleClose = () => {
    setAnchorEl(null);
  };

  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(Wrapper, {
    children: [isNameEditorOpened && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_NameEditor__WEBPACK_IMPORTED_MODULE_8__["default"], {
      close: () => setIsNameEditorOpened(false),
      editName: editName,
      currentUser: currentUser
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 9
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("nav", {
      className: "navbar",
      children: [currentUser.userName && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["Fragment"], {
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "links",
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_2__["Link"], {
            className: `btn ${path === "/stocks" ? "active" : null}`,
            to: "/stocks",
            children: "Stocks"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 52,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_2__["Link"], {
            className: `btn ${path === "/watchlist" ? "active" : null}`,
            to: "/watchlist",
            children: "Watchlist"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 59,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_2__["Link"], {
            className: `btn ${path === `/portfolio/${currentUser.userName}` ? "active" : null}`,
            to: `/portfolio/${currentUser.userName}`,
            children: "MyPortfolio"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 65,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_2__["Link"], {
            className: `btn ${path === "/allplayers" ? "active" : null}`,
            to: "/allplayers",
            children: "AllPlayers"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 76,
            columnNumber: 15
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 13
        }, undefined)
      }, void 0, false), currentUser.userName && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["Fragment"], {
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("button", {
          className: "btn name name-button",
          id: "basic-button",
          "aria-controls": "basic-menu",
          "aria-haspopup": "false",
          "aria-expanded": open ? false : undefined,
          style: {
            minWidth: "10rem"
          },
          ref: nameButton,
          onClick: handleClick,
          children: currentUser.userName
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 88,
          columnNumber: 13
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_mui_material_Menu__WEBPACK_IMPORTED_MODULE_6__["default"], {
          id: "basic-menu",
          anchorEl: anchorEl,
          open: open,
          onClose: handleClose,
          MenuListProps: {
            "aria-labelledby": "basic-button"
          },
          anchorOrigin: {
            vertical: "top",
            horizontal: "center"
          },
          transformOrigin: {
            vertical: "top",
            horizontal: "center"
          },
          sx: {
            ".MuiPaper-root ": {
              width: nameButton.current ? getComputedStyle(nameButton.current).width : `100px`,
              boxSizing: "content-box",
              marginTop: "-2px",
              marginRight: "0px",
              border: "2px solid var( --clr-primary)",
              backgroundColor: "var( --clr-primary)",
              boxShadow: "1px 1px 3px black 0.2"
            },
            ".MuiList-root": {
              backgroundColor: "var( --clr-primary)",
              color: "#fafafa",
              fontFamily: "Cabin",
              padding: 0
            },
            ".MuiMenuItem-root": {
              backgroundColor: "var( --clr-primary)",
              justifyContent: "center",
              padding: "0.5rem 1rem",
              margiBottom: "0.3rem",
              fontSize: "1.7rem",
              fontFamily: "Cabin",
              letterSpacing: "1px",
              border: "2px solid transparent",
              "&:hover": {
                border: "2px solid #afa",
                backgroundColor: "#293c55",
                borderRadius: "5px"
              }
            }
          },
          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_7__["default"], {
              onClick: editNameHandler,
              sx: {},
              children: "Edit name"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 156,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_7__["default"], {
              onClick: logoutHandler,
              children: "Logout"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 160,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 155,
            columnNumber: 15
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 103,
          columnNumber: 13
        }, undefined)]
      }, void 0, true), !isAuthenticated && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("button", {
        className: "login",
        onClick: loginWithRedirect,
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("span", {
          children: "Log in | Sign up"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 167,
          columnNumber: 13
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 166,
        columnNumber: 11
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 7
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_SearchStocks__WEBPACK_IMPORTED_MODULE_10__["default"], {}, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 40,
    columnNumber: 5
  }, undefined);
};

_s(Navbar, "zN+BI83im/Qm8eSWdBdIVx+EGMo=", false, function () {
  return [_auth0_auth0_react__WEBPACK_IMPORTED_MODULE_3__["useAuth0"], _contexts_userContext__WEBPACK_IMPORTED_MODULE_4__["useUserContext"], react_router_dom__WEBPACK_IMPORTED_MODULE_2__["useLocation"]];
});

_c = Navbar;
/* harmony default export */ __webpack_exports__["default"] = (Navbar);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div`
  .navbar {
    position: relative;

    padding: 2rem 2rem 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 3rem 2rem;
    /* text-align: right;  */
    .links {
      display: flex;
      justify-content: space-between;
      min-width: min(55rem, 50vw);
    }
    .btn {
      display: inline-block;
      transition: background-color 0.2s;
      text-shadow: var(--text-shadow);
      user-select: none;
      color: whitesmoke;
      font-size: 2rem;
      cursor: pointer;
      text-decoration: none;
      font-family: var(--ff-primary);
      letter-spacing: 1px;
      padding: 0.3rem 0.6rem;
      border: 2px solid transparent;
      border-radius: 5px;

      &:hover {
        border: 2px solid #afa;
      }
      &:active {
        transform: scale(0.97);
        color: #afa;
      }

      &.active {
        color: #afa;
        color: var(--clr-primary);
        font-weight: bolder;
        text-shadow: -2px 0px 2px rgba(255, 255, 255, 0.4);
        background-color: #afa;
      }
    }
    button.btn {
      &.name {
        text-decoration: none;
        background-color: var(--clr-primary);
        padding: 0.5rem;
        border-radius: 5px;
        text-shadow: none;
        transition: 0.3s;
        border: 2px solid #afa;
        /* color: red; */
        /* font-size: 1.8rem; */
      }
    }
    .login {
      border: none;
      position: relative;
      top: 2px;
      margin-right: 4rem;
      padding: 0.6rem 1.2rem;
      font-size: 2rem;
      background-color: #afa;
      color: #3f39a2;
      border-radius: 5px;

      font-weight: bold;
      font-family: "Roboto";
      background-size: 250% 100%;
      transition: all 0.4s ease-in-out;
      background-image: linear-gradient(
        to right,
        #72e672,
        #afa,
        #8eef54,
        #72e672,
        #8eef54,
        #afa
      );

      box-shadow: 0 4px 15px 0 #ced7df40;
      span {
        text-shadow: -2px 0px 2px rgba(255, 255, 255, 0.4);
      }

      &:hover {
        background-position: 100% 0;
        transition: all 0.4s ease-in-out;
      }
    }

    .title {
      display: inline-block;
      user-select: none;
      /* pointer-events: painted; */
      font-family: "Goldman", cursive;
      cursor: default;
      letter-spacing: 1px;
      font-size: 3rem;
      -webkit-background-clip: text;
      color: transparent;
      background-image: linear-gradient(
        to right,
        #72e672,
        #afa,
        #8eef54,
        #72e672,
        #8eef54,
        #afa
      );
      background-size: 300% 100%;

      text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.4);
      transition: all 0.4s ease-in-out;
      &:hover {
        background-position: 100% 0;

        text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
      }
      span {
        display: inline-block;
        top: 0;
        transition: top 0.3s;
      }
      span:hover {
        position: relative;
        top: -5px;
        transform: scale(1.05);
        color: #afa;
      }
    }
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "Navbar");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/PriceSlider.js":
/*!***************************************!*\
  !*** ./src/components/PriceSlider.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DiscreteSliderMarks; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/material/Box */ "./node_modules/@mui/material/Box/index.js");
/* harmony import */ var _mui_material_Slider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mui/material/Slider */ "./node_modules/@mui/material/Slider/index.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\PriceSlider.js";





function DiscreteSliderMarks({
  low,
  high,
  price
}) {
  if (isNaN(low + price + high)) {
    return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])("div", {
      children: "no data to display"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 8,
      columnNumber: 12
    }, this);
  }

  let marks;
  let currentMark;

  const createMarks = (low, high, price) => {
    currentMark = (price - low) / (high - low) * 100;
    marks = [{
      value: 0,
      label: `$${low.toFixed(1)}`
    }, {
      value: currentMark,
      label: `$${price.toFixed(1)}`
    }, {
      value: 100,
      label: `$${high.toFixed(1)}`
    }];
    return marks;
  };

  marks = createMarks(low, high, price);
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_mui_material_Box__WEBPACK_IMPORTED_MODULE_1__["default"], {
    sx: {
      width: "100%"
    },
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_2__["default"], {
      sx: {
        width: "100%",
        color: "whitesmoke",
        " &": {
          marginTop: "1.5rem"
        },
        "& .MuiSlider-thumb": {
          color: "#afa",
          borderRadius: "0",
          width: "1rem",
          height: "2rem",
          clipPath: "polygon(0% 100% ,50% 55%, 100% 100%)"
        },
        "& .MuiSlider-track": {
          height: "3px",
          color: "white",
          borderRadius: "0",
          opacity: "1"
        },
        "& .MuiSlider-rail": {
          color: "whitesmoke",
          opacity: "0.7",
          borderRadius: "0px"
        },
        "& .MuiSlider-markLabel": {
          color: "whitesmoke",
          fontSize: "1.5rem"
        },
        "& .MuiSlider-markLabel[data-index='1']": {
          color: "#fafafa"
        },
        "& .MuiSlider-markLabel[data-index='0']": {
          top: "-35%"
        },
        "& .MuiSlider-markLabel[data-index='2']": {
          top: "-35%"
        },
        "& .MuiSlider-mark": {
          width: "2px",
          height: "6px",
          borderRadius: "0px"
        },
        "& .MuiSlider-markActive[data-index='1']": {
          color: "whitesmoke",
          width: "1px",
          height: "3px",
          borderRadius: "0px"
        }
      },
      size: "small",
      "aria-label": "Custom marks",
      defaultValue: currentMark,
      valueLabelDisplay: "auto",
      marks: marks,
      disabled: true
    }, Object(uuid__WEBPACK_IMPORTED_MODULE_3__["v4"])(), false, {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 7
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 33,
    columnNumber: 5
  }, this);
}
_c = DiscreteSliderMarks;

var _c;

__webpack_require__.$Refresh$.register(_c, "DiscreteSliderMarks");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/Row.js":
/*!*******************************!*\
  !*** ./src/components/Row.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _PriceSlider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PriceSlider */ "./src/components/PriceSlider.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/index.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/esm/react-router-dom.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\Row.js",
    _s = __webpack_require__.$Refresh$.signature();







let server = "http://localhost:5000";

const Row = ({
  shortName,
  fiftyTwoWeekHigh: high,
  fiftyTwoWeekLow: low,
  marketCap,
  regularMarketPrice: price,
  regularMarketChangePercent: change,
  symbol,
  rank
}) => {
  _s();

  const logo = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    logo.current.onerror = e => {
      e.target.src = `${server}/logos/default.png`;
      e.target.onerror = null;
    };
  }, []);
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(Wrapper, {
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
      className: "table__row",
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
        className: "rank",
        children: rank
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 30,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
        className: "join",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
          className: "image-container",
          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("img", {
            ref: logo,
            className: "company-logo",
            src: `${server}/logos/${symbol}.webp`,
            alt: "logo"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 33,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 32,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_4__["Link"], {
          className: "name-link",
          to: `/company/${symbol}`,
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
            className: "name",
            children: [" ", shortName]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 41,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
            className: "ticker",
            children: symbol
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 42,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 40,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 31,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
        className: "market-cap",
        children: ["$", marketCap]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 45,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
        className: "price",
        children: ["$", price]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 46,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
        className: `day-change ${change > 0 ? "green" : "red"}`,
        children: [change, "%"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 47,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
        className: "price-slider",
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(_PriceSlider__WEBPACK_IMPORTED_MODULE_2__["default"], {
          low: low,
          high: high,
          price: price
        }, Object(uuid__WEBPACK_IMPORTED_MODULE_3__["v4"])(), false, {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 11
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 28,
    columnNumber: 5
  }, undefined);
};

_s(Row, "9zzBcjzG0Un0V4e7Ij39acaLHSs=");

_c = Row;
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div`
  .table__row {
    display: flex;
    justify-content: space-around;
    background-color: var(--clr-primary);
    :hover {
      background-color: var(--clr-primary-hover);
    }
    .rank,
    .market-cap,
    .price,
    .day-change,
    .company-logo,
    .image-container {
      font-family: var(--ff-numbers), sans-serif;
      vertical-align: middle;
      line-height: 6.5rem;
      text-align: right;
    }
    .rank {
      margin-left: 1.5rem;
      width: 2.2rem;
    }
    .join {
      display: flex;
      .image-container {
        width: 4rem;
        height: 6.5rem;

        .company-logo {
          height: 4rem;
          width: 4rem;
        }
      }
      .name-link {
        margin-left: 2rem;
        width: 9.6rem;
        text-decoration: none;
        &,
        &:link,
        &:visited {
          color: var(--fc-primary);
        }
        &:hover {
          text-decoration: underline;
        }
        .name {
          margin-top: 1.5rem;
          font-size: 2rem;
          font-weight: 600;
          &:hover,
          .ticker {
          }
        }
        .ticker {
          font-size: 1.5rem;
        }
      }
    }
    .market-cap {
      width: 12rem;
      text-align: right;
      margin-left: 0rem;
    }
    .price {
      width: 8.2rem;
    }
    .day-change {
      width: 7.2rem;
      &.red {
        color: #fa5555;
      }
      &.green {
        color: #afa;
      }
    }
    .price-slider {
      width: 20rem;
      margin-right: 4.5rem;
    }

    @media (max-width: 880px) {
      .price-slider {
        width: 14rem;
      }
    }
  }
`;
_c2 = Wrapper;
/* harmony default export */ __webpack_exports__["default"] = (Row);

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "Row");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/SearchStocks.js":
/*!****************************************!*\
  !*** ./src/components/SearchStocks.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/fetchOptions */ "./src/utils/fetchOptions.js");
/* harmony import */ var _mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material/LinearProgress */ "./node_modules/@mui/material/LinearProgress/index.js");
/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/material/Box */ "./node_modules/@mui/material/Box/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\SearchStocks.js",
    _s = __webpack_require__.$Refresh$.signature();









const SearchStocks = () => {
  _s();

  const [loading, setLoading] = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(false);
  const [searchTerm, setSearchTerm] = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])("");
  const [results, setResults] = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])([]);
  const searchValue = Object(react__WEBPACK_IMPORTED_MODULE_1__["useRef"])("");
  const fetchStocks = Object(react__WEBPACK_IMPORTED_MODULE_1__["useCallback"])(async () => {
    if (!searchTerm) return;
    setLoading(true);

    try {
      const res = await axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(`${_utils_fetchOptions__WEBPACK_IMPORTED_MODULE_3__["urlSymbolLookup"]}${searchTerm}&token=${_utils_fetchOptions__WEBPACK_IMPORTED_MODULE_3__["finhubApiKey"]}`);
      if (res) setResults(res.data.result.slice(0, 3));
    } catch (error) {
      console.log(error);
    }

    setLoading(false);
  }, [searchTerm]);

  const handleSubmit = e => {
    e.preventDefault();
  };

  const search = () => {
    setSearchTerm(searchValue.current.value);
  };

  const clearInput = e => {
    // console.log(e);
    if (!e.currentTarget.contains(e.relatedTarget)) {
      searchValue.current.value = "";
      setSearchTerm("");
    }
  };

  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {
    const timeoutId = setTimeout(() => fetchStocks(searchTerm), 500);
    return () => clearTimeout(timeoutId);
  }, [searchTerm]);
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])(Wrapper, {
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("div", {
      className: "search-container",
      onBlur: clearInput,
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("form", {
        className: "form",
        autoComplete: "off",
        onSubmit: handleSubmit,
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("input", {
          name: "input stock to search",
          type: "text",
          ref: searchValue,
          onChange: search,
          placeholder: "Search stocks",
          className: "search-field"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("button", {
          type: "submit",
          className: "search-button",
          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("img", {
            src: "search.png"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 59,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 49,
        columnNumber: 9
      }, undefined), loading && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__["default"], {
        sx: {
          width: "100%"
        },
        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])(_mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_4__["default"], {
          color: "inherit"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 64,
          columnNumber: 13
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 63,
        columnNumber: 11
      }, undefined), searchTerm && results && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("div", {
        className: "results",
        children: results.map((result, i) => {
          return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("div", {
            className: "result",
            children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("a", {
              href: `/company/${result.symbol}`,
              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("p", {
                className: "name",
                children: result.description.toLowerCase()
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 73,
                columnNumber: 21
              }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])("p", {
                children: result.symbol
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 74,
                columnNumber: 21
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 72,
              columnNumber: 19
            }, undefined)
          }, i, false, {
            fileName: _jsxFileName,
            lineNumber: 71,
            columnNumber: 17
          }, undefined);
        })
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 68,
        columnNumber: 11
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 47,
    columnNumber: 5
  }, undefined);
};

_s(SearchStocks, "gx6oUOdgQvzvX9QoE0pAy07gs9c=");

_c = SearchStocks;
/* harmony default export */ __webpack_exports__["default"] = (SearchStocks);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].section`
  & {
    display: flex;
    justify-content: end;
    margin-right: 3rem;
  }
  .search-container {
    width: 25rem;
  }

  .form {
    display: flex;
    flex-direction: row;
  }
  .search-field {
    width: 100%;
    padding: 10px 35px 10px 15px;
    border: none;
    border-bottom: 1px solid black;
    outline: none;
    font-family: inherit;
    text-transform: uppercase;
    &::placeholder {
      text-transform: none;
    }
  }

  .search-button {
    margin-top: 3px;
    background: transparent;
    border: none;
    outline: none;
    margin-left: -30px;
  }

  .search-button img {
    width: 20px;
    height: 20px;
    object-fit: cover;
  }

  .results {
    display: flex;
    background-color: white;
    flex-direction: column;

    a {
      padding: 0.3rem 2rem;
      display: flex;
      justify-content: space-between;
      font-size: 1.2rem;
      text-decoration: none;
      color: black;
      &:hover {
        text-decoration: underline;
      }
      .name {
        text-transform: capitalize;
      }
    }
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "SearchStocks");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/SortButtons.js":
/*!***************************************!*\
  !*** ./src/components/SortButtons.js ***!
  \***************************************/
/*! exports provided: SortButtons */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SortButtons", function() { return SortButtons; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_bootstrap_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-bootstrap-icons */ "./node_modules/react-bootstrap-icons/dist/index.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\SortButtons.js";




const SortButtons = ({
  type,
  sort,
  currentSort
}) => {
  // console.log(sort);
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])(Wrapper, {
    children: [currentSort === `${type}Asc` ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])(react_bootstrap_icons__WEBPACK_IMPORTED_MODULE_1__["CaretUpFill"], {
      onClick: () => sort(`${type}`, "Asc")
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 9
    }, undefined) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])(react_bootstrap_icons__WEBPACK_IMPORTED_MODULE_1__["CaretUp"], {
      onClick: () => sort(`${type}`, "Asc")
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 9
    }, undefined), currentSort === `${type}Des` ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])(react_bootstrap_icons__WEBPACK_IMPORTED_MODULE_1__["CaretDownFill"], {
      onClick: () => sort(`${type}`, "Des")
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 22,
      columnNumber: 9
    }, undefined) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])(react_bootstrap_icons__WEBPACK_IMPORTED_MODULE_1__["CaretDown"], {
      onClick: () => sort(`${type}`, "Des")
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 9
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 15,
    columnNumber: 5
  }, undefined);
};
_c = SortButtons;
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div`
  & {
    display: inline-block;
    cursor: pointer;

    position: relative;
    top: 1.2rem;
    right: 1px;
    /* cursor: pointer; */

    svg {
      display: block;
      font-size: 2.3rem;
      &:first-of-type {
        margin-bottom: -1rem;
      }
    }
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "SortButtons");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/Table.js":
/*!*********************************!*\
  !*** ./src/components/Table.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Table; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/fetchOptions */ "./src/utils/fetchOptions.js");
/* harmony import */ var _utils_formatData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/formatData */ "./src/utils/formatData.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _Row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Row */ "./src/components/Row.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/index.js");
/* harmony import */ var _model_js_responseData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../model.js/responseData */ "./src/model.js/responseData.js");
/* harmony import */ var _SortButtons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./SortButtons */ "./src/components/SortButtons.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\Table.js",
    _s = __webpack_require__.$Refresh$.signature();












function Table({
  type,
  list
}) {
  _s();

  // console.log(type, list);
  const [tableStocks, setTableStocks] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])([]);
  const [isLoading, setIsloading] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])();
  const [sortedBy, setSortedBy] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])();
  const [description, setDescription] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])("");
  const [initialOrder, setInitialOrder] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])([]);
  const specilaStocks = {
    techGrowth: _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["urlTechGrowth"],
    undervaluedLargeCap: _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["urlUndervaluedLargeCap"],
    dayGainers: _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["urlDayGainers"],
    dayLosers: _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["urlDayLosers"],
    undervaluedGrowth: _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["urlUndervaluedGrowth"]
  };
  let formatedData;

  const fetchData = async () => {
    setIsloading(true);

    if (list) {
      const res = await axios__WEBPACK_IMPORTED_MODULE_5___default.a.get(_utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["urlYahoo"], Object(_utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["optionsYahoo"])(list));
      formatedData = Object(_utils_formatData__WEBPACK_IMPORTED_MODULE_2__["formatDataList"])(res);

      if (list === _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["popularStocks"]) {
        setDescription(_utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["popularStocksDescription"]);
      }
    }

    if (type) {
      const res = await axios__WEBPACK_IMPORTED_MODULE_5___default.a.get(specilaStocks[type], _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__["specilStocksOptions"]);
      formatedData = Object(_utils_formatData__WEBPACK_IMPORTED_MODULE_2__["formatDataDayMovers"])(res);
      setDescription(res.data.description.replace(".", "")); // console.log(res);
    }

    setTableStocks(formatedData);
    setInitialOrder(formatedData);
    setIsloading(false);
  };

  const sort = (type, order) => {
    console.log(type + order);
    console.log(sortedBy);
    console.log(initialOrder);

    if (type + order === sortedBy) {
      // console.log(formatedData);
      setTableStocks(initialOrder);
      setSortedBy("");
      return;
    }

    let sorted;

    switch (type) {
      case "name":
        sorted = [...tableStocks].sort((a, b) => a.shortName > b.shortName ? 1 : -1);
        break;

      case "cap":
        sorted = [...tableStocks].sort((a, b) => b.marketCaptoSort - a.marketCaptoSort);
        break;

      case "price":
        sorted = [...tableStocks].sort((a, b) => b.regularMarketPrice - a.regularMarketPrice);
        break;

      case "todayChange":
        sorted = [...tableStocks].sort((a, b) => b.regularMarketChangePercent - a.regularMarketChangePercent);
        break;

      case "yearRange":
        sorted = [...tableStocks].sort((a, b) => b.priceRelativeToYear - a.priceRelativeToYear);
        break;
    }

    if (order === "Asc") {
      sorted.reverse();
    }

    setTableStocks(sorted);
    setSortedBy(type + order);
  };

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    fetchData();
  }, [type, list]);
  return !isLoading && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(Wrapper, {
    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("h1", {
      className: "description",
      children: description
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 9
    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
      className: "header-table",
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
        className: "rank",
        children: "Rank"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 118,
        columnNumber: 11
      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
        className: "name_logo",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
          type: "name",
          currentSort: sortedBy,
          sort: sort
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 120,
          columnNumber: 13
        }, this), "Name"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 119,
        columnNumber: 11
      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
        className: "market-cap",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
          type: "cap",
          currentSort: sortedBy,
          sort: sort
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 124,
          columnNumber: 13
        }, this), "Market Cap"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 123,
        columnNumber: 11
      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
        className: "price",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
          type: "price",
          currentSort: sortedBy,
          sort: sort
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 128,
          columnNumber: 13
        }, this), "Price"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 127,
        columnNumber: 11
      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
        className: "day-change",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
          type: "todayChange",
          currentSort: sortedBy,
          sort: sort
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 132,
          columnNumber: 13
        }, this), "Today"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 131,
        columnNumber: 11
      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
        className: "price-slider",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])(_SortButtons__WEBPACK_IMPORTED_MODULE_8__["SortButtons"], {
          type: "yearRange",
          currentSort: sortedBy,
          sort: sort
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 140,
          columnNumber: 13
        }, this), "52 weeks range"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 139,
        columnNumber: 11
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 9
    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__["jsxDEV"])("div", {
      className: "rows",
      children: tableStocks === null || tableStocks === void 0 ? void 0 : tableStocks.map((company, i) => {
        return /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(_Row__WEBPACK_IMPORTED_MODULE_4__["default"], { ...company,
          rank: i + 1,
          key: Object(uuid__WEBPACK_IMPORTED_MODULE_6__["v4"])(),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 146,
            columnNumber: 20
          }
        });
      })
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 9
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 115,
    columnNumber: 7
  }, this);
}

_s(Table, "IRSg3I7MkXgDWq1GXxUMat0MK74=");

_c = Table;
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].section`
  .description {
    text-align: center;
    margin: 3rem 0 2rem;
    font-size: 2.5rem;
    font-family: "Cabin";
    letter-spacing: 1px;
  }

  .header-table {
    width: 95%;
    display: flex;
    margin: 10px auto 2px;
    justify-content: space-around;
    background-color: var( --clr-primary);
    font-size: 1.8rem;
    font-family: var(--ff-primary);
    letter-spacing: 1px;
    font-weight: 600;
    text-align: center;
    vertical-align: middle;
    line-height: 6.5rem;
    text-transform: capitalize;

    .rank {
      margin-left: 0.5rem;
    }
    .name_logo {
      width: 18rem;
      margin-left: -3rem;
      margin-right: 3rem;
    }

    .market-cap {
      width: 13rem;
      text-align: right;
      margin-left: 0rem;
    }
    .price {
      width: 8.2rem;
    }
    .day-change {
      width: 7.5rem;
    }
    .price-slider {
      font-size: 1.6rem;
      width: 20rem;
      margin-right: 4.5rem;
    }

    .sort_icons {
      display: inline-block;
      cursor: pointer;
      position: relative;
      top: 0.7rem;
      right: 5px;
      /* cursor: pointer; */

      svg {
        display: block;
        font-size: 1.8rem;
        &:first-of-type {
          margin-bottom: -0.8rem;
        }
        /* position: absolute; */
        /* z-index: 100000; */
        /* left: 25%; */
      }
    }
  }

  .rows {
    font-family: var(--ff-primary);
    font-size: 2rem;
    display: grid;
    grid-template-columns: 95%;
    grid-auto-rows: min-content;
    justify-content: center;
    gap: 2px;
    background-color: transparent;
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "Table");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/TargetSlider.js":
/*!****************************************!*\
  !*** ./src/components/TargetSlider.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DiscreteSliderMarks; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/material/Box */ "./node_modules/@mui/material/Box/index.js");
/* harmony import */ var _mui_material_Slider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mui/material/Slider */ "./node_modules/@mui/material/Slider/index.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\TargetSlider.js";





function DiscreteSliderMarks({
  low,
  high,
  mean,
  price
}) {
  let marks;
  let meanMark;
  let currentMark;
  let createMarks;
  let lowMark;

  if (isNaN(low + mean + high + price)) {
    return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])("div", {
      className: "no_data",
      children: "No data to display"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 14,
      columnNumber: 12
    }, this);
  }

  if (price >= low) {
    createMarks = (price, low, mean, high) => {
      currentMark = parseFloat((price - low) / (high - low) * 100);
      meanMark = parseFloat((mean - low) / (high - low) * 100);
      marks = [{
        value: 0,
        label: `Low ${parseFloat(low.toFixed(1))}`
      }, {
        value: meanMark,
        label: `Mean ${parseFloat(mean.toFixed(1))}`
      }, {
        value: 100,
        label: `${parseFloat(high.toFixed(1))} High`
      }, {
        value: currentMark,
        label: `Current ${parseFloat(price.toFixed(1))}`
      }];
      return marks;
    };

    marks = createMarks(price, low, mean, high);
    return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_mui_material_Box__WEBPACK_IMPORTED_MODULE_1__["default"], {
      sx: {
        width: "100%"
      },
      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_2__["default"], {
        sx: {
          fontFamily: "Quicksand",
          width: "100%",
          color: "#ced7df",
          " &": {
            marginTop: "1.5rem"
          },
          "& .MuiSlider-thumb": {
            position: "relative",
            color: "whitesmoke",
            top: "1.3rem",
            borderRadius: "0",
            width: "1.5rem",
            height: "2rem",
            clipPath: "polygon(62% 0%,67% 0%,67% 100%,62% 100%)"
          },
          "& .MuiSlider-track": {
            height: "4px",
            color: "#FF6384",
            borderRadius: "0",
            opacity: "1"
          },
          "& .MuiSlider-rail": {
            height: "4px",
            color: "#4BC096",
            opacity: "1",
            borderRadius: "0px"
          },
          "& .MuiSlider-markLabel": {
            fontFamily: "Quicksand",
            color: "#ced7df",
            fontSize: "1.7rem"
          },
          "& .MuiSlider-markLabel[data-index='0'], .MuiSlider-markLabel[data-index='2']": {
            top: "60%"
          },
          "& .MuiSlider-markLabel[data-index='1'] ": {
            color: "whitesmoke",
            top: "-90%"
          },
          "& .MuiSlider-markLabel[data-index='3']": {
            color: "whitesmoke",
            top: "140%"
          },
          "& .MuiSlider-mark": {
            opacity: 1,
            color: "white",
            width: "0.7rem",
            height: "0.7rem",
            borderRadius: "0.7rem"
          },
          "& .MuiSlider-mark[data-index='3']": {}
        },
        size: "small",
        "aria-label": "Custom marks",
        defaultValue: currentMark,
        valueLabelDisplay: "auto",
        marks: marks,
        disabled: true
      }, Object(uuid__WEBPACK_IMPORTED_MODULE_3__["v4"])(), false, {
        fileName: _jsxFileName,
        lineNumber: 43,
        columnNumber: 9
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 7
    }, this);
  }

  if (price < low) {
    createMarks = (price, low, mean, high) => {
      currentMark = parseFloat((low - price) / (high - price) * 100);
      meanMark = parseFloat((mean - price) / (high - price) * 100);
      marks = [{
        value: 0,
        label: `Current ${parseFloat(price.toFixed(1))}`
      }, {
        value: currentMark,
        label: `Low ${parseFloat(low.toFixed(1))}`
      }, {
        value: meanMark,
        label: `Mean ${parseFloat(mean.toFixed(1))}`
      }, {
        value: 100,
        label: `${parseFloat(high.toFixed(1))} High`
      }];
      return marks;
    };
  }

  marks = createMarks(price, low, mean, high);
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_mui_material_Box__WEBPACK_IMPORTED_MODULE_1__["default"], {
    sx: {
      width: "100%"
    },
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_2__["default"], {
      sx: {
        fontFamily: "Quicksand",
        width: "100%",
        color: "#ced7df",
        " &": {
          marginTop: "1.5rem"
        },
        "& .MuiSlider-thumb": {
          position: "relative",
          color: "whitesmoke",
          top: "1.3rem",
          borderRadius: "0",
          width: "1.5rem",
          height: "2rem",
          clipPath: "polygon(62% 0%,67% 0%,67% 100%,62% 100%)"
        },
        "& .MuiSlider-track": {
          height: "4px",
          color: "#ced7df",
          borderRadius: "0",
          opacity: "0.65"
        },
        "& .MuiSlider-rail": {
          height: "4px",
          color: "#4BC096",
          opacity: "1",
          borderRadius: "0px"
        },
        "& .MuiSlider-markLabel": {
          fontFamily: "Quicksand",
          color: "#ced7df",
          fontSize: "1.7rem"
        },
        "& .MuiSlider-markLabel[data-index='0'], .MuiSlider-markLabel[data-index='3']": {
          top: "60%"
        },
        "& .MuiSlider-markLabel[data-index='1'] ": {
          color: "#ced7df",
          top: "130%"
        },
        "& .MuiSlider-markLabel[data-index='2']": {
          color: "whitesmoke",
          top: "-70%"
        },
        "& .MuiSlider-mark": {
          opacity: 1,
          color: "white",
          width: "0.7rem",
          height: "0.7rem",
          borderRadius: "0.7rem"
        },
        "& .MuiSlider-mark[data-index='3']": {}
      },
      size: "small",
      "aria-label": "Custom marks",
      defaultValue: currentMark,
      valueLabelDisplay: "auto",
      marks: marks,
      disabled: true
    }, Object(uuid__WEBPACK_IMPORTED_MODULE_3__["v4"])(), false, {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 7
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 141,
    columnNumber: 5
  }, this);
}
_c = DiscreteSliderMarks;

var _c;

__webpack_require__.$Refresh$.register(_c, "DiscreteSliderMarks");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/components/TradingViewChart.js":
/*!********************************************!*\
  !*** ./src/components/TradingViewChart.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\components\\TradingViewChart.js",
    _s = __webpack_require__.$Refresh$.signature();




const TradingViewChart = ({
  ticker
}) => {
  _s();

  const ref = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();
  react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(() => {
    let refValue;

    if (ref.current) {
      const script = document.createElement("script");
      script.src = "https://s3.tradingview.com/external-embedding/" + "embed-widget-mini-symbol-overview.js";
      script.async = true;
      script.type = "text/javascript";
      script.innerHTML = JSON.stringify({
        symbol: ticker,
        width: "100%",
        height: "100%",
        locale: "en",
        dateRange: "60M",
        colorTheme: "dark",
        trendLineColor: "rgba(41, 98, 255, 1)",
        underLineColor: "rgba(41, 98, 255, 0.3)",
        underLineBottomColor: "rgba(41, 98, 255, 0)",
        isTransparent: true,
        autosize: true,
        largeChartUrl: ""
      });
      ref.current.appendChild(script);
      refValue = ref.current;
    }

    return () => {
      if (refValue) {
        while (refValue.firstChild) {
          refValue.removeChild(refValue.firstChild);
        }
      }
    };
  }, [ticker]);
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__["jsxDEV"])("div", {
    ref: ref,
    className: "chart"
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 44,
    columnNumber: 10
  }, undefined);
};

_s(TradingViewChart, "OD7bBpZva5O2jO+Puf00hKivP7c=");

_c = TradingViewChart;
/* harmony default export */ __webpack_exports__["default"] = (TradingViewChart);

var _c;

__webpack_require__.$Refresh$.register(_c, "TradingViewChart");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/contexts/calculationsContext.js":
/*!*********************************************!*\
  !*** ./src/contexts/calculationsContext.js ***!
  \*********************************************/
/*! exports provided: CalculationsProvider, useCalculationsContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalculationsProvider", function() { return CalculationsProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCalculationsContext", function() { return useCalculationsContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\contexts\\calculationsContext.js",
    _s = __webpack_require__.$Refresh$.signature(),
    _s2 = __webpack_require__.$Refresh$.signature();




const CalculationsContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext();
const CalculationsProvider = ({
  children
}) => {
  _s();

  const {
    allUsers,
    allPrices
  } = Object(_contexts_userContext__WEBPACK_IMPORTED_MODULE_1__["useUserContext"])();

  const currentPrice = stock => {
    return allPrices.find(company => company.symbol === stock.symbol).price;
  };

  const stockDayChangeUSD = stock => {
    const company = allPrices.find(company => company.symbol === stock.symbol);
    return currentPrice(company) - company.prevClose;
  };

  const userStockDayChangeUSD = (user, stock) => {
    var _user$holdings$find;

    const purchaseDates = (_user$holdings$find = user.holdings.find(company => company.symbol === stock.symbol)) === null || _user$holdings$find === void 0 ? void 0 : _user$holdings$find.purchaseDates;

    if (!purchaseDates || purchaseDates.length === 0) {
      return;
    }

    const boughtTodayQuantity = purchaseDates.reduce((acc, purchase) => {
      // console.log(purchase.timestamp);
      if (Date.now() - purchase.timestamp < 16 * 60 * 60 * 1000) {
        return acc += purchase.quantity;
      } else {
        return acc;
      }
    }, 0); // console.log(boughtTodayQuantity);

    const boughtTodayAverage = purchaseDates.reduce((acc, purchase) => {
      if (Date.now() - purchase.timestamp < 16 * 60 * 60 * 1000) {
        return acc += purchase.quantity * purchase.price;
      } else {
        return acc;
      }
    }, 0) / boughtTodayQuantity;

    if (stock.symbol === "V") {
      console.log(boughtTodayAverage);
    }

    if (boughtTodayQuantity === stock.quantity) {
      return currentPrice(stock) * stock.quantity - boughtTodayAverage * stock.quantity;
    }

    if (boughtTodayQuantity < stock.quantity) {
      const returnFromTodayBuyings = currentPrice(stock) * boughtTodayQuantity - boughtTodayAverage * boughtTodayQuantity || 0;
      const returnFromOldBuyings = (stock.quantity - boughtTodayQuantity) * stockDayChangeUSD(stock);
      return returnFromTodayBuyings + returnFromOldBuyings;
    }
  };

  const userStockDayChangePercent = (user, stock) => {
    return userStockDayChangeUSD(user, stock) / (stock.average * stock.quantity) * 100;
  };

  const todayTotalChangeUSD = user => {
    var _user$holdings;

    return user === null || user === void 0 ? void 0 : (_user$holdings = user.holdings) === null || _user$holdings === void 0 ? void 0 : _user$holdings.reduce((acc, stock) => {
      return acc += userStockDayChangeUSD(user, stock);
    }, 0);
  };

  const todayTotalChangePercent = user => {
    return 100 / (user.accountValue / todayTotalChangeUSD(user) - 1);
  };

  const investSince = user => {
    return new Intl.DateTimeFormat("us-US", {
      year: "numeric",
      month: "short"
    }).format(user.regTimestamp);
  };

  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])(CalculationsContext.Provider, {
    value: {
      currentPrice,
      userStockDayChangePercent,
      userStockDayChangeUSD,
      todayTotalChangeUSD,
      todayTotalChangePercent,
      investSince
    },
    children: children
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 91,
    columnNumber: 5
  }, undefined);
};

_s(CalculationsProvider, "2551FxD/w5sg3XPH7KIake9FW+8=", false, function () {
  return [_contexts_userContext__WEBPACK_IMPORTED_MODULE_1__["useUserContext"]];
});

_c = CalculationsProvider;
const useCalculationsContext = () => {
  _s2();

  return Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(CalculationsContext);
};

_s2(useCalculationsContext, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");

var _c;

__webpack_require__.$Refresh$.register(_c, "CalculationsProvider");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/contexts/userContext.js":
/*!*************************************!*\
  !*** ./src/contexts/userContext.js ***!
  \*************************************/
/*! exports provided: UserProvider, useUserContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserProvider", function() { return UserProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useUserContext", function() { return useUserContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _auth0_auth0_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @auth0/auth0-react */ "./node_modules/@auth0/auth0-react/dist/auth0-react.esm.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/actions */ "./src/utils/actions.js");
/* harmony import */ var _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/fetchOptions */ "./src/utils/fetchOptions.js");
/* harmony import */ var _reducers_user_reducer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../reducers/user_reducer */ "./src/reducers/user_reducer.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\contexts\\userContext.js",
    _s = __webpack_require__.$Refresh$.signature(),
    _s2 = __webpack_require__.$Refresh$.signature();








const UserContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext();
const UserProvider = ({
  children
}) => {
  _s();

  const initialState = {
    currentUser: {},
    allUsers: [],
    allPrices: []
  };
  const [state, dispatch] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useReducer"])(_reducers_user_reducer__WEBPACK_IMPORTED_MODULE_5__["default"], initialState);
  const [needToSend, setNeedToSend] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    user: auth0User
  } = Object(_auth0_auth0_react__WEBPACK_IMPORTED_MODULE_1__["useAuth0"])();
  let server = "http://localhost:5000";

  const getInitialData = async () => {
    if (!auth0User) return;
    const {
      data: allUsers
    } = await axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(`${server}/api/v1/users/`);
    const allSymbolsString = allUsers.reduce((acc, user) => {
      if (user.holdings.length === 0) return acc;
      user.holdings.forEach(stock => {
        if (!acc.includes(stock.symbol)) {
          acc.push(stock.symbol);
        }
      });
      return acc;
    }, []).join(",");
    let allPrices;

    if (allSymbolsString.length === 0) {
      allPrices = [];
    } else {
      const allPricesRes = await axios__WEBPACK_IMPORTED_MODULE_2___default()(Object(_utils_fetchOptions__WEBPACK_IMPORTED_MODULE_4__["optionsTradier"])(allSymbolsString.replace(/(\.|-)/g, "/")));

      if (Array.isArray(allPricesRes.data.quotes.quote)) {
        allPrices = allPricesRes.data.quotes.quote.map(stock => {
          return {
            symbol: stock.symbol.replace("/", "-"),
            price: stock.ask,
            prevClose: stock.prevclose
          };
        });
      } else {
        allPrices = [{ ...allPricesRes.data.quotes.quote
        }];
      }
    }

    const currentUser = allUsers.find(user => user.email === auth0User.email);
    dispatch({
      type: _utils_actions__WEBPACK_IMPORTED_MODULE_3__["GET_INITIAL_DATA"],
      payload: {
        allUsers,
        allPrices,
        currentUser
      }
    });
    console.log("💥Initial data was fetched");
  };

  const buyStock = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])((symbol, quantity, price) => {
    dispatch({
      type: _utils_actions__WEBPACK_IMPORTED_MODULE_3__["BUY_STOCK"],
      payload: {
        symbol,
        quantity,
        price
      }
    });
    setNeedToSend(true);
  }, []);
  const sellStock = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])((symbol, quantity, price) => {
    dispatch({
      type: _utils_actions__WEBPACK_IMPORTED_MODULE_3__["SELL_STOCK"],
      payload: {
        symbol,
        quantity,
        price
      }
    });
    setNeedToSend(true);
  }, []);

  const editName = newName => {
    console.log(newName);
    dispatch({
      type: _utils_actions__WEBPACK_IMPORTED_MODULE_3__["EDIT_NAME"],
      payload: newName
    });
    setNeedToSend(true);
  };

  const addToWatchlist = symbol => {
    dispatch({
      type: _utils_actions__WEBPACK_IMPORTED_MODULE_3__["ADD_TO_WATCHLILST"],
      payload: symbol
    });
    setNeedToSend(true);
  };

  const deletFromWatchlist = symbol => {
    dispatch({
      type: _utils_actions__WEBPACK_IMPORTED_MODULE_3__["DELETE_FROM_WATCHLIST"],
      payload: symbol
    });
    setNeedToSend(true);
  };

  const sendUserData = async () => {
    console.log("let send user data...");
    await axios__WEBPACK_IMPORTED_MODULE_2___default.a.patch(`${server}/api/v1/users/${state.currentUser._id}`, state.allUsers.find(user => user._id === state.currentUser._id));
  };

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (!needToSend) return;
    sendUserData();
    return () => {
      setNeedToSend(false);
    };
  }, [state, needToSend]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    getInitialData();
  }, [auth0User]);
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__["jsxDEV"])(UserContext.Provider, {
    value: { ...state,
      buyStock,
      sellStock,
      sendUserData,
      editName,
      addToWatchlist,
      deletFromWatchlist
    },
    children: children
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 131,
    columnNumber: 5
  }, undefined);
};

_s(UserProvider, "BTteo3q5anm8Dog6oSPT1B7rlPs=", false, function () {
  return [_auth0_auth0_react__WEBPACK_IMPORTED_MODULE_1__["useAuth0"]];
});

_c = UserProvider;
const useUserContext = () => {
  _s2();

  return Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(UserContext);
};

_s2(useUserContext, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");

var _c;

__webpack_require__.$Refresh$.register(_c, "UserProvider");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src??postcss!./index.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./src/index.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }

  var p;

  for (p in a) {
    if (isNamedExport && p === 'default') {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (a[p] !== b[p]) {
      return false;
    }
  }

  for (p in b) {
    if (isNamedExport && p === 'default') {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (!a[p]) {
      return false;
    }
  }

  return true;
};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src??postcss!./index.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./src/index.css",
      function () {
        content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src??postcss!./index.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./src/index.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App */ "./src/App.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.css */ "./src/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _auth0_auth0_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @auth0/auth0-react */ "./node_modules/@auth0/auth0-react/dist/auth0-react.esm.js");
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var _contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./contexts/calculationsContext */ "./src/contexts/calculationsContext.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\index.js";








react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render( /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])(_auth0_auth0_react__WEBPACK_IMPORTED_MODULE_4__["Auth0Provider"], {
  domain: "dev-5ifb3jpf.us.auth0.com",
  clientId: "ymAaYtk0OdROTaRDmWJixAjSOZG5GMZ2",
  redirectUri: window.location.origin,
  cacheLocation: "localstorage",
  children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])(_contexts_userContext__WEBPACK_IMPORTED_MODULE_5__["UserProvider"], {
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])(_contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_6__["CalculationsProvider"], {
      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxDEV"])(_App__WEBPACK_IMPORTED_MODULE_2__["default"], {}, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 18,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 16,
    columnNumber: 5
  }, undefined)
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 10,
  columnNumber: 3
}, undefined), document.getElementById("root"));

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/model.js/responseData.js":
/*!**************************************!*\
  !*** ./src/model.js/responseData.js ***!
  \**************************************/
/*! exports provided: res */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "res", function() { return res; });
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

const res = {
  data: {
    quoteResponse: {
      result: [{
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 0.73,
                estimate: 0.7
              }, {
                date: "4Q2020",
                actual: 1.68,
                estimate: 1.41
              }, {
                date: "1Q2021",
                actual: 1.4,
                estimate: 0.99
              }, {
                date: "2Q2021",
                actual: 1.3,
                estimate: 1.01
              }],
              currentQuarterEstimate: 1.24,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635332340, 1635768000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 229234000000,
                earnings: 48351000000
              }, {
                date: 2018,
                revenue: 265595000000,
                earnings: 59531000000
              }, {
                date: 2019,
                revenue: 260174000000,
                earnings: 55256000000
              }, {
                date: 2020,
                revenue: 274515000000,
                earnings: 57411000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 64698000000,
                earnings: 12673000000
              }, {
                date: "4Q2020",
                revenue: 111439000000,
                earnings: 28755000000
              }, {
                date: "1Q2021",
                revenue: 89584000000,
                earnings: 23630000000
              }, {
                date: "2Q2021",
                revenue: 81434000000,
                earnings: 21744000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.06726888,
        marketCap: 2457875513344,
        forwardPE: 26.177818,
        priceToBook: 38.30242,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 345479400000,
        priceHint: 2,
        totalCash: 61696000000,
        floatShares: 16512974627,
        ebitda: 110934999040,
        shortRatio: 1.18,
        targetPriceHigh: 190,
        targetPriceLow: 132,
        targetPriceMean: 168.89,
        targetPriceMedian: 170,
        heldPercentInsiders: 0.073,
        heldPercentInstitutions: 58.674,
        postMarketChangePercent: -0.15468137,
        postMarketTime: 1634947200,
        postMarketPrice: 148.46,
        postMarketChange: -0.22999573,
        regularMarketChange: -0.7899933,
        regularMarketChangePercent: -0.5284943,
        regularMarketTime: 1634932802,
        regularMarketPrice: 148.69,
        regularMarketDayHigh: 150.18,
        regularMarketDayRange: "148.64 - 150.18",
        regularMarketDayLow: 148.64,
        regularMarketVolume: 58883443,
        sharesShort: 101107412,
        sharesShortPrevMonth: 96838699,
        shortPercentFloat: 0.61,
        regularMarketPreviousClose: 149.48,
        bid: 148.45,
        ask: 148.47,
        bidSize: 29,
        askSize: 32,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_24937",
        fullExchangeName: "NasdaqGS",
        shortName: "Apple Inc.",
        longName: "Apple Inc.",
        regularMarketOpen: 149.69,
        averageDailyVolume3Month: 75770900,
        averageDailyVolume10Day: 69650312,
        beta: 1.222222,
        fiftyTwoWeekLowChange: 41.370003,
        fiftyTwoWeekLowChangePercent: 0.3854827,
        fiftyTwoWeekRange: "107.32 - 157.26",
        fiftyTwoWeekHighChange: -8.569992,
        fiftyTwoWeekHighChangePercent: -0.054495692,
        fiftyTwoWeekLow: 107.32,
        fiftyTwoWeekHigh: 157.26,
        dividendDate: 1628726400,
        exDividendDate: 1628208000,
        earningsTimestamp: 1627403400,
        earningsTimestampStart: 1635332340,
        earningsTimestampEnd: 1635768000,
        trailingAnnualDividendRate: 0.835,
        trailingPE: 29.109241,
        pegRatio: 1.34,
        dividendsPerShare: 0.83,
        dividendRate: 0.88,
        trailingAnnualDividendYield: 0.005586032,
        dividendYield: 0.59,
        revenue: 347155005000,
        priceToSales: 7.080052,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 5.108,
        epsForward: 5.68,
        epsCurrentYear: 5.6,
        epsNextQuarter: 1.87,
        priceEpsCurrentYear: 26.551786,
        priceEpsNextQuarter: 79.51337,
        sharesOutstanding: 16530199552,
        bookValue: 3.882,
        fiftyDayAverage: 146.16943,
        fiftyDayAverageChange: 2.5205688,
        fiftyDayAverageChangePercent: 0.017244158,
        twoHundredDayAverage: 139.31822,
        twoHundredDayAverageChange: 9.37178,
        components: ["^NQDMXJPLMAUD", "^NQDOG", "^NQUSBLM", "^NQSHYL", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQUSB9572LMCADN", "^NQGMOIN", "^NQSXYN", "^NQGS", "^NQNALMEURN", "^NQUSB9000LMJPYN", "^NQUSB9572LMN", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQUSB9570LMJPY", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQNA9000LMEUR", "^AIX", "^NQNA9000LMCAD", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQDXUSLCEUR", "^NQUSB9572LMAUDN", "^NQDXUSLCG", "^CAPEXA", "^CPQ", "^CPQNTR", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^DWANQTL", "^MSH", "^NDX", "^NQGXGBLMJPY", "^QCRD", "^NQUSB9570LMGBPN", "^IXCO", "^NQGXJPLMJPY", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^DWARJFMU", "^NQUSB9572LMEUR", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQUSB9572LMCAD", "^NQSXY", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQUSB9000LMN", "^NQDXUSLC", "^NQUSB9570LMAUDN", "^NQGXGBLMJPYN", "^NQUSB9572LMEURN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQUSB9570LM", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQG9000LMAUD", "^NQGXJPLMGBPN", "^QMI", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQNALMAUD", "^NQNA9000LMN", "^NQVMVUS", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQFGSL", "^NQUSB9570LMCADN", "^NQDMXKRLMEUR", "^MNX1", "^NQNALMAUDN", "^GMB", "^NQG9000LMEURN", "^CAPEXAN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB9570LMAUD", "^NQSHYLN", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQDOGN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^NQUSB9572LMJPY", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQBUY", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB9572LM", "^NQGXJPLM", "^NQNA9000LMAUD", "^NQUSB9570LMGBP", "^NQUSBLMGBP", "^NQNALMN", "^NQUSB9000LMAUD", "^NQUSLGN", "^NQNA9000LM", "^NQUSB9570LMEURN", "^QFON", "^NQGXJPLMAUDN", "^NQCAPST", "^NQ96DIVUS", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQGMOI", "^NQDMXKRN", "^NQUSB9570LMN", "^XQC", "^NQCRDN", "^NQUSB9572LMJPYN", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NDXCAD", "^NQDXUSMLTCG", "^NQNA9000LMJPYN", "^NQFFUSMN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^XQO", "^DJA", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^GMBNTR", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQDMXKRLCAUD", "^XCQ", "^NQDXUSMEGAN", "^NQNALMCAD", "^AVSPY", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^XNDXNNRHKD", "^NQFFUSM", "^NQUSB9572LMGBPN", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQUSB9570LMJPYN", "^NQG9000LM", "^NQUSB9572LMAUD", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFGSLN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NDXT", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDXUSLCGN", "^NQVMVUSN", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQG9000LMGBPN", "^NQDMXJPLMCADN", "^NQDVRIS", "^NQUSB9570LMCAD", "^NQUSB9570LMEUR", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^DWUSSR", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQUSB9572LMGBP", "^NQNA9000LMCADN"],
        symbol: "AAPL"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 1.82,
                estimate: 1.54
              }, {
                date: "4Q2020",
                actual: 2.03,
                estimate: 1.64
              }, {
                date: "1Q2021",
                actual: 2.03,
                estimate: 1.78
              }, {
                date: "2Q2021",
                actual: 2.17,
                estimate: 1.92
              }],
              currentQuarterEstimate: 2.07,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635278400]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 110360000000,
                earnings: 16571000000
              }, {
                date: 2019,
                revenue: 125843000000,
                earnings: 39240000000
              }, {
                date: 2020,
                revenue: 143015000000,
                earnings: 44281000000
              }, {
                date: 2021,
                revenue: 168088000000,
                earnings: 61271000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 37154000000,
                earnings: 13893000000
              }, {
                date: "4Q2020",
                revenue: 43076000000,
                earnings: 15463000000
              }, {
                date: "1Q2021",
                revenue: 41706000000,
                earnings: 15457000000
              }, {
                date: "2Q2021",
                revenue: 46152000000,
                earnings: 16458000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.12003274,
        marketCap: 2321142251520,
        forwardPE: 30.519249,
        priceToBook: 16.37153,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 511108200000,
        priceHint: 2,
        totalCash: 130256003000,
        floatShares: 7506925463,
        ebitda: 80815996928,
        shortRatio: 1.99,
        targetPriceHigh: 384,
        targetPriceLow: 280,
        targetPriceMean: 337.04,
        targetPriceMedian: 338,
        heldPercentInsiders: 0.08,
        heldPercentInstitutions: 71.784,
        postMarketChangePercent: -0.051754322,
        postMarketTime: 1634947187,
        postMarketPrice: 309,
        postMarketChange: -0.16000366,
        regularMarketChange: -1.6000061,
        regularMarketChangePercent: -0.51486874,
        regularMarketTime: 1634932803,
        regularMarketPrice: 309.16,
        regularMarketDayHigh: 311.09,
        regularMarketDayRange: "307.8 - 311.09",
        regularMarketDayLow: 307.8,
        regularMarketVolume: 17449332,
        sharesShort: 47171313,
        sharesShortPrevMonth: 45696881,
        shortPercentFloat: 0.63,
        regularMarketPreviousClose: 310.76,
        bid: 309,
        ask: 309,
        bidSize: 8,
        askSize: 9,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_21835",
        fullExchangeName: "NasdaqGS",
        shortName: "Microsoft Corporation",
        longName: "Microsoft Corporation",
        regularMarketOpen: 310.4,
        averageDailyVolume3Month: 22362241,
        averageDailyVolume10Day: 20920162,
        beta: 0.802645,
        fiftyTwoWeekLowChange: 109.54001,
        fiftyTwoWeekLowChangePercent: 0.54874265,
        fiftyTwoWeekRange: "199.62 - 311.09",
        fiftyTwoWeekHighChange: -1.9299927,
        fiftyTwoWeekHighChangePercent: -0.006203969,
        fiftyTwoWeekLow: 199.62,
        fiftyTwoWeekHigh: 311.09,
        dividendDate: 1639008000,
        exDividendDate: 1637107200,
        earningsTimestamp: 1635278400,
        earningsTimestampStart: 1635278400,
        earningsTimestampEnd: 1635278400,
        trailingAnnualDividendRate: 2.24,
        trailingPE: 38.40497,
        pegRatio: 2.28,
        dividendsPerShare: 2.14,
        dividendRate: 2.48,
        trailingAnnualDividendYield: 0.0072081345,
        dividendYield: 0.8,
        revenue: 168087994000,
        priceToSales: 13.80909,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 8.05,
        epsForward: 10.13,
        epsCurrentYear: 8.81,
        epsNextQuarter: 2.23,
        priceEpsCurrentYear: 35.091938,
        priceEpsNextQuarter: 138.63676,
        sharesOutstanding: 7507899904,
        bookValue: 18.884,
        fiftyDayAverage: 297.38257,
        fiftyDayAverageChange: 11.777435,
        fiftyDayAverageChangePercent: 0.03960365,
        twoHundredDayAverage: 276.02765,
        twoHundredDayAverageChange: 33.132355,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQGMOIN", "^NQGS", "^NQNALMEURN", "^NQUSB9000LMJPYN", "^NQUSB9530LM", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^DVGCADN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQUSB9537LMAUDN", "^NQNA9000LMGBPN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQFFUSHYN", "^NQUSBLMJPY", "^NDXCHF", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQUSB9537LMN", "^AZM", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQDXUSLCEUR", "^NQDXUSLCG", "^CAPEXA", "^CPQ", "^CPQNTR", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQUSB9537LM", "^NQDM9000LMJPYN", "^NQNALMJPY", "^DAA", "^MSH", "^NDX", "^NQGXGBLMJPY", "^QCRD", "^NQUSB9537LMGBPN", "^IXCO", "^NQGXJPLMJPY", "^NQUSB9530LMCAD", "^NQUSB9530LMGBPN", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9530LMEUR", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB9530LMN", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^DWARJFMU", "^NQUSB9530LMGBP", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQUSB9000LMN", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQG9000LMAUD", "^NQGXJPLMGBPN", "^QMI", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQNALMAUD", "^NQNA9000LMN", "^NQVMVUS", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQUSB9530LMJPYN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQUSB9537LMAUD", "^NQDMXKRLMEUR", "^NQUSB9537LMCADN", "^MNX1", "^NQNALMAUDN", "^GMB", "^NQG9000LMEURN", "^CAPEXAN", "^NQDM9000LMCADN", "^NQFFUSHY", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB9537LMGBP", "^MSFSY", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^XMI", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQGXJPLM", "^NQNA9000LMAUD", "^NQUSBLMGBP", "^NQNALMN", "^NQUSB9537LMJPYN", "^NQUSB9000LMAUD", "^NQUSLGN", "^NQNA9000LM", "^NQFFUSLV", "^NQGXJPLMAUDN", "^NQCAPST", "^NQUSB9530LMEURN", "^NQ96DIVUS", "^NQUSB9530LMAUD", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQGMOI", "^NQUSB9537LMEURN", "^NQDMXKRN", "^XQC", "^NQCRDN", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NDXCAD", "^NQDXUSMLTCG", "^NQFFUSLVN", "^NQNA9000LMJPYN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^XQO", "^DJA", "^DAAXMLPREIT", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^GMBNTR", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQDMXKRLCAUD", "^XCQ", "^NQNALMCAD", "^NQUSB9530LMJPY", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^XNDXNNRHKD", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQUSB9537LMEUR", "^XNDXNNRCAD", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQG9000LM", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQUSB9530LMCADN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NDXT", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDXUSLCGN", "^NQVMVUSN", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9537LMCAD", "^NQUSB9000LMGBPN", "^NQG9000LMGBPN", "^NQDMXJPLMCADN", "^NQDMXGBLMAUD", "^NQUSB9530LMAUDN", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQNA9000LMCADN", "^NQUSB9537LMJPY"],
        symbol: "MSFT"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 12.27,
                estimate: 14.13
              }, {
                date: "4Q2020",
                actual: -0.57,
                estimate: -4.28
              }, {
                date: "1Q2021",
                actual: -5.26,
                estimate: -5.87
              }, {
                date: "2Q2021",
                actual: -2.55,
                estimate: -2.04
              }],
              currentQuarterEstimate: 32.73,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635969600]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 12681000000,
                earnings: 2341000000
              }, {
                date: 2018,
                revenue: 14527000000,
                earnings: 3998000000
              }, {
                date: 2019,
                revenue: 15066000000,
                earnings: 4865000000
              }, {
                date: 2020,
                revenue: 6796000000,
                earnings: 59000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 2640000000,
                earnings: 801000000
              }, {
                date: "4Q2020",
                revenue: 1238000000,
                earnings: -165000000
              }, {
                date: "1Q2021",
                revenue: 1141000000,
                earnings: -55000000
              }, {
                date: "2Q2021",
                revenue: 2160000000,
                earnings: -167000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.038467675,
        marketCap: 98321391616,
        forwardPE: 24.467049,
        priceToBook: 20.487946,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 922890600000,
        priceHint: 2,
        totalCash: 11731999700,
        floatShares: 40931324,
        ebitda: 979000000,
        shortRatio: 3.21,
        targetPriceHigh: 3100,
        targetPriceLow: 1890,
        targetPriceMean: 2537.86,
        targetPriceMedian: 2519.5,
        heldPercentInsiders: 0.261,
        heldPercentInstitutions: 93.224,
        postMarketChangePercent: -0.024642544,
        postMarketTime: 1634945304,
        postMarketPrice: 2394,
        postMarketChange: -0.5900879,
        regularMarketChange: -16.539795,
        regularMarketChangePercent: -0.685977,
        regularMarketTime: 1634932804,
        regularMarketPrice: 2394.59,
        regularMarketDayHigh: 2438.96,
        regularMarketDayRange: "2385.715 - 2438.96",
        regularMarketDayLow: 2385.715,
        regularMarketVolume: 161944,
        sharesShort: 909411,
        sharesShortPrevMonth: 823704,
        shortPercentFloat: 2.22,
        regularMarketPreviousClose: 2411.13,
        bid: 2393.24,
        ask: 2396.96,
        bidSize: 8,
        askSize: 10,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_33254",
        fullExchangeName: "NasdaqGS",
        shortName: "Booking Holdings Inc. Common St",
        longName: "Booking Holdings Inc.",
        regularMarketOpen: 2407.11,
        averageDailyVolume3Month: 283327,
        averageDailyVolume10Day: 244487,
        beta: 1.215873,
        fiftyTwoWeekLowChange: 805.5901,
        fiftyTwoWeekLowChangePercent: 0.5069793,
        fiftyTwoWeekRange: "1589.0 - 2540.0",
        fiftyTwoWeekHighChange: -145.40991,
        fiftyTwoWeekHighChangePercent: -0.057247996,
        fiftyTwoWeekLow: 1589,
        fiftyTwoWeekHigh: 2540,
        earningsTimestamp: 1635969600,
        earningsTimestampStart: 1635969600,
        earningsTimestampEnd: 1635969600,
        trailingPE: 238.12552,
        pegRatio: 0.28,
        dividendsPerShare: 0,
        revenue: 7178999800,
        priceToSales: 13.695695,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 10.056,
        epsForward: 97.87,
        epsCurrentYear: 40.52,
        epsNextQuarter: 15.12,
        priceEpsCurrentYear: 59.096497,
        priceEpsNextQuarter: 158.37236,
        sharesOutstanding: 41059800,
        bookValue: 116.878,
        fiftyDayAverage: 2408.671,
        fiftyDayAverageChange: -14.080811,
        fiftyDayAverageChangePercent: -0.005845884,
        twoHundredDayAverage: 2305.888,
        twoHundredDayAverageChange: 88.70215,
        symbol: "BKNG"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 16.4,
                estimate: 11.21
              }, {
                date: "4Q2020",
                actual: 22.3,
                estimate: 15.99
              }, {
                date: "1Q2021",
                actual: 26.29,
                estimate: 15.88
              }, {
                date: "2Q2021",
                actual: 27.26,
                estimate: 19.29
              }],
              currentQuarterEstimate: 23.47,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: []
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 110855000000,
                earnings: 12662000000
              }, {
                date: 2018,
                revenue: 136819000000,
                earnings: 30736000000
              }, {
                date: 2019,
                revenue: 161857000000,
                earnings: 34343000000
              }, {
                date: 2020,
                revenue: 182527000000,
                earnings: 40269000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 46173000000,
                earnings: 11247000000
              }, {
                date: "4Q2020",
                revenue: 56898000000,
                earnings: 15227000000
              }, {
                date: "1Q2021",
                revenue: 55314000000,
                earnings: 17930000000
              }, {
                date: "2Q2021",
                revenue: 61880000000,
                earnings: 18525000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.065524116,
        marketCap: 1841239556096,
        forwardPE: 26.163065,
        priceToBook: 7.791642,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1092922200000,
        priceHint: 2,
        totalCash: 135863001000,
        floatShares: 561007576,
        ebitda: 75552997376,
        shortRatio: 1.48,
        targetPriceHigh: 3425,
        targetPriceLow: 2700,
        targetPriceMean: 3106.11,
        targetPriceMedian: 3100,
        heldPercentInsiders: 0.043,
        heldPercentInstitutions: 67.122,
        postMarketChangePercent: -0.135618,
        postMarketTime: 1634947184,
        postMarketPrice: 2768.74,
        postMarketChange: -3.76001,
        regularMarketChange: -83.11011,
        regularMarketChangePercent: -2.9104152,
        regularMarketTime: 1634932803,
        regularMarketPrice: 2772.5,
        regularMarketDayHigh: 2831.17,
        regularMarketDayRange: "2743.74 - 2831.17",
        regularMarketDayLow: 2743.74,
        regularMarketVolume: 1506075,
        sharesShort: 1772283,
        sharesShortPrevMonth: 2439826,
        regularMarketPreviousClose: 2855.61,
        bid: 2765.01,
        ask: 2769.99,
        bidSize: 9,
        askSize: 8,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_29096",
        fullExchangeName: "NasdaqGS",
        shortName: "Alphabet Inc.",
        longName: "Alphabet Inc.",
        regularMarketOpen: 2807.02,
        averageDailyVolume3Month: 1077656,
        averageDailyVolume10Day: 961737,
        beta: 1.025925,
        fiftyTwoWeekLowChange: 1257.88,
        fiftyTwoWeekLowChangePercent: 0.83049214,
        fiftyTwoWeekRange: "1514.62 - 2936.41",
        fiftyTwoWeekHighChange: -163.90991,
        fiftyTwoWeekHighChangePercent: -0.05581983,
        fiftyTwoWeekLow: 1514.62,
        fiftyTwoWeekHigh: 2936.41,
        trailingPE: 30.074741,
        pegRatio: 1.35,
        dividendsPerShare: 0,
        revenue: 220265005000,
        priceToSales: 8.359201,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 92.187,
        epsForward: 105.97,
        epsCurrentYear: 100.95,
        epsNextQuarter: 25.34,
        priceEpsCurrentYear: 27.464092,
        priceEpsNextQuarter: 109.411995,
        sharesOutstanding: 320168000,
        bookValue: 355.83,
        fiftyDayAverage: 2811.2053,
        fiftyDayAverageChange: -38.705322,
        fiftyDayAverageChangePercent: -0.013768231,
        twoHundredDayAverage: 2602.0059,
        twoHundredDayAverageChange: 170.49414,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^QIV", "^NQGMOIN", "^NQUSB9535LMGBP", "^NQGS", "^NQNALMEURN", "^NQUSB9000LMJPYN", "^NQUSB9530LM", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQPRCE", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^WEALTHGN", "^WEALTHGL", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^NDX", "^NQGXGBLMJPY", "^IXCO", "^NQGXJPLMJPY", "^NQUSB9530LMCAD", "^NQUSB9530LMGBPN", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9530LMEUR", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB9530LMN", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQUSB9530LMGBP", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQUSB9000LMN", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSB9535LMAUDN", "^NQG9000LMAUD", "^NQGXJPLMGBPN", "^QMI", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQDMXGBLMJPY", "^NQNALMAUD", "^NQNA9000LMN", "^NQGXGBLMAUD", "^NQUSB9530LMJPYN", "^NQUSB9535LMGBPN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQDMXKRLMEUR", "^MNX1", "^NQNALMAUDN", "^NQG9000LMEURN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^NQUSB9535LMN", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB9535LMJPY", "^NQGXJPLM", "^NQUSB9535LMCAD", "^NQNA9000LMAUD", "^NQUSB9535LMEUR", "^NQUSBLMGBP", "^NQNALMN", "^RCH", "^NQUSB9000LMAUD", "^NQUSLGN", "^NQNA9000LM", "^QFON", "^NQGXJPLMAUDN", "^NQCAPST", "^NQUSB9530LMEURN", "^NQUSB9530LMAUD", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQGMOI", "^NQDMXKRN", "^QTW", "^XQC", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NDXCAD", "^NQNA9000LMJPYN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^NQPRCEN", "^NQUSB9535LMCADN", "^XQO", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQDMXKRLCAUD", "^XCQ", "^NQNALMCAD", "^NQUSB9530LMJPY", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^XNDXNNRHKD", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDM9000LMGBPN", "^NQG9000LM", "^NQUSBLMGBPN", "^QNET", "^NQDMXKRLMN", "^NQUSB9530LMCADN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NDXT", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQUSB9535LMAUD", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQG9000LMGBPN", "^NQDMXJPLMCADN", "^RCHNTR", "^NQUSB9535LM", "^NQDMXGBLMAUD", "^NQUSB9530LMAUDN", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQUSB9535LMEURN", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQNA9000LMCADN", "^NQUSB9535LMJPYN"],
        symbol: "GOOG"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 12.37,
                estimate: 7.41
              }, {
                date: "4Q2020",
                actual: 14.09,
                estimate: 7.23
              }, {
                date: "1Q2021",
                actual: 15.79,
                estimate: 9.54
              }, {
                date: "2Q2021",
                actual: 15.12,
                estimate: 12.3
              }],
              currentQuarterEstimate: 8.93,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635451200]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 177866000000,
                earnings: 3033000000
              }, {
                date: 2018,
                revenue: 232887000000,
                earnings: 10073000000
              }, {
                date: 2019,
                revenue: 280522000000,
                earnings: 11588000000
              }, {
                date: 2020,
                revenue: 386064000000,
                earnings: 21331000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 96145000000,
                earnings: 6331000000
              }, {
                date: "4Q2020",
                revenue: 125555000000,
                earnings: 7222000000
              }, {
                date: "1Q2021",
                revenue: 108518000000,
                earnings: 8107000000
              }, {
                date: "2Q2021",
                revenue: 113080000000,
                earnings: 7778000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.013864024,
        marketCap: 1689259212800,
        forwardPE: 50.500378,
        priceToBook: 14.701631,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 863703000000,
        priceHint: 2,
        totalCash: 89894003000,
        floatShares: 454348048,
        ebitda: 59320999936,
        shortRatio: 1.63,
        targetPriceHigh: 5000,
        targetPriceLow: 3775,
        targetPriceMean: 4150.08,
        targetPriceMedian: 4100,
        heldPercentInsiders: 13.606,
        heldPercentInstitutions: 59.706,
        postMarketChangePercent: -0.16579063,
        postMarketTime: 1634947192,
        postMarketPrice: 3330.02,
        postMarketChange: -5.5300293,
        regularMarketChange: -99.45996,
        regularMarketChangePercent: -2.895478,
        regularMarketTime: 1634932802,
        regularMarketPrice: 3335.55,
        regularMarketDayHigh: 3429.84,
        regularMarketDayRange: "3331.3 - 3429.84",
        regularMarketDayLow: 3331.3,
        regularMarketVolume: 3139053,
        sharesShort: 4962116,
        sharesShortPrevMonth: 4916979,
        shortPercentFloat: 1.14,
        regularMarketPreviousClose: 3435.01,
        bid: 3335.13,
        ask: 3333,
        bidSize: 9,
        askSize: 22,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_18749",
        fullExchangeName: "NasdaqGS",
        shortName: "Amazon.com, Inc.",
        longName: "Amazon.com, Inc.",
        regularMarketOpen: 3421,
        averageDailyVolume3Month: 3032636,
        averageDailyVolume10Day: 2802487,
        beta: 1.159259,
        fiftyTwoWeekLowChange: 454.55005,
        fiftyTwoWeekLowChangePercent: 0.15777509,
        fiftyTwoWeekRange: "2881.0 - 3773.08",
        fiftyTwoWeekHighChange: -437.53003,
        fiftyTwoWeekHighChangePercent: -0.11596097,
        fiftyTwoWeekLow: 2881,
        fiftyTwoWeekHigh: 3773.08,
        earningsTimestamp: 1635451200,
        earningsTimestampStart: 1635451200,
        earningsTimestampEnd: 1635451200,
        trailingPE: 58.11569,
        pegRatio: 1.75,
        dividendsPerShare: 0,
        revenue: 443297989000,
        priceToSales: 3.810663,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 57.395,
        epsForward: 66.05,
        epsCurrentYear: 52.72,
        epsNextQuarter: 12.25,
        priceEpsCurrentYear: 63.269157,
        priceEpsNextQuarter: 272.2898,
        sharesOutstanding: 506440992,
        bookValue: 226.883,
        fiftyDayAverage: 3375.4033,
        fiftyDayAverageChange: -39.85327,
        fiftyDayAverageChangePercent: -0.011806966,
        twoHundredDayAverage: 3382.4443,
        twoHundredDayAverageChange: -46.894287,
        components: ["^NQDMXJPLMAUD", "^NQDOG", "^NQUSBLM", "^NQNA5300LMCADN", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQDM5000LMGBPN", "^NQUSB5370LMEURN", "^NQGMOIN", "^NQUSB5000LM", "^NQUSB5370LMN", "^NQGS", "^NQDM5300LMAUDN", "^NQNALMEURN", "^NQUSBLMCAD", "^AZA", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA5000LMAUDN", "^NQUSB5300LMN", "^NQUSB5300LMAUDN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQG5300LMGBP", "^NDXCHF", "^NQUSB5000LMGBPN", "^NQUSB5370LMGBP", "^NQDM5000LM", "^NQDM5000LMGBP", "^NQGXGBLMN", "^NQUSB5373LMGBPN", "^NQDMXKRLCJPY", "^NQG5000LMEUR", "^WEALTHGN", "^NQDXUSLCEUR", "^NQG5000LMCAD", "^WEALTHGL", "^NQDXUSLCG", "^NQUSB5373LM", "^CPQ", "^CPQNTR", "^NQNA5000LMAUD", "^NQDM5000LMN", "^NQDMXKRAUD", "^NQNA5300LM", "^NQUSB5373LMAUDN", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQNA5000LMCADN", "^NQNA5300LMAUDN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG5300LMN", "^NQNALMJPY", "^NQG5300LMAUD", "^DWANQTL", "^MSH", "^NDX", "^NQG5000LMJPY", "^NQGXGBLMJPY", "^NQUSB5373LMAUD", "^NQGXJPLMJPY", "^NQUSB5370LMAUD", "^NQUSB5300LMEUR", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB5300LMCAD", "^NQDM5300LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB5000LMGBP", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQUSB5373LMEUR", "^NQUSB5300LMCADN", "^NQDMXJPLMGBPN", "^NQG5300LMJPYN", "^NQUSB5300LMJPY", "^NQDMXJPLMN", "^NQUSB5373LMCAD", "^NQNA5000LMJPY", "^NQUSB5373LMCADN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQNA5000LMGBPN", "^NQDMXKRLCEUR", "^NQNA5300LMJPY", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQG5300LMEURN", "^NQUSB5370LMCADN", "^NQUSBLMEURN", "^INDS", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQDM5300LMN", "^NQUSMLTCG", "^NQGXJPLMGBPN", "^QMI", "^IXIC", "^NQDM5300LMCAD", "^NQNALM", "^NQUS500LC", "^NQDM5300LMCADN", "^NQDM5300LMEUR", "^NQDMXGBLMJPY", "^NQFFUSGN", "^NQNALMAUD", "^NQDXUSLCN", "^NQG5000LMEURN", "^NQGXGBLMAUD", "^NQUSB5373LMJPY", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQNA5300LMCAD", "^NQUSB5000LMAUD", "^NQG5000LMJPYN", "^NQDMXKRLMEUR", "^MNX1", "^NQUSB5000LMEURN", "^NQNALMAUDN", "^NQUSB5370LMAUDN", "^NQDM5000LMCAD", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQNA5300LMEUR", "^NQNA5300LMGBPN", "^NQNA5300LMN", "^AMZSY", "^NQDMXGBLMJPYN", "^NQDOGN", "^NQDM5000LMEUR", "^NQDM5300LM", "^NQDM5000LMJPYN", "^NQDMXKRLMJPY", "^NQG5000LM", "^NQSSRE", "^NQUSBLMJPYN", "^NQDMXGBLMCAD", "^NQUSB5000LMJPYN", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDM5000LMEURN", "^NQUSB5300LMEURN", "^RMIVG20", "^NQDMXKRAUDN", "^NQUSB5373LMEURN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQG5300LMCADN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQUSB5370LM", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQGXJPLM", "^NQUSB5370LMGBPN", "^NQG5300LM", "^NQUSB5000LMN", "^NQG5300LMJPY", "^NQUSBLMGBP", "^NQUSB5300LMJPYN", "^NQDM5300LMEURN", "^NQNA5300LMAUD", "^NQNALMN", "^NQG5000LMCADN", "^RCH", "^NQUSLGN", "^NQDM5300LMJPYN", "^NQUSB5373LMN", "^NQUSB5370LMJPY", "^NQDM5000LMJPY", "^NQG5300LMCAD", "^NQGXJPLMAUDN", "^NQUSB5370LMEUR", "^NQUSB5000LMCADN", "^NQUSB5370LMCAD", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQUSB5300LMAUD", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA5000LMCAD", "^NQGMOI", "^NQDMXKRN", "^NQNA5000LMEUR", "^QTW", "^XQC", "^NQDM5000LMCADN", "^NQDMXJPLMEURN", "^NDXCAD", "^NQDXUSMLTCG", "^NQFFUSMN", "^NQDMXJPLM", "^NQG5000LMN", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQG5000LMGBP", "^NQGXGBLMGBP", "^NQUSB5373LMJPYN", "^NQDMXKRCAD", "^XQO", "^NQG5300LMEUR", "^NQDM5300LMGBP", "^NQDXUSLCEURN", "^NQUSB5000LMJPY", "^NQG5000LMGBPN", "^NQDMXKRLCAUD", "^XCQ", "^NQDXUSMEGAN", "^NQNALMCAD", "^NQNA5000LMGBP", "^NQUSB5300LMGBP", "^NQNA5300LMEURN", "^NQNA5000LM", "^NQGXJPLMEURN", "^NQNA5300LMGBP", "^NQUSB5300LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQNA5300LMJPYN", "^NQFFUSG", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQUSB5000LMAUDN", "^XNDXNNRHKD", "^NQFFUSM", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDXUSLCGBPN", "^NQG5000LMAUD", "^NQDM5300LMAUD", "^NQUSB5000LMCAD", "^NQUSB5373LMGBP", "^NQUSB5000LMEUR", "^NQUSBLMGBPN", "^QNET", "^NQG5300LMGBPN", "^NQDMXKRLMN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQNA5000LMJPYN", "^NDXX", "^NQDXUSLCGN", "^NQDM5000LMAUDN", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQG5000LMAUDN", "^NQDMXJPLMCADN", "^NQNA5000LMEURN", "^RCHNTR", "^NQSSREN", "^NQDMXGBLMAUD", "^NQNA5000LMN", "^NQUSBLMAUDN", "^NQG5300LMAUDN", "^DWUSSR", "^NQDMXJPLMCAD", "^NQUSB5370LMJPYN", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUSB5300LMGBPN", "^NQUS500LCN", "^NQDM5300LMGBPN", "^NQDM5000LMAUD"],
        symbol: "AMZN"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 2.71,
                estimate: 1.91
              }, {
                date: "4Q2020",
                actual: 3.88,
                estimate: 3.22
              }, {
                date: "1Q2021",
                actual: 3.3,
                estimate: 2.37
              }, {
                date: "2Q2021",
                actual: 3.61,
                estimate: 3.03
              }],
              currentQuarterEstimate: 3.19,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635192000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 40653000000,
                earnings: 15934000000
              }, {
                date: 2018,
                revenue: 55838000000,
                earnings: 22112000000
              }, {
                date: 2019,
                revenue: 70697000000,
                earnings: 18485000000
              }, {
                date: 2020,
                revenue: 85965000000,
                earnings: 29146000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 21470000000,
                earnings: 7846000000
              }, {
                date: "4Q2020",
                revenue: 28072000000,
                earnings: 11219000000
              }, {
                date: "1Q2021",
                revenue: 26171000000,
                earnings: 9497000000
              }, {
                date: "2Q2021",
                revenue: 29077000000,
                earnings: 10394000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.045637205,
        marketCap: 915218432000,
        forwardPE: 20.262794,
        priceToBook: 6.636477,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1337347800000,
        priceHint: 2,
        totalCash: 64079999000,
        floatShares: 2372252409,
        ebitda: 52079001600,
        shortRatio: 1.63,
        targetPriceHigh: 500,
        targetPriceLow: 225,
        targetPriceMean: 418.02,
        targetPriceMedian: 425,
        heldPercentInsiders: 0.602,
        heldPercentInstitutions: 80.561,
        postMarketChangePercent: -0.11089781,
        postMarketTime: 1634947199,
        postMarketPrice: 324.25,
        postMarketChange: -0.35998535,
        regularMarketChange: -17.27002,
        regularMarketChangePercent: -5.051486,
        regularMarketTime: 1634932803,
        regularMarketPrice: 324.61,
        regularMarketDayHigh: 329.59,
        regularMarketDayRange: "321.11 - 329.59",
        regularMarketDayLow: 321.11,
        regularMarketVolume: 35224543,
        sharesShort: 25835340,
        sharesShortPrevMonth: 27551342,
        shortPercentFloat: 1.09,
        regularMarketPreviousClose: 341.88,
        bid: 324.2,
        ask: 324.25,
        bidSize: 9,
        askSize: 8,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_20765463",
        fullExchangeName: "NasdaqGS",
        shortName: "Facebook, Inc.",
        longName: "Facebook, Inc.",
        regularMarketOpen: 326.345,
        averageDailyVolume3Month: 16522787,
        averageDailyVolume10Day: 19519587,
        beta: 1.322222,
        fiftyTwoWeekLowChange: 79.999985,
        fiftyTwoWeekLowChangePercent: 0.32705116,
        fiftyTwoWeekRange: "244.61 - 384.33",
        fiftyTwoWeekHighChange: -59.72,
        fiftyTwoWeekHighChangePercent: -0.15538731,
        fiftyTwoWeekLow: 244.61,
        fiftyTwoWeekHigh: 384.33,
        earningsTimestamp: 1635192000,
        earningsTimestampStart: 1635192000,
        earningsTimestampEnd: 1635192000,
        trailingPE: 24.105896,
        pegRatio: 0.85,
        dividendsPerShare: 0,
        revenue: 104790000000,
        priceToSales: 8.733833,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 13.466,
        epsForward: 16.02,
        epsCurrentYear: 14.13,
        epsNextQuarter: 4.07,
        priceEpsCurrentYear: 22.973106,
        priceEpsNextQuarter: 79.75675,
        sharesOutstanding: 2383810048,
        bookValue: 48.913,
        fiftyDayAverage: 348.30685,
        fiftyDayAverageChange: -23.696869,
        fiftyDayAverageChangePercent: -0.06803446,
        twoHundredDayAverage: 340.1327,
        twoHundredDayAverageChange: -15.522705,
        components: ["^NQDMXJPLMAUD", "^NQDOG", "^NQUSBLM", "^QIV", "^NQUS500LCGN", "^NQGMOIN", "^NQUSB9535LMGBP", "^NQGS", "^NQNALMEURN", "^NQUSB9000LMJPYN", "^NQUSB9530LM", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQPRCE", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^WEALTHGN", "^WEALTHGL", "^CAPEXA", "^CPQ", "^CPQNTR", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^DWANQTL", "^MSH", "^NDX", "^NQGXGBLMJPY", "^IXCO", "^NQGXJPLMJPY", "^NQUSB9530LMCAD", "^NQUSB9530LMGBPN", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9530LMEUR", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB9530LMN", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^DWARJFMU", "^NQUSB9530LMGBP", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQUSB9000LMN", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSB9535LMAUDN", "^NQUSMLTCG", "^NQG9000LMAUD", "^NQGXJPLMGBPN", "^QMI", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQFFUSGN", "^NQNALMAUD", "^NQNA9000LMN", "^NQGXGBLMAUD", "^NQUSB9530LMJPYN", "^NQUSB9535LMGBPN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQFGSL", "^NQDMXKRLMEUR", "^MNX1", "^NQNALMAUDN", "^NQG9000LMEURN", "^CAPEXAN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQDOGN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^NQUSB9535LMN", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^RMIVG20", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB9535LMJPY", "^NQGXJPLM", "^NQUSB9535LMCAD", "^NQNA9000LMAUD", "^NQUSB9535LMEUR", "^NQUSBLMGBP", "^NQNALMN", "^RCH", "^NQUSB9000LMAUD", "^NQUSLGN", "^NQNA9000LM", "^NQGXJPLMAUDN", "^NQCAPST", "^NQUSB9530LMEURN", "^NQUSB9530LMAUD", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQGMOI", "^NQDMXKRN", "^QTW", "^XQC", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NDXCAD", "^NQNA9000LMJPYN", "^NQFFUSMN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^NQPRCEN", "^NQUSB9535LMCADN", "^XQO", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQDMXKRLCAUD", "^XCQ", "^NQNALMCAD", "^NQUSB9530LMJPY", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQFFUSG", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^XNDXNNRHKD", "^NQFFUSM", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDM9000LMGBPN", "^NQG9000LM", "^NQUSBLMGBPN", "^QNET", "^NQDMXKRLMN", "^NQFFUSQ", "^NQFGSLN", "^NQUSB9530LMCADN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NDXT", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQUSB9535LMAUD", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQFFUSQN", "^NQG9000LMGBPN", "^NQDMXJPLMCADN", "^RCHNTR", "^NQUSB9535LM", "^NQDMXGBLMAUD", "^NQUSB9530LMAUDN", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^DWUSSR", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQUSB9535LMEURN", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQNA9000LMCADN", "^NQUSB9535LMJPYN"],
        symbol: "FB"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 2.3,
                estimate: 2.42
              }, {
                date: "4Q2020",
                actual: 2.15,
                estimate: 2.27
              }, {
                date: "1Q2021",
                actual: 3.05,
                estimate: 2.53
              }, {
                date: "2Q2021",
                actual: 2.93,
                estimate: 2.6
              }],
              currentQuarterEstimate: 3.04,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1628253000, 1628598600]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 240651000000,
                earnings: 44940000000
              }, {
                date: 2018,
                revenue: 247837000000,
                earnings: 4021000000
              }, {
                date: 2019,
                revenue: 254616000000,
                earnings: 81417000000
              }, {
                date: 2020,
                revenue: 245510000000,
                earnings: 42521000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 63024000000,
                earnings: 30137000000
              }, {
                date: "4Q2020",
                revenue: 64381000000,
                earnings: 35835000000
              }, {
                date: "1Q2021",
                revenue: 64599000000,
                earnings: 11711000000
              }, {
                date: "2Q2021",
                revenue: 69114000000,
                earnings: 28094000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.030710394,
        marketCap: 655007154176,
        forwardPE: 23.04701,
        priceToBook: 0.00092948106,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 831648600000,
        priceHint: 2,
        totalCash: 144058008000,
        floatShares: 2485341,
        ebitda: 147552993280,
        shortRatio: 1.96,
        targetPriceHigh: 329,
        targetPriceLow: 327,
        targetPriceMean: 328,
        targetPriceMedian: 328,
        heldPercentInsiders: 0.184,
        heldPercentInstitutions: 67.396,
        postMarketChangePercent: -0.0760618,
        postMarketTime: 1634946782,
        postMarketPrice: 289.02,
        postMarketChange: -0.220001,
        regularMarketChange: 2.419983,
        regularMarketChangePercent: 0.8437288,
        regularMarketTime: 1634932944,
        regularMarketPrice: 289.24,
        regularMarketDayHigh: 289.8,
        regularMarketDayRange: "286.24 - 289.8",
        regularMarketDayLow: 286.24,
        regularMarketVolume: 2740513,
        sharesShort: 9806677,
        sharesShortPrevMonth: 10306575,
        shortPercentFloat: 0.83,
        regularMarketPreviousClose: 286.82,
        bid: 289.06,
        ask: 289.24,
        bidSize: 9,
        askSize: 22,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_255251",
        fullExchangeName: "NYSE",
        shortName: "Berkshire Hathaway Inc. New",
        longName: "Berkshire Hathaway Inc.",
        regularMarketOpen: 287.66,
        averageDailyVolume3Month: 3991683,
        averageDailyVolume10Day: 3318575,
        beta: 0.908465,
        fiftyTwoWeekLowChange: 91.42999,
        fiftyTwoWeekLowChangePercent: 0.4622112,
        fiftyTwoWeekRange: "197.81 - 295.08",
        fiftyTwoWeekHighChange: -5.8399963,
        fiftyTwoWeekHighChangePercent: -0.019791232,
        fiftyTwoWeekLow: 197.81,
        fiftyTwoWeekHigh: 295.08,
        earningsTimestamp: 1596889800,
        earningsTimestampStart: 1628253000,
        earningsTimestampEnd: 1628598600,
        trailingPE: 0.004235643,
        pegRatio: 1.04,
        dividendsPerShare: 0,
        revenue: 261118001000,
        priceToSales: 2.5084717,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 68287.15,
        epsForward: 12.55,
        epsCurrentYear: 11.88,
        epsNextQuarter: 2.85,
        priceEpsCurrentYear: 24.3468,
        priceEpsNextQuarter: 101.48772,
        sharesOutstanding: 1325369984,
        bookValue: 311184.38,
        fiftyDayAverage: 279.402,
        fiftyDayAverageChange: 9.837982,
        fiftyDayAverageChangePercent: 0.03521085,
        twoHundredDayAverage: 280.62198,
        twoHundredDayAverageChange: 8.618011,
        symbol: "BRK-B"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 0.8,
                estimate: 1.03
              }, {
                date: "1Q2021",
                actual: 0.93,
                estimate: 0.79
              }, {
                date: "2Q2021",
                actual: 1.45,
                estimate: 0.98
              }, {
                date: "3Q2021",
                actual: 1.86,
                estimate: 1.59
              }],
              currentQuarterEstimate: 1.91,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1634746080]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 11759000000,
                earnings: -1962000000
              }, {
                date: 2018,
                revenue: 21461000000,
                earnings: -976000000
              }, {
                date: 2019,
                revenue: 24578000000,
                earnings: -862000000
              }, {
                date: 2020,
                revenue: 31536000000,
                earnings: 721000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 10744000000,
                earnings: 270000000
              }, {
                date: "1Q2021",
                revenue: 10389000000,
                earnings: 438000000
              }, {
                date: "2Q2021",
                revenue: 11958000000,
                earnings: 1142000000
              }, {
                date: "3Q2021",
                revenue: 13757000000,
                earnings: 1618000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.30829406,
        marketCap: 911290138624,
        forwardPE: 117.075935,
        priceToBook: 33.558857,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1277818200000,
        priceHint: 2,
        totalCash: 16094999600,
        floatShares: 808200360,
        ebitda: 7166000128,
        shortRatio: 1.56,
        targetPriceHigh: 1206,
        targetPriceLow: 67,
        targetPriceMean: 732.87,
        targetPriceMedian: 788,
        heldPercentInsiders: 18.962,
        heldPercentInstitutions: 41.229,
        postMarketChangePercent: -0.047268566,
        postMarketTime: 1634947198,
        postMarketPrice: 909.25,
        postMarketChange: -0.42999268,
        regularMarketChange: 15.679993,
        regularMarketChangePercent: 1.7539141,
        regularMarketTime: 1634932803,
        regularMarketPrice: 909.68,
        regularMarketDayHigh: 910,
        regularMarketDayRange: "891.0 - 910.0",
        regularMarketDayLow: 891,
        regularMarketVolume: 22880835,
        sharesShort: 29205723,
        sharesShortPrevMonth: 27432219,
        shortPercentFloat: 3.59,
        regularMarketPreviousClose: 894,
        bid: 909,
        ask: 909.3,
        bidSize: 12,
        askSize: 14,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_27444752",
        fullExchangeName: "NasdaqGS",
        shortName: "Tesla, Inc.",
        longName: "Tesla, Inc.",
        regularMarketOpen: 895.5,
        averageDailyVolume3Month: 18889275,
        averageDailyVolume10Day: 19390500,
        beta: 1.89365,
        fiftyTwoWeekLowChange: 530.57,
        fiftyTwoWeekLowChangePercent: 1.3995147,
        fiftyTwoWeekRange: "379.11 - 910.0",
        fiftyTwoWeekHighChange: -0.32000732,
        fiftyTwoWeekHighChangePercent: -0.0003516564,
        fiftyTwoWeekLow: 379.11,
        fiftyTwoWeekHigh: 910,
        earningsTimestamp: 1634746080,
        earningsTimestampStart: 1634746080,
        earningsTimestampEnd: 1634746080,
        trailingPE: 296.21622,
        pegRatio: 2.09,
        dividendsPerShare: 0,
        revenue: 46848000000,
        priceToSales: 19.45206,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 3.071,
        epsForward: 7.77,
        epsCurrentYear: 5.86,
        epsNextQuarter: 1.71,
        priceEpsCurrentYear: 155.23549,
        priceEpsNextQuarter: 531.97656,
        sharesOutstanding: 1001769984,
        bookValue: 27.107,
        fiftyDayAverage: 786.8474,
        fiftyDayAverageChange: 122.83258,
        fiftyDayAverageChangePercent: 0.15610725,
        twoHundredDayAverage: 695.3177,
        twoHundredDayAverageChange: 214.3623,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQNA3000LMJPY", "^NQNA3300LMGBP", "^NQNA3300LM", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQUSB3000LMJPY", "^NQDM3000LM", "^NQGS", "^NQNALMEURN", "^NQUSB3300LMGBP", "^NQUSBLMCAD", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQUSB3000LMEUR", "^NQUSB3000LMCAD", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQDM3300LMCAD", "^NQDM3300LMEUR", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^WEALTHGN", "^NQDXUSLCEUR", "^NQG3000LMEUR", "^WEALTHGL", "^NQDM3000LMCADN", "^NQDXUSLCG", "^NQUSB3000LMGBPN", "^NQDMXKRAUD", "^NQG3000LMGBPN", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM3000LMAUD", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQNALMJPY", "^NQNA3000LMCADN", "^NDX", "^NQGXGBLMJPY", "^QCRD", "^NQDM3300LMCADN", "^NQG3300LMGBPN", "^NQGXJPLMJPY", "^NQUSB3300LMCADN", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB3300LMGBPN", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQG3000LMAUDN", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQG3300LMJPY", "^NQDMXKRLCEUR", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQG3000LMJPY", "^NQUSBLMEURN", "^NQDM3000LMGBPN", "^INDS", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQDM3000LMJPY", "^NQNA3300LMCADN", "^NQGXJPLMGBPN", "^NQUSB3000LMCADN", "^QMI", "^NQNA3000LM", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQDM3300LMGBPN", "^NQNALMAUD", "^NQNA3300LMAUD", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQG3000LMCAD", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQG3300LMCADN", "^NQSSTR", "^NQFGSL", "^NQG3300LMCAD", "^NQUSB3300LMAUD", "^NQDMXKRLMEUR", "^NQG3300LMEUR", "^MNX1", "^NQDM3300LMN", "^NQNALMAUDN", "^NQDM3300LMAUDN", "^NQNA3300LMJPYN", "^NQUSB3300LMN", "^NQG3300LMAUDN", "^NQDMXKRLMCAD", "^NQUSB3300LMAUDN", "^NQDMXGBLM", "^NQNA3300LMEURN", "^NQDM3300LMJPY", "^NQDMXGBLMJPYN", "^NQG3000LMCADN", "^NQSSTRN", "^NQUSB3300LM", "^NQNA3000LMEURN", "^NQG3300LM", "^NQDMXKRLMJPY", "^NQUSB3000LMAUDN", "^NQUSBLMJPYN", "^NQNA3000LMAUD", "^NQNA3000LMJPYN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDM3000LMAUDN", "^NQUSB3300LMJPY", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQNA3000LMGBP", "^NQDMXGBLMN", "^NQDM3000LMN", "^NQG3000LM", "^NQUSB3000LMJPYN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQNA3300LMGBPN", "^NQDMXKRLCCADN", "^NQG3300LMN", "^NQGXJPLMCADN", "^QAUTO", "^NQUSB3000LMGBP", "^NQGXJPLM", "^NQUSB3000LMEURN", "^NQG3300LMEURN", "^NQDM3300LMAUD", "^NQUSBLMGBP", "^NQNALMN", "^RCH", "^NQG3300LMJPYN", "^NQNA3300LMN", "^NQUSLGN", "^NQNA3000LMGBPN", "^NQGXJPLMAUDN", "^NQUSB3000LMAUD", "^NQNA3300LMEUR", "^NQNA3300LMAUDN", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQG3000LMAUD", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA3300LMCAD", "^NQDMXKRN", "^XQC", "^NQCRDN", "^NQDMXJPLMEURN", "^NDXCAD", "^NQDXUSMLTCG", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDM3000LMEUR", "^NQDMXKRCAD", "^NQNA3300LMJPY", "^XQO", "^GRNUS", "^NQG3000LMEURN", "^NQDM3000LMCAD", "^NQDXUSLCEURN", "^NQNA3000LMAUDN", "^NQDMXKRLCAUD", "^XCQ", "^NQNALMCAD", "^NQG3000LMGBP", "^CELS", "^NQGXJPLMEURN", "^GRNTRN", "^NQG3300LMGBP", "^NQDXUSLCGBP", "^NQG3000LMJPYN", "^NQUSB3000LMN", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM3000LMGBP", "^XNDXNNRHKD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDXUSLCGBPN", "^NQNA3000LMN", "^NQDM3300LM", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFGSLN", "^NQGXJPLMAUD", "^NQUSB3000LM", "^NQDMXGBLMAUDN", "^QGREEN", "^NQDMXJPLMJPY", "^NQUSB3300LMJPYN", "^NQDMXKRLCGBPN", "^NDXX", "^NQDXUSLCGN", "^NQUS500LCG", "^NQDM3000LMEURN", "^NDXE", "^NQDMXKREURN", "^NQUSB3300LMEUR", "^NQNA3000LMCAD", "^NQNALMJPYN", "^NQG3300LMAUD", "^NQNA3000LMEUR", "^NQDMXJPLMCADN", "^RCHNTR", "^NQG3000LMN", "^NQDM3000LMJPYN", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQDM3300LMGBP", "^NQUSB3300LMEURN", "^NQDM3300LMJPYN", "^NQDMXJPLMCAD", "^NQUSB3300LMCAD", "^NQDMXJPLMEUR", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQDM3300LMEURN"],
        symbol: "TSLA"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 0.73,
                estimate: 0.64
              }, {
                date: "1Q2021",
                actual: 0.77,
                estimate: 0.7
              }, {
                date: "2Q2021",
                actual: 0.91,
                estimate: 0.82
              }, {
                date: "3Q2021",
                actual: 1.04,
                estimate: 1.01
              }],
              currentQuarterEstimate: 1.1,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1637182800]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 9714000000,
                earnings: 3047000000
              }, {
                date: 2019,
                revenue: 11716000000,
                earnings: 4141000000
              }, {
                date: 2020,
                revenue: 10918000000,
                earnings: 2796000000
              }, {
                date: 2021,
                revenue: 16675000000,
                earnings: 4332000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 4726000000,
                earnings: 1336000000
              }, {
                date: "1Q2021",
                revenue: 5003000000,
                earnings: 1457000000
              }, {
                date: "2Q2021",
                revenue: 5661000000,
                earnings: 1912000000
              }, {
                date: "3Q2021",
                revenue: 6507000000,
                earnings: 2374000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.20811063,
        marketCap: 566331899904,
        forwardPE: 48.55983,
        priceToBook: 26.824833,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 917015400000,
        priceHint: 2,
        totalCash: 19654000600,
        floatShares: 2398375000,
        ebitda: 8487000064,
        shortRatio: 0.93,
        targetPriceHigh: 300,
        targetPriceLow: 110,
        targetPriceMean: 230.45,
        targetPriceMedian: 230,
        heldPercentInsiders: 4.078,
        heldPercentInstitutions: 66.796,
        postMarketChangePercent: -0.026400404,
        postMarketTime: 1634947171,
        postMarketPrice: 227.2,
        postMarketChange: -0.05999756,
        regularMarketChange: 0.33999634,
        regularMarketChangePercent: 0.14983094,
        regularMarketTime: 1634932804,
        regularMarketPrice: 227.26,
        regularMarketDayHigh: 231.3,
        regularMarketDayRange: "225.61 - 231.3",
        regularMarketDayLow: 225.61,
        regularMarketVolume: 24938379,
        sharesShort: 22415848,
        sharesShortPrevMonth: 24041114,
        shortPercentFloat: 0.93,
        regularMarketPreviousClose: 226.92,
        bid: 227.12,
        ask: 227.2,
        bidSize: 14,
        askSize: 8,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_32307",
        fullExchangeName: "NasdaqGS",
        shortName: "NVIDIA Corporation",
        longName: "NVIDIA Corporation",
        regularMarketOpen: 228.23,
        averageDailyVolume3Month: 24798996,
        averageDailyVolume10Day: 19810037,
        beta: 1.39365,
        fiftyTwoWeekLowChange: 111.59499,
        fiftyTwoWeekLowChangePercent: 0.9648121,
        fiftyTwoWeekRange: "115.665 - 231.3",
        fiftyTwoWeekHighChange: -4.0400085,
        fiftyTwoWeekHighChangePercent: -0.01746653,
        fiftyTwoWeekLow: 115.665,
        fiftyTwoWeekHigh: 231.3,
        dividendDate: 1632355200,
        exDividendDate: 1630368000,
        earningsTimestamp: 1637182800,
        earningsTimestampStart: 1637182800,
        earningsTimestampEnd: 1637182800,
        trailingAnnualDividendRate: 0.16,
        trailingPE: 81.39684,
        pegRatio: 1.68,
        dividendsPerShare: 0.16,
        dividendRate: 0.16,
        trailingAnnualDividendYield: 0.0007050943,
        dividendYield: 0.07,
        revenue: 21897001000,
        priceToSales: 25.863445,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 2.792,
        epsForward: 4.68,
        epsCurrentYear: 4.14,
        epsNextQuarter: 1.08,
        priceEpsCurrentYear: 54.89372,
        priceEpsNextQuarter: 210.42592,
        sharesOutstanding: 2492000000,
        bookValue: 8.472,
        fiftyDayAverage: 216.37372,
        fiftyDayAverageChange: 10.886276,
        fiftyDayAverageChangePercent: 0.050312378,
        twoHundredDayAverage: 188.11191,
        twoHundredDayAverageChange: 39.148087,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQUSB9576LMGBPN", "^NQGMOIN", "^NQUSB9576LM", "^NQGS", "^NQNALMEURN", "^NQSSSEN", "^NQUSB9000LMJPYN", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQUSB9570LMJPY", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQPRCE", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQDXUSLCEUR", "^NQDXUSLCG", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^NDX", "^NQGXGBLMJPY", "^QCRD", "^NQUSB9570LMGBPN", "^SOX", "^IXCO", "^NQGXJPLMJPY", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQSSSE", "^NQUSB9000LMN", "^NQDXUSLC", "^NQUSB9570LMAUDN", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQUSB9570LM", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQG9000LMAUD", "^NQUSB9576LMGBP", "^NQGXJPLMGBPN", "^QMI", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQFFUSGN", "^NQNALMAUD", "^NQNA9000LMN", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQFGSL", "^NQUSB9570LMCADN", "^NQDMXKRLMEUR", "^MNX1", "^NQNALMAUDN", "^GMB", "^NQG9000LMEURN", "^NQUSB9576LMJPYN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB9570LMAUD", "^NQUSB9576LMAUD", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^RMIVG20", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^RSDNTR", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQGXJPLM", "^NQUSB9576LMEURN", "^NQNA9000LMAUD", "^NQUSB9570LMGBP", "^NQUSBLMGBP", "^RSD", "^NQNALMN", "^NQUSB9000LMAUD", "^NQUSLGN", "^NQNA9000LM", "^NQUSB9570LMEURN", "^SX", "^NQGXJPLMAUDN", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQGMOI", "^NQDMXKRN", "^NQUSB9570LMN", "^XQC", "^NQCRDN", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NDXCAD", "^NQDXUSMLTCG", "^NQNA9000LMJPYN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^NQPRCEN", "^XQO", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^GMBNTR", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQUSB9576LMN", "^NQDMXKRLCAUD", "^XCQ", "^NQDXUSMEGAN", "^NQNALMCAD", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQFFUSG", "^NQGXGBLMEUR", "^NQUSB9576LMJPY", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^XNDXNNRHKD", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQUSB9576LMCADN", "^XNDXNNRCAD", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQUSB9570LMJPYN", "^NQG9000LM", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFGSLN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NDXT", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDXUSLCGN", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQUSB9576LMCAD", "^NQG9000LMGBPN", "^NQUSB9576LMEUR", "^NQDMXJPLMCADN", "^NQUSB9570LMCAD", "^NQUSB9570LMEUR", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^DWUSSR", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUSB9576LMAUDN", "^NQUS500LCN", "^NQNA9000LMCADN"],
        symbol: "NVDA"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 1.12,
                estimate: 1.09
              }, {
                date: "4Q2020",
                actual: 1.42,
                estimate: 1.28
              }, {
                date: "1Q2021",
                actual: 1.38,
                estimate: 1.27
              }, {
                date: "2Q2021",
                actual: 1.49,
                estimate: 1.35
              }],
              currentQuarterEstimate: 1.54,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635278400]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 18358000000,
                earnings: 6699000000
              }, {
                date: 2018,
                revenue: 20609000000,
                earnings: 10301000000
              }, {
                date: 2019,
                revenue: 22977000000,
                earnings: 12080000000
              }, {
                date: 2020,
                revenue: 21846000000,
                earnings: 10866000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 5101000000,
                earnings: 2137000000
              }, {
                date: "4Q2020",
                revenue: 5687000000,
                earnings: 3126000000
              }, {
                date: "1Q2021",
                revenue: 5729000000,
                earnings: 3026000000
              }, {
                date: "2Q2021",
                revenue: 6130000000,
                earnings: 2575000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.0006872057,
        marketCap: 507408809984,
        forwardPE: 31.849861,
        priceToBook: 14.188499,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1205933400000,
        priceHint: 2,
        totalCash: 19239999500,
        floatShares: 1685687816,
        ebitda: 15466000384,
        shortRatio: 2.94,
        targetPriceHigh: 312,
        targetPriceLow: 202,
        targetPriceMean: 277.56,
        targetPriceMedian: 280,
        heldPercentInsiders: 0.126,
        heldPercentInstitutions: 96.741,
        postMarketChangePercent: -0.01729589,
        postMarketTime: 1634947190,
        postMarketPrice: 231.19,
        postMarketChange: -0.039993286,
        regularMarketChange: 0.98999,
        regularMarketChangePercent: 0.429982,
        regularMarketTime: 1634932803,
        regularMarketPrice: 231.23,
        regularMarketDayHigh: 232.77,
        regularMarketDayRange: "228.71 - 232.77",
        regularMarketDayLow: 228.71,
        regularMarketVolume: 3788001,
        sharesShort: 24442116,
        sharesShortPrevMonth: 25104183,
        shortPercentFloat: 1.45,
        regularMarketPreviousClose: 230.24,
        bid: 230.91,
        ask: 231.22,
        bidSize: 10,
        askSize: 8,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_38043467",
        fullExchangeName: "NYSE",
        shortName: "Visa Inc.",
        longName: "Visa Inc.",
        regularMarketOpen: 230.29,
        averageDailyVolume3Month: 7108820,
        averageDailyVolume10Day: 5772575,
        beta: 0.973015,
        fiftyTwoWeekLowChange: 52,
        fiftyTwoWeekLowChangePercent: 0.29013002,
        fiftyTwoWeekRange: "179.23 - 252.67",
        fiftyTwoWeekHighChange: -21.440002,
        fiftyTwoWeekHighChangePercent: -0.084853776,
        fiftyTwoWeekLow: 179.23,
        fiftyTwoWeekHigh: 252.67,
        dividendDate: 1630454400,
        exDividendDate: 1628726400,
        earningsTimestamp: 1635278400,
        earningsTimestampStart: 1635278400,
        earningsTimestampEnd: 1635278400,
        trailingAnnualDividendRate: 1.28,
        trailingPE: 46.76036,
        pegRatio: 2.05,
        dividendsPerShare: 1.26,
        dividendRate: 1.28,
        trailingAnnualDividendYield: 0.005559416,
        dividendYield: 0.56,
        revenue: 22646999000,
        priceToSales: 22.405123,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 4.945,
        epsForward: 7.26,
        epsCurrentYear: 5.83,
        epsNextQuarter: 1.75,
        priceEpsCurrentYear: 39.662094,
        priceEpsNextQuarter: 132.13142,
        sharesOutstanding: 1687640064,
        bookValue: 16.297,
        fiftyDayAverage: 226.558,
        fiftyDayAverageChange: 4.671997,
        fiftyDayAverageChangePercent: 0.020621639,
        twoHundredDayAverage: 231.389,
        twoHundredDayAverageChange: -0.15901184,
        components: ["^NQDMXJPLMAUD", "^NQDOG", "^NQUSBLM", "^NQG8700LMEURN", "^NQG8000LMCAD", "^NQG8000LMEUR", "^NQDXUSMLTCGN", "^NQDM8700LMJPY", "^NQG8000LMGBPN", "^NQUS500LCGN", "^NQG8700LMJPYN", "^NQG8000LMN", "^NQNALMEURN", "^NQUSBLMCAD", "^NQUSB8770LMAUD", "^NQDM8000LMCADN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA8700LMAUDN", "^NQNA8700LMGBPN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^KFTXNNR70", "^NQDM8000LMAUD", "^NQUSBLMJPY", "^NQUSB8000LMCADN", "^NQUSB8770LMAUDN", "^NQG8000LMJPY", "^NQPRCE", "^NQG8700LMAUD", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQDXUSLCEUR", "^NQUSB8000LMN", "^NQDM8700LMGBPN", "^NQDXUSLCG", "^NQNA8000LMN", "^NQUSB8773LMCAD", "^NQNA8000LMCADN", "^NQUSB8773LMEUR", "^NQDMXKRAUD", "^NQNA8000LMJPY", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQUSB8773LMJPY", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQNALMJPY", "^NQUSB8770LMGBP", "^MSH", "^NQGXGBLMJPY", "^IPYNTR", "^NQGXJPLMJPY", "^NQG8700LMGBP", "^NQUSB8700LMGBP", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^NQDMXJPLMGBPN", "^NQUSB8700LMCAD", "^NQDMXJPLMN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQUSB8770LMGBPN", "^NQDMXKRLCEUR", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQUSB8770LM", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQG8700LMCADN", "^NQDMXKRLCEURN", "^NQNA8000LMAUD", "^NQUSMLTCG", "^NQUSB8700LMGBPN", "^NQGXJPLMGBPN", "^NQDM8000LMEURN", "^NQNA8700LMN", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQG8700LMN", "^NQNALMAUD", "^NQDXUSLCN", "^NQUSB8000LMEURN", "^NQUSB8700LMEUR", "^NQGXGBLMAUD", "^NQDM8000LM", "^NQUSB8000LMGBP", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQDM8700LMAUD", "^NQFGSL", "^NQDM8000LMN", "^NQDMXKRLMEUR", "^NQUSB8000LMJPYN", "^NQNALMAUDN", "^NQG8700LM", "^NQNA8000LM", "^NQDM8000LMJPYN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^IPY", "^NQUSB8773LMGBPN", "^NQNA8700LMGBP", "^NQUSB8700LMN", "^NQDMXGBLMJPYN", "^NQDOGN", "^NQNA8000LMAUDN", "^NQNA8700LMJPYN", "^NQDM8000LMJPY", "^NQDM8700LMAUDN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQUSB8000LMAUD", "^NQDMXGBLMCAD", "^NQUSB8700LMAUDN", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQUSB8773LMN", "^NQNA8700LMEURN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQNA8000LMGBPN", "^NQDMXGBLMN", "^NQUSB8700LM", "^NQDM8700LMGBP", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQUSB8700LMCADN", "^NQDMXKRLCCADN", "^NQUSB8773LMCADN", "^NQUSB8770LMEUR", "^NQGXJPLMCADN", "^NQG8700LMCAD", "^NQDM8700LMCADN", "^NQDM8000LMCAD", "^NQUSB8770LMCAD", "^NQDM8000LMEUR", "^NQGXJPLM", "^NQDM8700LMN", "^NQG8700LMEUR", "^NQUSBLMGBP", "^NQNALMN", "^KFTX", "^NQUSLGN", "^NQG8700LMAUDN", "^NQG8000LMGBP", "^NQG8000LMJPYN", "^NQFFUSLV", "^NQGXJPLMAUDN", "^NQUSB8773LMAUDN", "^NQCAPST", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSB8770LMJPYN", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NQUSB8773LM", "^NQNA8000LMGBP", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA8700LMAUD", "^NQDMXKRN", "^NQUSB8770LMJPY", "^NQUSB8773LMGBP", "^NQDMXJPLMEURN", "^NQDXUSMLTCG", "^NQFFUSLVN", "^NQFFUSMN", "^NQG8700LMGBPN", "^NQUSB8770LMEURN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQPRCEN", "^DJA", "^NQG8700LMJPY", "^NQUSB8700LMJPY", "^NQNA8700LMCADN", "^NQDXUSLCEURN", "^NQG8000LMEURN", "^NQDMXKRLCAUD", "^NQNA8000LMCAD", "^NQNALMCAD", "^NQUSB8000LMEUR", "^NQNA8000LMEUR", "^NQG8000LM", "^NQUSB8000LMCAD", "^NQUSB8000LMGBPN", "^NQDM8700LMJPYN", "^NQGXJPLMEURN", "^NQUSB8700LMEURN", "^NQDM8000LMGBPN", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NQNA8700LMJPY", "^NQUSB8773LMEURN", "^NQDM8700LMEURN", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQUSB8773LMJPYN", "^NQUSB8773LMAUD", "^NQFFUSM", "^NQUSB8700LMAUD", "^NQDMXGBLMGBPN", "^NQG8000LMAUDN", "^NQNA8700LM", "^NQNA8700LMEUR", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDXUSLCGBPN", "^NQUSB8000LMJPY", "^NQNA8700LMCAD", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFGSLN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDXUSLCGN", "^NQDM8000LMAUDN", "^NQNA8000LMJPYN", "^NQUS500LCG", "^NQDMXKREURN", "^NQNALMJPYN", "^NQDM8700LM", "^NQDMXJPLMCADN", "^NQUSB8000LM", "^NQDM8700LMCAD", "^NQNA8000LMEURN", "^NQUSB8770LMN", "^NQDM8700LMEUR", "^NQUSB8700LMJPYN", "^NQUSB8000LMAUDN", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQUSB8770LMCADN", "^NQDM8000LMGBP", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQG8000LMCADN", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQG8000LMAUD"],
        symbol: "V"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 2.78,
                estimate: 2.18
              }, {
                date: "4Q2020",
                actual: 3.35,
                estimate: 3.18
              }, {
                date: "1Q2021",
                actual: 1.59,
                estimate: 1.72
              }, {
                date: "2Q2021",
                actual: 2.57,
                estimate: 2.24
              }],
              currentQuarterEstimate: 1.97,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635942600, 1636374600]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 250266000000,
                earnings: 64093000000
              }, {
                date: 2019,
                revenue: 376844000000,
                earnings: 87886000000
              }, {
                date: 2020,
                revenue: 509711000000,
                earnings: 149433000000
              }, {
                date: 2021,
                revenue: 717289000000,
                earnings: 150578000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 155059000000,
                earnings: 28876000000
              }, {
                date: "4Q2020",
                revenue: 221084000000,
                earnings: 79535000000
              }, {
                date: "1Q2021",
                revenue: 187395000000,
                earnings: -5366000000
              }, {
                date: "2Q2021",
                revenue: 205740000000,
                earnings: 45068000000
              }]
            },
            financialCurrency: "CNY"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.098231904,
        marketCap: 486427066368,
        forwardPE: 16.42329,
        priceToBook: 0.49534482,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1411133400000,
        priceHint: 2,
        totalCash: 483351986000,
        floatShares: 1937030545,
        ebitda: 154157006848,
        shortRatio: 3.07,
        targetPriceHigh: 335.49,
        targetPriceLow: 134.8,
        targetPriceMean: 243.3,
        targetPriceMedian: 243.63,
        heldPercentInsiders: 26.217,
        heldPercentInstitutions: 26.326,
        postMarketChangePercent: -0.14068656,
        postMarketTime: 1634947196,
        postMarketPrice: 177.45,
        postMarketChange: -0.25,
        regularMarketChange: 0.27999878,
        regularMarketChangePercent: 0.15781692,
        regularMarketTime: 1634932883,
        regularMarketPrice: 177.7,
        regularMarketDayHigh: 182.09,
        regularMarketDayRange: "175.81 - 182.09",
        regularMarketDayLow: 175.81,
        regularMarketVolume: 16956526,
        sharesShort: 71128648,
        sharesShortPrevMonth: 49308067,
        regularMarketPreviousClose: 177.42,
        bid: 177.5,
        ask: 177.6,
        bidSize: 8,
        askSize: 8,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_42083601",
        fullExchangeName: "NYSE",
        shortName: "Alibaba Group Holding Limited",
        longName: "Alibaba Group Holding Limited",
        regularMarketOpen: 179.08,
        averageDailyVolume3Month: 26993216,
        averageDailyVolume10Day: 22522800,
        beta: 0.839153,
        fiftyTwoWeekLowChange: 39.270004,
        fiftyTwoWeekLowChangePercent: 0.28368133,
        fiftyTwoWeekRange: "138.43 - 319.32",
        fiftyTwoWeekHighChange: -141.62001,
        fiftyTwoWeekHighChangePercent: -0.44350496,
        fiftyTwoWeekLow: 138.43,
        fiftyTwoWeekHigh: 319.32,
        earningsTimestamp: 1627993800,
        earningsTimestampStart: 1635942600,
        earningsTimestampEnd: 1636374600,
        trailingPE: 21.179976,
        pegRatio: 47.43,
        dividendsPerShare: 0,
        revenue: 769278020000,
        priceToSales: 0.63231635,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 8.39,
        epsForward: 10.82,
        epsCurrentYear: 9.34,
        epsNextQuarter: 3.14,
        priceEpsCurrentYear: 19.025696,
        priceEpsNextQuarter: 56.592354,
        sharesOutstanding: 2710909952,
        bookValue: 358.74,
        fiftyDayAverage: 159.80544,
        fiftyDayAverageChange: 17.894562,
        fiftyDayAverageChangePercent: 0.11197718,
        twoHundredDayAverage: 197.05731,
        twoHundredDayAverageChange: -19.357315,
        components: ["^BIQNTR", "^NQGMOIN", "^WEALTHAX", "^WEALTHGN", "^WEALTHGL", "^BIQ", "^ICKNTR", "^ICK", "^NQGMOI", "^WEALTHAN", "^TSTWEALTHAN"],
        symbol: "BABA"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 1.86,
                estimate: 1.82
              }, {
                date: "1Q2021",
                actual: 2.59,
                estimate: 2.34
              }, {
                date: "2Q2021",
                actual: 2.48,
                estimate: 2.27
              }, {
                date: "3Q2021",
                actual: 2.6,
                estimate: 2.35
              }],
              currentQuarterEstimate: 2.13,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1634624735]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 76450000000,
                earnings: 1300000000
              }, {
                date: 2018,
                revenue: 81581000000,
                earnings: 15297000000
              }, {
                date: 2019,
                revenue: 82059000000,
                earnings: 15119000000
              }, {
                date: 2021,
                revenue: 82584000000,
                earnings: 14714000000
              }],
              quarterly: [{
                date: "1Q2021",
                revenue: 22475000000,
                earnings: 1738000000
              }, {
                date: "2Q2021",
                revenue: 22321000000,
                earnings: 6197000000
              }, {
                date: "3Q2021",
                revenue: 23312000000,
                earnings: 6278000000
              }, {
                date: "3Q2021",
                revenue: 23338000000,
                earnings: 3667000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.021728825,
        marketCap: 430989639680,
        forwardPE: 15.772639,
        priceToBook: 6.19307,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: -252322200000,
        priceHint: 2,
        totalCash: 25305999400,
        floatShares: 2629665336,
        ebitda: 31300999168,
        shortRatio: 2.64,
        targetPriceHigh: 215,
        targetPriceLow: 162,
        targetPriceMean: 188.29,
        targetPriceMedian: 190,
        heldPercentInsiders: 0.081,
        heldPercentInstitutions: 69.503,
        postMarketChangePercent: -0.13437651,
        postMarketTime: 1634947171,
        postMarketPrice: 163.5,
        postMarketChange: -0.22000122,
        regularMarketChange: 0.320007,
        regularMarketChangePercent: 0.195843,
        regularMarketTime: 1634932803,
        regularMarketPrice: 163.72,
        regularMarketDayHigh: 164.06,
        regularMarketDayRange: "162.96 - 164.06",
        regularMarketDayLow: 162.96,
        regularMarketVolume: 4304467,
        sharesShort: 16340137,
        sharesShortPrevMonth: 16389601,
        shortPercentFloat: 0.62,
        regularMarketPreviousClose: 163.4,
        bid: 163.46,
        ask: 163.94,
        bidSize: 8,
        askSize: 8,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_139677",
        fullExchangeName: "NYSE",
        shortName: "Johnson & Johnson",
        longName: "Johnson & Johnson",
        regularMarketOpen: 163.06,
        averageDailyVolume3Month: 5839236,
        averageDailyVolume10Day: 6346400,
        beta: 0.720105,
        fiftyTwoWeekLowChange: 30.070007,
        fiftyTwoWeekLowChangePercent: 0.22499071,
        fiftyTwoWeekRange: "133.65 - 179.92",
        fiftyTwoWeekHighChange: -16.199997,
        fiftyTwoWeekHighChangePercent: -0.09004,
        fiftyTwoWeekLow: 133.65,
        fiftyTwoWeekHigh: 179.92,
        dividendDate: 1630972800,
        exDividendDate: 1629676800,
        earningsTimestamp: 1634624735,
        earningsTimestampStart: 1634624735,
        earningsTimestampEnd: 1634624735,
        trailingAnnualDividendRate: 4.14,
        trailingPE: 24.468689,
        pegRatio: 2.06,
        dividendsPerShare: 4.09,
        dividendRate: 4.24,
        trailingAnnualDividendYield: 0.025336597,
        dividendYield: 2.59,
        revenue: 91446002000,
        priceToSales: 4.713051,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 6.691,
        epsForward: 10.38,
        epsCurrentYear: 9.79,
        epsNextQuarter: 2.64,
        priceEpsCurrentYear: 16.723186,
        priceEpsNextQuarter: 62.01515,
        sharesOutstanding: 2632480000,
        bookValue: 26.436,
        fiftyDayAverage: 163.662,
        fiftyDayAverageChange: 0.057998657,
        fiftyDayAverageChangePercent: 0.00035438073,
        twoHundredDayAverage: 167.35646,
        twoHundredDayAverageChange: -3.6364594,
        symbol: "JNJ"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 1.34,
                estimate: 1.18
              }, {
                date: "1Q2021",
                actual: 1.39,
                estimate: 1.51
              }, {
                date: "2Q2021",
                actual: 1.69,
                estimate: 1.21
              }, {
                date: "3Q2021",
                actual: 1.78,
                estimate: 1.57
              }],
              currentQuarterEstimate: 1.39,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1637046000]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 500343000000,
                earnings: 9862000000
              }, {
                date: 2019,
                revenue: 514405000000,
                earnings: 6670000000
              }, {
                date: 2020,
                revenue: 523964000000,
                earnings: 14881000000
              }, {
                date: 2021,
                revenue: 559151000000,
                earnings: 13510000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 134708000000,
                earnings: 5135000000
              }, {
                date: "1Q2021",
                revenue: 152079000000,
                earnings: -2091000000
              }, {
                date: "2Q2021",
                revenue: 138310000000,
                earnings: 2730000000
              }, {
                date: "3Q2021",
                revenue: 141048000000,
                earnings: 4276000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.04425983,
        marketCap: 413646061568,
        forwardPE: 22.475758,
        priceToBook: 5.141233,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 83597400000,
        priceHint: 2,
        totalCash: 22830999600,
        floatShares: 1457352614,
        ebitda: 40419999744,
        shortRatio: 2,
        targetPriceHigh: 196,
        targetPriceLow: 127,
        targetPriceMean: 170.17,
        targetPriceMedian: 170,
        heldPercentInsiders: 49.523,
        heldPercentInstitutions: 31.502,
        postMarketChangePercent: -0.14830877,
        postMarketTime: 1634947007,
        postMarketPrice: 148.12,
        postMarketChange: -0.22000122,
        regularMarketChange: 1.53,
        regularMarketChangePercent: 1.04216,
        regularMarketTime: 1634932803,
        regularMarketPrice: 148.34,
        regularMarketDayHigh: 149.69,
        regularMarketDayRange: "147.1 - 149.69",
        regularMarketDayLow: 147.1,
        regularMarketVolume: 7065242,
        sharesShort: 14359245,
        sharesShortPrevMonth: 17335005,
        shortPercentFloat: 1.02,
        regularMarketPreviousClose: 146.81,
        bid: 148.12,
        ask: 148.14,
        bidSize: 8,
        askSize: 9,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_313055",
        fullExchangeName: "NYSE",
        shortName: "Walmart Inc.",
        longName: "Walmart Inc.",
        regularMarketOpen: 147.1,
        averageDailyVolume3Month: 7268363,
        averageDailyVolume10Day: 6849287,
        beta: 0.501587,
        fiftyTwoWeekLowChange: 22.059998,
        fiftyTwoWeekLowChangePercent: 0.17469114,
        fiftyTwoWeekRange: "126.28 - 153.66",
        fiftyTwoWeekHighChange: -5.3200073,
        fiftyTwoWeekHighChangePercent: -0.03462194,
        fiftyTwoWeekLow: 126.28,
        fiftyTwoWeekHigh: 153.66,
        dividendDate: 1641168000,
        exDividendDate: 1639008000,
        earningsTimestamp: 1637046000,
        earningsTimestampStart: 1637046000,
        earningsTimestampEnd: 1637046000,
        trailingAnnualDividendRate: 2.18,
        trailingPE: 41.750633,
        pegRatio: 2.91,
        dividendsPerShare: 2.18,
        dividendRate: 2.2,
        trailingAnnualDividendYield: 0.014849125,
        dividendYield: 1.48,
        revenue: 566144990000,
        priceToSales: 0.73063624,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 3.553,
        epsForward: 6.6,
        epsCurrentYear: 6.31,
        epsNextQuarter: 1.48,
        priceEpsCurrentYear: 23.508717,
        priceEpsNextQuarter: 100.22973,
        sharesOutstanding: 2788499968,
        bookValue: 28.853,
        fiftyDayAverage: 142.516,
        fiftyDayAverageChange: 5.82399,
        fiftyDayAverageChangePercent: 0.040865514,
        twoHundredDayAverage: 142.05276,
        twoHundredDayAverageChange: 6.2872314,
        components: ["^NQDMXJPLMAUD", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQDMXGBLMN", "^NQG5300LMCADN", "^NQGXGBLMCADN", "^NQDM5000LMGBPN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQDM5300LMAUDN", "^NQGXJPLM", "^NQDMXKRJPYN", "^NQG5300LM", "^NQDMXKRLMAUDN", "^NQG5300LMJPY", "^NQDM5300LMEURN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQFFUSHYN", "^NQG5000LMCADN", "^NQG5300LMGBP", "^NQDM5300LMJPYN", "^NQDM5000LM", "^NQDM5000LMGBP", "^NQGXGBLMN", "^NQDM5000LMJPY", "^NQDMXKRLCJPY", "^NQG5000LMEUR", "^NQFFUSLV", "^NQG5300LMCAD", "^NQGXJPLMAUDN", "^NQDXUSLCEUR", "^NQG5000LMCAD", "^NQCAPST", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM5000LMN", "^NQDMXKRLC", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQDXUSMLTCVN", "^NQGXGBLMGBPN", "^NQDMXKRN", "^NQDM5000LMCADN", "^NQDMXJPLMEURN", "^NQG5300LMN", "^NQFFUSLVN", "^DAA", "^NQDMXJPLM", "^NQG5000LMN", "^NQG5300LMAUD", "^NQDMXKREUR", "^NQG5000LMJPY", "^NQGXGBLMJPY", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQG5000LMGBP", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^DJA", "^NQGXJPLMJPY", "^DAAXMLPREIT", "^NQG5300LMEUR", "^NQDM5300LMGBP", "^NQDMXKR", "^NQDXUSMLTCV", "^NQDMXGBLMCADN", "^NQDXUSLCEURN", "^NQFFUSVN", "^NQDM5300LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQG5000LMGBPN", "^NQGXJPLMCAD", "^NQDMXKRLCAUD", "^NQDXUSMEGAN", "^NQGXJPLMEUR", "^NQDMXJPLMGBPN", "^NQG5300LMJPYN", "^NQDMXJPLMN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQGXJPLMEURN", "^NQDMXKRLCEUR", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQDXUSLCGBP", "^NQG5300LMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQDM5300LMN", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQGXJPLMGBPN", "^NQDM5300LMCAD", "^NQDMXGBLMGBPN", "^NQDM5300LMCADN", "^NQDM5300LMEUR", "^NQDMXGBLMJPY", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDXUSLCGBPN", "^NQG5000LMAUD", "^NQDM5300LMAUD", "^NQDXUSLCN", "^NQG5000LMEURN", "^NQGXGBLMAUD", "^NQG5300LMGBPN", "^NQDMXKRLMN", "^NQDXUSLCV", "^NQDMXJPLMGBP", "^NQGXJPLMAUD", "^NQFFUSV", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQG5000LMJPYN", "^NQDMXKRLMEUR", "^NQDM5000LMAUDN", "^AXW", "^NQDMXKREURN", "^NQDM5000LMCAD", "^NQG5000LMAUDN", "^NQDMXJPLMCADN", "^NQFFUSHY", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQDMXGBLMAUD", "^NQG5300LMAUDN", "^NQDMXGBLMJPYN", "^NQDM5000LMEUR", "^NQDMXJPLMCAD", "^NQDM5300LM", "^NQDM5000LMJPYN", "^NQDMXJPLMEUR", "^NQDMXKRLMJPY", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQDXUSLCVN", "^NQG5000LM", "^NQGXGBLMAUDN", "^NQDM5300LMGBPN", "^NQDMXGBLMCAD", "^NQDM5000LMAUD", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQDM5000LMEURN"],
        symbol: "WMT"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 1.6,
                estimate: 1.66
              }, {
                date: "4Q2020",
                actual: 1.64,
                estimate: 1.51
              }, {
                date: "1Q2021",
                actual: 1.74,
                estimate: 1.57
              }, {
                date: "2Q2021",
                actual: 1.95,
                estimate: 1.75
              }],
              currentQuarterEstimate: 2.19,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635424200]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 12497000000,
                earnings: 3915000000
              }, {
                date: 2018,
                revenue: 14950000000,
                earnings: 5859000000
              }, {
                date: 2019,
                revenue: 16883000000,
                earnings: 8118000000
              }, {
                date: 2020,
                revenue: 15301000000,
                earnings: 6411000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 3837000000,
                earnings: 1513000000
              }, {
                date: "4Q2020",
                revenue: 4120000000,
                earnings: 1785000000
              }, {
                date: "1Q2021",
                revenue: 4155000000,
                earnings: 1828000000
              }, {
                date: "2Q2021",
                revenue: 4528000000,
                earnings: 2066000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.019855171,
        marketCap: 353926578176,
        forwardPE: 33.7413,
        priceToBook: 55.01074,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1148563800000,
        priceHint: 2,
        totalCash: 6760000000,
        floatShares: 977371076,
        ebitda: 9461000192,
        shortRatio: 1.29,
        targetPriceHigh: 482,
        targetPriceLow: 385,
        targetPriceMean: 437.05,
        targetPriceMedian: 440,
        heldPercentInsiders: 11.034,
        heldPercentInstitutions: 77.226,
        postMarketChangePercent: -0.3206358,
        postMarketTime: 1634947196,
        postMarketPrice: 357.52,
        postMarketChange: -1.1500244,
        regularMarketChange: 2.46002,
        regularMarketChangePercent: 0.69061,
        regularMarketTime: 1634932804,
        regularMarketPrice: 358.67,
        regularMarketDayHigh: 361.64,
        regularMarketDayRange: "354.93 - 361.64",
        regularMarketDayLow: 354.93,
        regularMarketVolume: 2774374,
        sharesShort: 5473013,
        sharesShortPrevMonth: 5653562,
        shortPercentFloat: 0.63,
        regularMarketPreviousClose: 356.21,
        bid: 357.5,
        ask: 359.56,
        bidSize: 10,
        askSize: 14,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_6477196",
        fullExchangeName: "NYSE",
        shortName: "Mastercard Incorporated",
        longName: "Mastercard Incorporated",
        regularMarketOpen: 356.68,
        averageDailyVolume3Month: 3682736,
        averageDailyVolume10Day: 3261025,
        beta: 1.1291,
        fiftyTwoWeekLowChange: 77.47,
        fiftyTwoWeekLowChangePercent: 0.27549785,
        fiftyTwoWeekRange: "281.2 - 401.5",
        fiftyTwoWeekHighChange: -42.829987,
        fiftyTwoWeekHighChangePercent: -0.10667493,
        fiftyTwoWeekLow: 281.2,
        fiftyTwoWeekHigh: 401.5,
        dividendDate: 1636416000,
        exDividendDate: 1633564800,
        earningsTimestamp: 1635424200,
        earningsTimestampStart: 1635424200,
        earningsTimestampEnd: 1635424200,
        trailingAnnualDividendRate: 1.72,
        trailingPE: 49.82912,
        pegRatio: 1.61,
        dividendsPerShare: 1.68,
        dividendRate: 1.76,
        trailingAnnualDividendYield: 0.0048286123,
        dividendYield: 0.49,
        revenue: 16640000000,
        priceToSales: 21.269627,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 7.198,
        epsForward: 10.63,
        epsCurrentYear: 8.12,
        epsNextQuarter: 2.23,
        priceEpsCurrentYear: 44.171185,
        priceEpsNextQuarter: 160.83858,
        sharesOutstanding: 978828992,
        bookValue: 6.52,
        fiftyDayAverage: 349.62256,
        fiftyDayAverageChange: 9.047455,
        fiftyDayAverageChangePercent: 0.025877777,
        twoHundredDayAverage: 365.93573,
        twoHundredDayAverageChange: -7.2657166,
        components: ["^NQDMXJPLMAUD", "^NQDOG", "^NQUSBLM", "^NQG8700LMEURN", "^NQG8000LMCAD", "^NQSHYL", "^NQG8000LMEUR", "^NQDXUSMLTCGN", "^NQDM8700LMJPY", "^NQG8000LMGBPN", "^NQUS500LCGN", "^NQG8700LMJPYN", "^NQG8000LMN", "^NQNALMEURN", "^NQUSBLMCAD", "^NQUSB8770LMAUD", "^NQDM8000LMCADN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA8700LMAUDN", "^NQNA8700LMGBPN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^KFTXNNR70", "^NQDM8000LMAUD", "^NQUSBLMJPY", "^NQUSB8000LMCADN", "^NQUSB8770LMAUDN", "^NQG8000LMJPY", "^NQPRCE", "^NQG8700LMAUD", "^NQGXGBLMN", "^NQVDIV", "^NQDMXKRLCJPY", "^NQDXUSLCEUR", "^NQUSB8000LMN", "^NQDM8700LMGBPN", "^NQDXUSLCG", "^NQNA8000LMN", "^CAPEXA", "^NQUSB8773LMCAD", "^NQNA8000LMCADN", "^NQUSB8773LMEUR", "^NQDMXKRAUD", "^NQNA8000LMJPY", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQUSB8773LMJPY", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQNALMJPY", "^NQUSB8770LMGBP", "^NQGXGBLMJPY", "^IPYNTR", "^NQGXJPLMJPY", "^NQG8700LMGBP", "^NQUSB8700LMGBP", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^NQDMXJPLMGBPN", "^NQUSB8700LMCAD", "^NQDMXJPLMN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQUSB8770LMGBPN", "^NQDMXKRLCEUR", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQUSB8770LM", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQG8700LMCADN", "^NQDMXKRLCEURN", "^NQNA8000LMAUD", "^NQUSMLTCG", "^NQUSB8700LMGBPN", "^NQGXJPLMGBPN", "^NQDM8000LMEURN", "^NQNA8700LMN", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQG8700LMN", "^NQNALMAUD", "^NQDXUSLCN", "^NQUSB8000LMEURN", "^NQUSB8700LMEUR", "^NQGXGBLMAUD", "^NQDM8000LM", "^NQVDIVN", "^NQUSB8000LMGBP", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQDM8700LMAUD", "^NQFGSL", "^NQDM8000LMN", "^NQDMXKRLMEUR", "^NQUSB8000LMJPYN", "^NQNALMAUDN", "^NQG8700LM", "^NQNA8000LM", "^NQDM8000LMJPYN", "^CAPEXAN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^IPY", "^NQUSB8773LMGBPN", "^NQNA8700LMGBP", "^NQSHYLN", "^NQUSB8700LMN", "^NQDMXGBLMJPYN", "^NQDOGN", "^NQNA8000LMAUDN", "^NQNA8700LMJPYN", "^NQDM8000LMJPY", "^NQDM8700LMAUDN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQUSB8000LMAUD", "^NQDMXGBLMCAD", "^NQUSB8700LMAUDN", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQUSB8773LMN", "^NQNA8700LMEURN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQNA8000LMGBPN", "^NQDMXGBLMN", "^NQUSB8700LM", "^NQDM8700LMGBP", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQUSB8700LMCADN", "^NQDMXKRLCCADN", "^NQUSB8773LMCADN", "^NQUSB8770LMEUR", "^NQGXJPLMCADN", "^NQG8700LMCAD", "^NQDM8700LMCADN", "^NQDM8000LMCAD", "^NQUSB8770LMCAD", "^NQDM8000LMEUR", "^NQGXJPLM", "^NQDM8700LMN", "^NQG8700LMEUR", "^NQUSBLMGBP", "^NQNALMN", "^KFTX", "^NQUSLGN", "^NQG8700LMAUDN", "^NQG8000LMGBP", "^NQG8000LMJPYN", "^NQFFUSLV", "^NQGXJPLMAUDN", "^NQUSB8773LMAUDN", "^NQCAPST", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSB8770LMJPYN", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NQUSB8773LM", "^NQNA8000LMGBP", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA8700LMAUD", "^NQDMXKRN", "^NQUSB8770LMJPY", "^NQUSB8773LMGBP", "^NQDMXJPLMEURN", "^NQDXUSMLTCG", "^NQFFUSLVN", "^NQFFUSMN", "^NQG8700LMGBPN", "^NQUSB8770LMEURN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQPRCEN", "^NQG8700LMJPY", "^NQUSB8700LMJPY", "^NQNA8700LMCADN", "^NQDXUSLCEURN", "^NQG8000LMEURN", "^NQDMXKRLCAUD", "^NQNA8000LMCAD", "^NQNALMCAD", "^NQUSB8000LMEUR", "^NQNA8000LMEUR", "^NQG8000LM", "^NQUSB8000LMCAD", "^NQUSB8000LMGBPN", "^NQDM8700LMJPYN", "^NQGXJPLMEURN", "^NQUSB8700LMEURN", "^NQDM8000LMGBPN", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NQNA8700LMJPY", "^NQUSB8773LMEURN", "^NQDM8700LMEURN", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQUSB8773LMJPYN", "^NQUSB8773LMAUD", "^NQFFUSM", "^NQUSB8700LMAUD", "^NQDMXGBLMGBPN", "^NQG8000LMAUDN", "^NQNA8700LM", "^NQNA8700LMEUR", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDXUSLCGBPN", "^NQUSB8000LMJPY", "^NQNA8700LMCAD", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFFUSQ", "^NQFGSLN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDXUSLCGN", "^NQDM8000LMAUDN", "^NQNA8000LMJPYN", "^NQUS500LCG", "^NQDMXKREURN", "^NQNALMJPYN", "^NQFFUSQN", "^NQDM8700LM", "^NQDMXJPLMCADN", "^NQUSB8000LM", "^NQDM8700LMCAD", "^NQNA8000LMEURN", "^NQUSB8770LMN", "^NQDM8700LMEUR", "^NQUSB8700LMJPYN", "^NQUSB8000LMAUDN", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQUSB8770LMCADN", "^DWUSSR", "^NQDM8000LMGBP", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQG8000LMCADN", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQG8000LMAUD"],
        symbol: "MA"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: false,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [],
              earningsDate: []
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 89922000000,
                earnings: 7156000000
              }, {
                date: 2018,
                revenue: 91750000000,
                earnings: 10135000000
              }, {
                date: 2019,
                revenue: 92865000000,
                earnings: 12609000000
              }, {
                date: 2020,
                revenue: 84681000000,
                earnings: 12232000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 21689000000,
                earnings: 3174500000
              }, {
                date: "4Q2020",
                revenue: 21689000000,
                earnings: 3174500000
              }, {
                date: "1Q2021",
                revenue: 20963000000,
                earnings: 2972500000
              }, {
                date: "2Q2021",
                revenue: 20963000000,
                earnings: 2972500000
              }]
            },
            financialCurrency: "CHF"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.037372306,
        marketCap: 352196395008,
        priceToBook: 7.8519745,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 847895400000,
        priceHint: 2,
        totalCash: 6435999700,
        floatShares: 2796228990,
        ebitda: 16817000448,
        targetPriceHigh: 146,
        targetPriceLow: 138,
        targetPriceMean: 142,
        targetPriceMedian: 142,
        heldPercentInsiders: 0.009,
        heldPercentInstitutions: 1.981,
        regularMarketChange: 0.38500214,
        regularMarketChangePercent: 0.3015722,
        regularMarketTime: 1634932571,
        regularMarketPrice: 128.05,
        regularMarketDayHigh: 128.22,
        regularMarketDayRange: "127.37 - 128.22",
        regularMarketDayLow: 127.37,
        regularMarketVolume: 114491,
        regularMarketPreviousClose: 127.665,
        bid: 0,
        ask: 0,
        bidSize: 0,
        askSize: 0,
        exchange: "PNK",
        market: "us_market",
        messageBoardId: "finmb_31973",
        fullExchangeName: "Other OTC",
        shortName: "NESTLE SA",
        longName: "Nestlé S.A.",
        regularMarketOpen: 127.6594,
        averageDailyVolume3Month: 214329,
        averageDailyVolume10Day: 166587,
        beta: 0.226786,
        fiftyTwoWeekLowChange: 23.550003,
        fiftyTwoWeekLowChangePercent: 0.22535887,
        fiftyTwoWeekRange: "104.5 - 128.22",
        fiftyTwoWeekHighChange: -0.16999817,
        fiftyTwoWeekHighChangePercent: -0.0013258319,
        fiftyTwoWeekLow: 104.5,
        fiftyTwoWeekHigh: 128.22,
        dividendDate: 1622073600,
        exDividendDate: 1618790400,
        trailingAnnualDividendRate: 2.75,
        trailingPE: 26.957895,
        dividendsPerShare: 2.73,
        dividendRate: 3,
        trailingAnnualDividendYield: 0.021540752,
        dividendYield: 2.34,
        revenue: 85304001000,
        priceToSales: 4.1287208,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 4.75,
        sharesOutstanding: 2750459904,
        bookValue: 16.308,
        fiftyDayAverage: 123.188,
        fiftyDayAverageChange: 4.8619995,
        fiftyDayAverageChangePercent: 0.039468125,
        twoHundredDayAverage: 123.43688,
        twoHundredDayAverageChange: 4.613121,
        symbol: "NSRGY"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "2Q2021",
                actual: 0.69,
                estimate: 0.45
              }],
              currentQuarterEstimate: 0.45,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1636578000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 55137000000,
                earnings: 8980000000
              }, {
                date: 2018,
                revenue: 59434000000,
                earnings: 12598000000
              }, {
                date: 2019,
                revenue: 69607000000,
                earnings: 11054000000
              }, {
                date: 2020,
                revenue: 65388000000,
                earnings: -2864000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 14707000000,
                earnings: -710000000
              }, {
                date: "1Q2021",
                revenue: 16249000000,
                earnings: 17000000
              }, {
                date: "2Q2021",
                revenue: 15613000000,
                earnings: 901000000
              }, {
                date: "3Q2021",
                revenue: 17022000000,
                earnings: 918000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.04973639,
        marketCap: 307858145280,
        forwardPE: 39.49184,
        priceToBook: 3.5118048,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: -252322200000,
        priceHint: 2,
        totalCash: 16069999600,
        floatShares: 1815182270,
        ebitda: 7656999936,
        shortRatio: 2.86,
        heldPercentInsiders: 0.123,
        heldPercentInstitutions: 66.493,
        postMarketChangePercent: 0,
        postMarketTime: 1634947196,
        postMarketPrice: 169.42,
        postMarketChange: 0,
        regularMarketChange: -1.9199982,
        regularMarketChangePercent: -1.1205779,
        regularMarketTime: 1634932943,
        regularMarketPrice: 169.42,
        regularMarketDayHigh: 170.8,
        regularMarketDayRange: "168.6 - 170.8",
        regularMarketDayLow: 168.6,
        regularMarketVolume: 7673039,
        sharesShort: 24712945,
        sharesShortPrevMonth: 21277704,
        shortPercentFloat: 1.36,
        regularMarketPreviousClose: 171.34,
        bid: 169.35,
        ask: 169.42,
        bidSize: 8,
        askSize: 8,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_191564",
        fullExchangeName: "NYSE",
        shortName: "Walt Disney Company (The)",
        longName: "The Walt Disney Company",
        regularMarketOpen: 170.57,
        averageDailyVolume3Month: 8365324,
        averageDailyVolume10Day: 10695237,
        beta: 1.202645,
        fiftyTwoWeekLowChange: 52.189995,
        fiftyTwoWeekLowChangePercent: 0.44519314,
        fiftyTwoWeekRange: "117.23 - 203.02",
        fiftyTwoWeekHighChange: -33.600006,
        fiftyTwoWeekHighChangePercent: -0.16550097,
        fiftyTwoWeekLow: 117.23,
        fiftyTwoWeekHigh: 203.02,
        dividendDate: 1579132800,
        exDividendDate: 1576195200,
        earningsTimestamp: 1636578000,
        earningsTimestampStart: 1636578000,
        earningsTimestampEnd: 1636578000,
        trailingAnnualDividendRate: 0.88,
        trailingPE: 277.7377,
        pegRatio: 1.73,
        dividendsPerShare: 0,
        trailingAnnualDividendYield: 0.005135987,
        revenue: 63590998000,
        priceToSales: 4.8412223,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 0.61,
        epsForward: 4.29,
        epsCurrentYear: 2.12,
        epsNextQuarter: 0.98,
        priceEpsCurrentYear: 79.9151,
        priceEpsNextQuarter: 172.87755,
        sharesOutstanding: 1817129984,
        bookValue: 48.243,
        fiftyDayAverage: 176.78714,
        fiftyDayAverageChange: -7.3671417,
        fiftyDayAverageChangePercent: -0.041672386,
        twoHundredDayAverage: 178.28737,
        twoHundredDayAverageChange: -8.867371,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQSHYL", "^NQUSB5553LMGBP", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQG5500LMJPYN", "^NQDM5000LMGBPN", "^NQGMOIN", "^NQUSB5000LM", "^NQG5500LMEURN", "^NQNALMEURN", "^NQUSBLMCAD", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQG5500LMGBP", "^NQNA5000LMAUDN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQUSB5000LMGBPN", "^NQDM5000LM", "^NQG5500LM", "^NQPRCE", "^NQUSB5553LMN", "^NQDM5000LMGBP", "^NQGXGBLMN", "^NQVDIV", "^NQDM5500LMGBPN", "^NQDMXKRLCJPY", "^NQG5000LMEUR", "^NQNA5500LMCAD", "^NQDXUSLCEUR", "^NQG5000LMCAD", "^NQDXUSLCG", "^CAPEXA", "^NQNA5000LMAUD", "^NQNA5500LMGBPN", "^NQDM5000LMN", "^NQUSB5553LMAUD", "^NQNA5500LMEUR", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQNA5000LMCADN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQUSB5500LMGBPN", "^NQNALMJPY", "^NQNA5500LMJPY", "^NQUSB5553LMJPYN", "^NQG5000LMJPY", "^NQGXGBLMJPY", "^QCRD", "^NQGXJPLMJPY", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDM5500LMJPYN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB5000LMGBP", "^NQGXJPLMEUR", "^NQNA5500LMCADN", "^NQUSB5500LMEURN", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQUSB5500LMGBP", "^NQNA5000LMJPY", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQNA5000LMGBPN", "^NQDMXKRLCEUR", "^NQDM5500LMEURN", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQDM5500LMEUR", "^NQGXJPLMGBPN", "^NQUSB5500LMJPYN", "^NQNALM", "^NQUS500LC", "^NQUSB5500LM", "^NQUSB5553LMGBPN", "^NQDM5500LMCAD", "^NQDMXGBLMJPY", "^NQNALMAUD", "^NQDXUSLCN", "^NQG5000LMEURN", "^NQGXGBLMAUD", "^NQVDIVN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQUSB5000LMAUD", "^NQG5000LMJPYN", "^NQDMXKRLMEUR", "^NQUSB5000LMEURN", "^NQNALMAUDN", "^NQG5500LMGBPN", "^NQDM5000LMCAD", "^NQUSB5500LMAUD", "^CAPEXAN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQSHYLN", "^NQDMXGBLMJPYN", "^NQNA5500LMAUDN", "^NQDM5000LMEUR", "^NQDM5000LMJPYN", "^NQDMXKRLMJPY", "^NQG5000LM", "^NQUSBLMJPYN", "^NQG5500LMCAD", "^NQDMXGBLMCAD", "^NQUSB5000LMJPYN", "^XMI", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQG5500LMEUR", "^NQDMXGBLMEUR", "^NQDM5000LMEURN", "^NQDM5500LMJPY", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSB5553LMCADN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQDM5500LM", "^NQUSB5553LMJPY", "^NQNA5500LMJPYN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDM5500LMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB5500LMCADN", "^NQGXJPLM", "^NQUSB5000LMN", "^NQG5500LMJPY", "^NQUSBLMGBP", "^NQNA5500LMAUD", "^NQNALMN", "^NQG5000LMCADN", "^NQUSLGN", "^NQUSB5553LMEUR", "^NQUSB5553LMCAD", "^NQNA5500LMEURN", "^NQDM5000LMJPY", "^NQFFUSLV", "^NQGXJPLMAUDN", "^NQUSB5000LMCADN", "^NQCAPST", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA5000LMCAD", "^NQGMOI", "^NQDMXKRN", "^NQNA5000LMEUR", "^NQCRDN", "^NQDM5000LMCADN", "^NQDMXJPLMEURN", "^NQDXUSMLTCG", "^NQFFUSLVN", "^NQG5500LMAUDN", "^NQDMXJPLM", "^NQG5000LMN", "^NQUSB5553LMAUDN", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQG5000LMGBP", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQPRCEN", "^DJA", "^NQDXUSLCEURN", "^NQUSB5000LMJPY", "^NQG5000LMGBPN", "^NQG5500LMCADN", "^NQDMXKRLCAUD", "^NQDXUSMEGAN", "^NQNALMCAD", "^NQNA5000LMGBP", "^NQG5500LMN", "^NQNA5000LM", "^NQGXJPLMEURN", "^NQUSB5553LM", "^NQNA5500LMGBP", "^NQUSB5500LMJPY", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NQUSB5553LMEURN", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQUSB5000LMAUDN", "^NQDMXGBLMGBPN", "^NQDM5500LMAUDN", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDXUSLCGBPN", "^NQG5000LMAUD", "^NQNA5500LM", "^NQDM5500LMAUD", "^NQUSB5000LMCAD", "^NQUSB5000LMEUR", "^NQUSB5500LMAUDN", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQNA5500LMN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQNA5000LMJPYN", "^NQUSB5500LMEUR", "^NQUSB5500LMN", "^NQDM5500LMN", "^NQDXUSLCGN", "^NQDM5000LMAUDN", "^NQUS500LCG", "^NQDMXKREURN", "^NQNALMJPYN", "^NQG5000LMAUDN", "^NQDMXJPLMCADN", "^NQNA5000LMEURN", "^NQDMXGBLMAUD", "^NQNA5000LMN", "^NQUSBLMAUDN", "^NQDMXJPLMCAD", "^NQG5500LMAUD", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQUSB5500LMCAD", "^NQDM5000LMAUD", "^NQDM5500LMGBP"],
        symbol: "DIS"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 2.81,
                estimate: 2.66
              }, {
                date: "1Q2021",
                actual: 3.14,
                estimate: 2.78
              }, {
                date: "2Q2021",
                actual: 3.03,
                estimate: 2.81
              }, {
                date: "3Q2021",
                actual: 3.11,
                estimate: 3.01
              }],
              currentQuarterEstimate: 3.19,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1639652340]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 7301505000,
                earnings: 1693954000
              }, {
                date: 2018,
                revenue: 9030000000,
                earnings: 2591000000
              }, {
                date: 2019,
                revenue: 11171000000,
                earnings: 2951000000
              }, {
                date: 2020,
                revenue: 12868000000,
                earnings: 5260000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 3424000000,
                earnings: 2250000000
              }, {
                date: "1Q2021",
                revenue: 3905000000,
                earnings: 1261000000
              }, {
                date: "2Q2021",
                revenue: 3835000000,
                earnings: 1116000000
              }, {
                date: "3Q2021",
                revenue: 3935000000,
                earnings: 1212000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.11553382,
        marketCap: 306215387136,
        forwardPE: 45.195225,
        priceToBook: 21.25289,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 524323800000,
        priceHint: 2,
        totalCash: 6163999700,
        floatShares: 474382116,
        ebitda: 6103000064,
        shortRatio: 1.81,
        targetPriceHigh: 800,
        targetPriceLow: 560,
        targetPriceMean: 703.92,
        targetPriceMedian: 706,
        heldPercentInsiders: 0.315,
        heldPercentInstitutions: 85.463,
        postMarketChangePercent: -0.0745893,
        postMarketTime: 1634947150,
        postMarketPrice: 643.1,
        postMarketChange: -0.480042,
        regularMarketChange: 4.920044,
        regularMarketChangePercent: 0.7703699,
        regularMarketTime: 1634932804,
        regularMarketPrice: 643.58,
        regularMarketDayHigh: 644.26,
        regularMarketDayRange: "634.45 - 644.26",
        regularMarketDayLow: 634.45,
        regularMarketVolume: 1783347,
        sharesShort: 4396178,
        sharesShortPrevMonth: 4702456,
        shortPercentFloat: 0.93,
        regularMarketPreviousClose: 638.66,
        bid: 642.6,
        ask: 643.86,
        bidSize: 14,
        askSize: 9,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_24321",
        fullExchangeName: "NasdaqGS",
        shortName: "Adobe Inc.",
        longName: "Adobe Inc.",
        regularMarketOpen: 640.43,
        averageDailyVolume3Month: 1927163,
        averageDailyVolume10Day: 1981037,
        beta: 1.0291,
        fiftyTwoWeekLowChange: 222.80002,
        fiftyTwoWeekLowChangePercent: 0.5294929,
        fiftyTwoWeekRange: "420.78 - 673.88",
        fiftyTwoWeekHighChange: -30.299988,
        fiftyTwoWeekHighChangePercent: -0.044963475,
        fiftyTwoWeekLow: 420.78,
        fiftyTwoWeekHigh: 673.88,
        exDividendDate: 1111622400,
        earningsTimestamp: 1639652340,
        earningsTimestampStart: 1639652340,
        earningsTimestampEnd: 1639652340,
        trailingPE: 53.20602,
        pegRatio: 2.85,
        dividendsPerShare: 0,
        revenue: 15098999800,
        priceToSales: 20.280508,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 12.096,
        epsForward: 14.24,
        epsCurrentYear: 12.47,
        epsNextQuarter: 3.38,
        priceEpsCurrentYear: 51.610264,
        priceEpsNextQuarter: 190.40828,
        sharesOutstanding: 475800000,
        bookValue: 30.282,
        fiftyDayAverage: 618.5737,
        fiftyDayAverageChange: 25.006287,
        fiftyDayAverageChangePercent: 0.040425718,
        twoHundredDayAverage: 576.9256,
        twoHundredDayAverageChange: 66.65442,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQGS", "^NQNALMEURN", "^NQUSB9000LMJPYN", "^NQUSB9530LM", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQUSB9537LMAUDN", "^NQNA9000LMGBPN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQPRCE", "^NQUSB9537LMN", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQDXUSLCEUR", "^NQDXUSLCG", "^CPQ", "^CPQNTR", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQUSB9537LM", "^NQDM9000LMJPYN", "^NQNALMJPY", "^DWANQTL", "^MSH", "^NDX", "^NQGXGBLMJPY", "^QCRD", "^NQUSB9537LMGBPN", "^IXCO", "^NQGXJPLMJPY", "^NQUSB9530LMCAD", "^NQUSB9530LMGBPN", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9530LMEUR", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB9530LMN", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQUSB9530LMGBP", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQUSB9000LMN", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQG9000LMAUD", "^NQGXJPLMGBPN", "^QMI", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQFFUSGN", "^NQNALMAUD", "^NQNA9000LMN", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQUSB9530LMJPYN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQUSB9537LMAUD", "^NQFGSL", "^NQDMXKRLMEUR", "^NQUSB9537LMCADN", "^MNX1", "^NQNALMAUDN", "^NQG9000LMEURN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB9537LMGBP", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQGXJPLM", "^NQNA9000LMAUD", "^NQUSBLMGBP", "^NQNALMN", "^NQUSB9537LMJPYN", "^NQUSB9000LMAUD", "^NQUSLGN", "^NQNA9000LM", "^NQGXJPLMAUDN", "^NQCAPST", "^NQUSB9530LMEURN", "^NQUSB9530LMAUD", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQUSB9537LMEURN", "^NQDMXKRN", "^XQC", "^NQCRDN", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NDXCAD", "^NQDXUSMLTCG", "^NQNA9000LMJPYN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^NQPRCEN", "^XQO", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQDMXKRLCAUD", "^XCQ", "^NQDXUSMEGAN", "^NQNALMCAD", "^NQUSB9530LMJPY", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQFFUSG", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^XNDXNNRHKD", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQUSB9537LMEUR", "^XNDXNNRCAD", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQG9000LM", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFFUSQ", "^NQFGSLN", "^NQUSB9530LMCADN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NDXT", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDXUSLCGN", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9537LMCAD", "^NQUSB9000LMGBPN", "^NQFFUSQN", "^NQG9000LMGBPN", "^NQDMXJPLMCADN", "^NQDMXGBLMAUD", "^NQUSB9530LMAUDN", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQNA9000LMCADN", "^NQUSB9537LMJPY"],
        symbol: "ADBE"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 1.07,
                estimate: 0.94
              }, {
                date: "4Q2020",
                actual: 1.08,
                estimate: 1
              }, {
                date: "1Q2021",
                actual: 1.22,
                estimate: 1.01
              }, {
                date: "2Q2021",
                actual: 1.15,
                estimate: 1.12
              }],
              currentQuarterEstimate: 1.07,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1636416000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 13094000000,
                earnings: 1795000000
              }, {
                date: 2018,
                revenue: 15451000000,
                earnings: 2057000000
              }, {
                date: 2019,
                revenue: 17772000000,
                earnings: 2459000000
              }, {
                date: 2020,
                revenue: 21454000000,
                earnings: 4202000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 5459000000,
                earnings: 1021000000
              }, {
                date: "4Q2020",
                revenue: 6116000000,
                earnings: 1567000000
              }, {
                date: "1Q2021",
                revenue: 6033000000,
                earnings: 1097000000
              }, {
                date: "2Q2021",
                revenue: 6238000000,
                earnings: 1184000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.11850463,
        marketCap: 282477199360,
        forwardPE: 41.164383,
        priceToBook: 13.512449,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1436189400000,
        priceHint: 2,
        totalCash: 12394999800,
        floatShares: 1173528109,
        ebitda: 5118000128,
        shortRatio: 1.87,
        targetPriceHigh: 380,
        targetPriceLow: 175,
        targetPriceMean: 326.66,
        targetPriceMedian: 330,
        heldPercentInsiders: 0.134,
        heldPercentInstitutions: 82.322,
        postMarketChangePercent: 0.24126533,
        postMarketTime: 1634947199,
        postMarketPrice: 240.98,
        postMarketChange: 0.58000183,
        regularMarketChange: -2.8100128,
        regularMarketChangePercent: -1.1553854,
        regularMarketTime: 1634932802,
        regularMarketPrice: 240.4,
        regularMarketDayHigh: 246.66,
        regularMarketDayRange: "239.79 - 246.66",
        regularMarketDayLow: 239.79,
        regularMarketVolume: 24170917,
        sharesShort: 11522370,
        sharesShortPrevMonth: 11210259,
        shortPercentFloat: 0.98,
        regularMarketPreviousClose: 243.21,
        bid: 240.7,
        ask: 240.8,
        bidSize: 9,
        askSize: 10,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_112732",
        fullExchangeName: "NasdaqGS",
        shortName: "PayPal Holdings, Inc.",
        longName: "PayPal Holdings, Inc.",
        regularMarketOpen: 243.73,
        averageDailyVolume3Month: 7289547,
        averageDailyVolume10Day: 15644712,
        beta: 1.198412,
        fiftyTwoWeekLowChange: 65.59,
        fiftyTwoWeekLowChangePercent: 0.37520736,
        fiftyTwoWeekRange: "174.81 - 310.16",
        fiftyTwoWeekHighChange: -69.76001,
        fiftyTwoWeekHighChangePercent: -0.2249162,
        fiftyTwoWeekLow: 174.81,
        fiftyTwoWeekHigh: 310.16,
        earningsTimestamp: 1636416000,
        earningsTimestampStart: 1636416000,
        earningsTimestampEnd: 1636416000,
        trailingPE: 58.64845,
        pegRatio: 2.15,
        dividendsPerShare: 0,
        revenue: 23846000600,
        priceToSales: 11.845894,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 4.099,
        epsForward: 5.84,
        epsCurrentYear: 4.71,
        epsNextQuarter: 1.27,
        priceEpsCurrentYear: 51.040337,
        priceEpsNextQuarter: 189.29134,
        sharesOutstanding: 1175030016,
        bookValue: 17.791,
        fiftyDayAverage: 269.15884,
        fiftyDayAverageChange: -28.75885,
        fiftyDayAverageChangePercent: -0.10684713,
        twoHundredDayAverage: 272.71838,
        twoHundredDayAverageChange: -32.31839,
        components: ["^NQDMXJPLMAUD", "^NQUSB2795LMJPY", "^NQNA2700LMEUR", "^NQUSBLM", "^NQNA2000LMGBPN", "^NQNA2700LMCAD", "^NQUSB2000LMAUD", "^QIV", "^NQDXUSMLTCGN", "^NQNA2700LMEURN", "^NQUS500LCGN", "^NQUSB2700LMCAD", "^NQGMOIN", "^NQUSB2700LMEUR", "^NQDM2700LMCADN", "^NQGS", "^NQNA2000LMN", "^NQNALMEURN", "^NQUSBLMCAD", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQUSB2795LMCAD", "^NQUSB2795LMJPYN", "^NQDMXJPLMAUDN", "^NQG2700LMAUDN", "^NQDMXKRLMAUD", "^KFTXNNR70", "^NQUSBLMJPY", "^NQNA2700LMJPY", "^NQUSB2700LMCADN", "^NDXCHF", "^NQUSB2000LMN", "^NQUSB2000LMJPYN", "^NQUSB2795LMEURN", "^NQGXGBLMN", "^NQNA2000LMAUD", "^NQDMXKRLCJPY", "^NQG2700LMN", "^WEALTHGN", "^NQDXUSLCEUR", "^NQUSB2700LMAUDN", "^WEALTHGL", "^NQDXUSLCG", "^NQUSB2790LMJPYN", "^NQUSB2795LMEUR", "^NQUSB2000LMGBP", "^NQDMXKRAUD", "^NQG2000LMJPY", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM2700LMAUDN", "^NQUSB2790LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQDM2000LMGBP", "^NQNALMJPY", "^NQDM2700LMAUD", "^NDX", "^NQGXGBLMJPY", "^NQG2000LMCADN", "^IPYNTR", "^NQG2000LMCAD", "^NQGXJPLMJPY", "^NQNA2000LMAUDN", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQNA2700LMJPYN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB2700LM", "^NQGXJPLMEUR", "^NQNA2700LMCADN", "^XNDXNNRCHF", "^NQG2700LMCAD", "^NQDMXJPLMGBPN", "^NQG2000LMEUR", "^NQDMXJPLMN", "^NQG2700LMEUR", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQUSBLMEURN", "^INDS", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQDM2000LMEURN", "^NQGXJPLMGBPN", "^QMI", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQFFUSGN", "^NQDM2700LMJPY", "^NQNALMAUD", "^NQDXUSLCN", "^NQUSB2790LMJPY", "^NQDM2000LMJPYN", "^NQGXGBLMAUD", "^NQDM2000LMCAD", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQDM2000LMEUR", "^NQUSB2790LMCAD", "^NQNA2000LMJPY", "^NQUSB2700LMGBP", "^NQUSB2790LMEUR", "^NQDMXKRLMEUR", "^MNX1", "^NQUSB2000LMEURN", "^NQNA2000LM", "^NQNALMAUDN", "^NQG2700LM", "^NQDM2700LMGBPN", "^NQG2700LMGBPN", "^NQDMXKRLMCAD", "^NQG2700LMJPY", "^NQDMXGBLM", "^IPY", "^NQUSB2790LMCADN", "^NQUSB2700LMGBPN", "^NQDMXGBLMJPYN", "^NQUSB2795LM", "^NQG2000LMEURN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQNA2700LMAUD", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQG2000LMJPYN", "^NQG2000LMGBPN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQG2700LMEURN", "^NQUSBLMCADN", "^NQDM2700LMN", "^NQDMXGBLMN", "^NQUSB2700LMAUD", "^NQUSB2795LMAUDN", "^NQNA2000LMEUR", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQNA2000LMCAD", "^NQGXJPLMCADN", "^NQG2700LMJPYN", "^NQUSB2795LMGBP", "^NQDM2000LMCADN", "^NQGXJPLM", "^NQUSB2000LMAUDN", "^NQUSBLMGBP", "^NQNALMN", "^NQUSB2790LM", "^NQDM2700LM", "^NQNA2700LMGBP", "^KFTX", "^NQUSB2790LMAUDN", "^RCH", "^NQUSLGN", "^NQDM2000LM", "^NQNA2700LMGBPN", "^NQG2000LMGBP", "^NQGXJPLMAUDN", "^NQUSB2795LMAUD", "^NQNA2000LMJPYN", "^NQDM2000LMAUDN", "^NQUSB2000LMCADN", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSB2795LMGBPN", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQNA2000LMEURN", "^NQUSB2000LMJPY", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQGMOI", "^NQDMXKRN", "^NQNA2700LMAUDN", "^XQC", "^NQUSB2000LMCAD", "^NQDMXJPLMEURN", "^NQUSB2000LMEUR", "^NDXCAD", "^NQDXUSMLTCG", "^NQDMXJPLM", "^NQDM2000LMJPY", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^XQO", "^NQDM2700LMCAD", "^NQDXUSLCEURN", "^NQDM2700LMEUR", "^NQDMXKRLCAUD", "^NQUSB2700LMN", "^XCQ", "^NQNALMCAD", "^NQUSB2790LMN", "^NQDM2700LMEURN", "^NQNA2700LMN", "^NQG2700LMCADN", "^NQGXJPLMEURN", "^NQDXUSLCGBP", "^NQUSB2790LMGBPN", "^NQG2700LMAUD", "^NQGXJPLMN", "^NQDM2700LMJPYN", "^NQNALMEUR", "^NDXGBP", "^NQG2000LMAUD", "^NQFFUSG", "^NQGXGBLMEUR", "^NQUSB2795LMCADN", "^NQDMXKRGBP", "^NQUSB2700LMJPYN", "^NQDM2000LMAUD", "^XNDXNNRHKD", "^NQDMXGBLMGBPN", "^NQDM2700LMGBP", "^XNDXNNREUR", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDXUSLCGBPN", "^NQUSB2790LMGBP", "^NQUSB2700LMEURN", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQNA2000LMGBP", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NDXX", "^NQUSB2700LMJPY", "^NQDXUSLCGN", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQNA2000LMCADN", "^NQG2700LMGBP", "^NQG2000LMAUDN", "^NQDMXJPLMCADN", "^RCHNTR", "^NQNA2700LM", "^NQUSB2795LMN", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQUSB2000LM", "^NQDM2000LMN", "^NQDMXJPLMCAD", "^NQDM2000LMGBPN", "^NQDMXJPLMEUR", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQUSB2790LMAUD", "^NQG2000LMN", "^NQG2000LM", "^NQUSB2000LMGBPN"],
        symbol: "PYPL"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 1.19,
                estimate: 1.39
              }, {
                date: "1Q2021",
                actual: 3.75,
                estimate: 2.97
              }, {
                date: "2Q2021",
                actual: 2.97,
                estimate: 3.16
              }, {
                date: "3Q2021",
                actual: 3.19,
                estimate: 2.56
              }],
              currentQuarterEstimate: 0.85,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1642435200, 1642798800]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 11692713000,
                earnings: 558929000
              }, {
                date: 2018,
                revenue: 15794341000,
                earnings: 1211242000
              }, {
                date: 2019,
                revenue: 20156447000,
                earnings: 1866916000
              }, {
                date: 2020,
                revenue: 24996056000,
                earnings: 2761395000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 6644442000,
                earnings: 542156000
              }, {
                date: "1Q2021",
                revenue: 7163282000,
                earnings: 1706715000
              }, {
                date: "2Q2021",
                revenue: 7341777000,
                earnings: 1353013000
              }, {
                date: "3Q2021",
                revenue: 7483467000,
                earnings: 1449071000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.22588894,
        marketCap: 294465634304,
        forwardPE: 50.785336,
        priceToBook: 19.227743,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1022160600000,
        priceHint: 2,
        totalCash: 7526681100,
        floatShares: 437127373,
        ebitda: 6693351936,
        shortRatio: 2.42,
        targetPriceHigh: 800,
        targetPriceLow: 340,
        targetPriceMean: 660.8,
        targetPriceMedian: 700,
        heldPercentInsiders: 1.528,
        heldPercentInstitutions: 82.108,
        postMarketChangePercent: 0.040608697,
        postMarketTime: 1634947170,
        postMarketPrice: 665.05,
        postMarketChange: 0.2699585,
        regularMarketChange: 11.620056,
        regularMarketChangePercent: 1.779052,
        regularMarketTime: 1634932803,
        regularMarketPrice: 664.78,
        regularMarketDayHigh: 665.435,
        regularMarketDayRange: "651.81 - 665.435",
        regularMarketDayLow: 651.81,
        regularMarketVolume: 6186016,
        sharesShort: 9185120,
        sharesShortPrevMonth: 10187662,
        shortPercentFloat: 2.11,
        regularMarketPreviousClose: 653.16,
        bid: 664.5,
        ask: 666,
        bidSize: 8,
        askSize: 11,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_32012",
        fullExchangeName: "NasdaqGS",
        shortName: "Netflix, Inc.",
        longName: "Netflix, Inc.",
        regularMarketOpen: 651.81,
        averageDailyVolume3Month: 3621830,
        averageDailyVolume10Day: 5843425,
        beta: 0.713227,
        fiftyTwoWeekLowChange: 201.37003,
        fiftyTwoWeekLowChangePercent: 0.43453965,
        fiftyTwoWeekRange: "463.41 - 665.46",
        fiftyTwoWeekHighChange: -0.6799927,
        fiftyTwoWeekHighChangePercent: -0.0010218385,
        fiftyTwoWeekLow: 463.41,
        fiftyTwoWeekHigh: 665.46,
        earningsTimestamp: 1634659200,
        earningsTimestampStart: 1642435200,
        earningsTimestampEnd: 1642798800,
        trailingPE: 59.938694,
        pegRatio: 1.43,
        dividendsPerShare: 0,
        revenue: 28632967200,
        priceToSales: 10.284146,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 11.091,
        epsForward: 13.09,
        epsCurrentYear: 10.73,
        epsNextQuarter: 3.5,
        priceEpsCurrentYear: 61.955273,
        priceEpsNextQuarter: 189.93715,
        sharesOutstanding: 442596000,
        bookValue: 34.574,
        fiftyDayAverage: 610.1394,
        fiftyDayAverageChange: 54.640625,
        fiftyDayAverageChangePercent: 0.08955433,
        twoHundredDayAverage: 542.28406,
        twoHundredDayAverageChange: 122.49597,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQNA5300LMCADN", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQUSB5379LMAUDN", "^NQDM5000LMGBPN", "^NQUSB5370LMEURN", "^NQUSB5379LMAUD", "^NQGMOIN", "^NQUSB5000LM", "^NQUSB5370LMN", "^NQGS", "^NQDM5300LMAUDN", "^NQNALMEURN", "^NQUSBLMCAD", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA5000LMAUDN", "^NQUSB5300LMN", "^NQUSB5300LMAUDN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQG5300LMGBP", "^NDXCHF", "^NQUSB5000LMGBPN", "^NQUSB5370LMGBP", "^NQDM5000LM", "^NQDM5000LMGBP", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQG5000LMEUR", "^NQDXUSLCEUR", "^NQG5000LMCAD", "^NQDXUSLCG", "^CPQ", "^CPQNTR", "^NQUSB5379LMGBP", "^NQNA5000LMAUD", "^NQUSB5379LMGBPN", "^NQDM5000LMN", "^NQDMXKRAUD", "^NQNA5300LM", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQNA5000LMCADN", "^NQNA5300LMAUDN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG5300LMN", "^NQNALMJPY", "^NQG5300LMAUD", "^MSH", "^NDX", "^NQG5000LMJPY", "^NQGXGBLMJPY", "^NQGXJPLMJPY", "^NQUSB5370LMAUD", "^NQUSB5300LMEUR", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB5300LMCAD", "^NQDM5300LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB5000LMGBP", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQUSB5300LMCADN", "^NQDMXJPLMGBPN", "^NQG5300LMJPYN", "^NQUSB5300LMJPY", "^NQDMXJPLMN", "^NQNA5000LMJPY", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQNA5000LMGBPN", "^NQDMXKRLCEUR", "^NQNA5300LMJPY", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQG5300LMEURN", "^NQUSB5370LMCADN", "^NQUSBLMEURN", "^INDS", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQDM5300LMN", "^NQUSMLTCG", "^NQGXJPLMGBPN", "^QMI", "^IXIC", "^NQDM5300LMCAD", "^NQNALM", "^NQUS500LC", "^NQDM5300LMCADN", "^NQDM5300LMEUR", "^NQDMXGBLMJPY", "^NQNALMAUD", "^NQDXUSLCN", "^NQG5000LMEURN", "^NQGXGBLMAUD", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQNA5300LMCAD", "^NQFGSL", "^NQUSB5000LMAUD", "^NQG5000LMJPYN", "^NQDMXKRLMEUR", "^MNX1", "^NQUSB5000LMEURN", "^NQNALMAUDN", "^NQUSB5370LMAUDN", "^NQDM5000LMCAD", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQNA5300LMEUR", "^NQNA5300LMGBPN", "^NQNA5300LMN", "^NQDMXGBLMJPYN", "^NQDM5000LMEUR", "^NQDM5300LM", "^NQDM5000LMJPYN", "^NQDMXKRLMJPY", "^NQG5000LM", "^NQSSRE", "^NQUSBLMJPYN", "^NQDMXGBLMCAD", "^NQUSB5000LMJPYN", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDM5000LMEURN", "^NQUSB5300LMEURN", "^RMIVG20", "^NQUSB5379LMEUR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQG5300LMCADN", "^NQNALMGBPN", "^NQUSB5379LMJPYN", "^NQGXGBLMCADN", "^NQUSB5370LM", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQGXJPLM", "^NQUSB5370LMGBPN", "^NQG5300LM", "^NQUSB5000LMN", "^NQG5300LMJPY", "^NQUSBLMGBP", "^NQUSB5300LMJPYN", "^NQDM5300LMEURN", "^NQNA5300LMAUD", "^NQNALMN", "^NQG5000LMCADN", "^NQUSLGN", "^NQDM5300LMJPYN", "^NQUSB5370LMJPY", "^NQDM5000LMJPY", "^NQG5300LMCAD", "^NQGXJPLMAUDN", "^NQUSB5370LMEUR", "^NQUSB5000LMCADN", "^NQUSB5370LMCAD", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSB5379LMJPY", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQUSB5300LMAUD", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA5000LMCAD", "^NQGMOI", "^NQDMXKRN", "^NQNA5000LMEUR", "^QTW", "^XQC", "^NQDM5000LMCADN", "^NQDMXJPLMEURN", "^NQUSB5379LMN", "^NDXCAD", "^NQDXUSMLTCG", "^NQDMXJPLM", "^NQG5000LMN", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQG5000LMGBP", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^XQO", "^NQG5300LMEUR", "^NQDM5300LMGBP", "^NQDXUSLCEURN", "^NQUSB5379LMCAD", "^NQUSB5379LMEURN", "^NQUSB5000LMJPY", "^NQG5000LMGBPN", "^NQDMXKRLCAUD", "^XCQ", "^NQDXUSMEGAN", "^NQNALMCAD", "^NQNA5000LMGBP", "^NQUSB5300LMGBP", "^NQNA5300LMEURN", "^NQNA5000LM", "^NQGXJPLMEURN", "^NQNA5300LMGBP", "^NQUSB5300LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQNA5300LMJPYN", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQUSB5000LMAUDN", "^XNDXNNRHKD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDXUSLCGBPN", "^NQG5000LMAUD", "^NQDM5300LMAUD", "^NQUSB5000LMCAD", "^NQUSB5000LMEUR", "^NQUSBLMGBPN", "^QNET", "^NQG5300LMGBPN", "^NQDMXKRLMN", "^NQFGSLN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQNA5000LMJPYN", "^NDXX", "^NQDXUSLCGN", "^NQDM5000LMAUDN", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQG5000LMAUDN", "^NQDMXJPLMCADN", "^NQNA5000LMEURN", "^NQSSREN", "^NQUSB5379LMCADN", "^NQDMXGBLMAUD", "^NQNA5000LMN", "^NQUSBLMAUDN", "^NQG5300LMAUDN", "^NQDMXJPLMCAD", "^NQUSB5370LMJPYN", "^NQDMXJPLMEUR", "^NQUSB5379LM", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUSB5300LMGBPN", "^NQUS500LCN", "^NQDM5300LMGBPN", "^NQDM5000LMAUD"],
        symbol: "NFLX"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 0.78,
                estimate: 0.62
              }, {
                date: "1Q2021",
                actual: 0.9,
                estimate: 0.76
              }, {
                date: "2Q2021",
                actual: 0.93,
                estimate: 0.51
              }, {
                date: "3Q2021",
                actual: 1.16,
                estimate: 1.11
              }],
              currentQuarterEstimate: 0.63,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1639699200, 1640044800]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 36397000000,
                earnings: 1933000000
              }, {
                date: 2019,
                revenue: 39117000000,
                earnings: 4029000000
              }, {
                date: 2020,
                revenue: 37403000000,
                earnings: 2539000000
              }, {
                date: 2021,
                revenue: 44538000000,
                earnings: 5727000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 11243000000,
                earnings: 1251000000
              }, {
                date: "1Q2021",
                revenue: 10357000000,
                earnings: 1449000000
              }, {
                date: "2Q2021",
                revenue: 12344000000,
                earnings: 1509000000
              }, {
                date: "3Q2021",
                revenue: 12248000000,
                earnings: 1874000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.091465354,
        marketCap: 258759409664,
        forwardPE: 34.41684,
        priceToBook: 18.042158,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 344615400000,
        priceHint: 2,
        totalCash: 13694999600,
        floatShares: 1261030875,
        ebitda: 8336999936,
        shortRatio: 1.55,
        targetPriceHigh: 213,
        targetPriceLow: 134,
        targetPriceMean: 179.53,
        targetPriceMedian: 180,
        heldPercentInsiders: 1.222,
        heldPercentInstitutions: 83.223,
        postMarketChangePercent: -0.17127404,
        postMarketTime: 1634947170,
        postMarketPrice: 163.2,
        postMarketChange: -0.27999878,
        regularMarketChange: 1.3,
        regularMarketChangePercent: 0.80158,
        regularMarketTime: 1634932804,
        regularMarketPrice: 163.48,
        regularMarketDayHigh: 164.62,
        regularMarketDayRange: "162.28 - 164.62",
        regularMarketDayLow: 162.28,
        regularMarketVolume: 5323021,
        sharesShort: 12317687,
        sharesShortPrevMonth: 10664545,
        shortPercentFloat: 1.23,
        regularMarketPreviousClose: 162.18,
        bid: 163.57,
        ask: 163.47,
        bidSize: 10,
        askSize: 9,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_291981",
        fullExchangeName: "NYSE",
        shortName: "Nike, Inc.",
        longName: "NIKE, Inc.",
        regularMarketOpen: 162.28,
        averageDailyVolume3Month: 6165273,
        averageDailyVolume10Day: 5988437,
        beta: 0.904761,
        fiftyTwoWeekLowChange: 44.679993,
        fiftyTwoWeekLowChangePercent: 0.3760942,
        fiftyTwoWeekRange: "118.8 - 174.38",
        fiftyTwoWeekHighChange: -10.900009,
        fiftyTwoWeekHighChangePercent: -0.06250722,
        fiftyTwoWeekLow: 118.8,
        fiftyTwoWeekHigh: 174.38,
        dividendDate: 1633046400,
        exDividendDate: 1630022400,
        earningsTimestamp: 1632413700,
        earningsTimestampStart: 1639699200,
        earningsTimestampEnd: 1640044800,
        trailingAnnualDividendRate: 1.1,
        trailingPE: 43.351894,
        pegRatio: 3.02,
        dividendsPerShare: 1.1,
        dividendRate: 1.1,
        trailingAnnualDividendYield: 0.0067825876,
        dividendYield: 0.67,
        revenue: 46192001000,
        priceToSales: 5.601823,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 3.771,
        epsForward: 4.75,
        epsCurrentYear: 3.59,
        epsNextQuarter: 0.74,
        priceEpsCurrentYear: 45.537605,
        priceEpsNextQuarter: 220.91891,
        sharesOutstanding: 1277810048,
        bookValue: 9.061,
        fiftyDayAverage: 155.35657,
        fiftyDayAverageChange: 8.123428,
        fiftyDayAverageChangePercent: 0.052288927,
        twoHundredDayAverage: 149.78029,
        twoHundredDayAverageChange: 13.699707,
        components: ["^NQDMXJPLMAUD", "^NQNA3700LMGBPN", "^NQUSBLM", "^NQNA3000LMJPY", "^NQGMOIN", "^NQUSB3000LMJPY", "^NQUSB3700LMGBP", "^NQDM3000LM", "^NQNALMEURN", "^NQUSBLMCAD", "^DVGCADN", "^NQDM3700LMEUR", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQDM3700LMCAD", "^NQUSB3000LMEUR", "^NQUSB3000LMCAD", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQUSB3760LMAUD", "^NQPRCE", "^NQGXGBLMN", "^NQVDIV", "^NQUS500LCVN", "^NQDMXKRLCJPY", "^WEALTHGN", "^NQDXUSLCEUR", "^NQG3000LMEUR", "^WEALTHGL", "^NQDM3000LMCADN", "^CAPEXA", "^NQG3700LMJPYN", "^NQG3700LMEURN", "^NQUSB3000LMGBPN", "^NQDMXKRAUD", "^NQG3000LMGBPN", "^NQUSB3760LMEURN", "^NQDMXKRLMGBPN", "^NQDXUSMLTCVN", "^NQGXGBLMGBPN", "^NQDM3000LMAUD", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQNALMJPY", "^NQNA3000LMCADN", "^NQUSB3760LMJPYN", "^DAA", "^NQGXGBLMJPY", "^QCRD", "^NQNA3700LMGBP", "^NQGXJPLMJPY", "^NQDM3700LM", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^NQG3000LMAUDN", "^NQDMXJPLMGBPN", "^NQUSLV", "^NQDMXJPLMN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQG3000LMJPY", "^NQUSBLMEURN", "^NQDM3000LMGBPN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQDM3000LMJPY", "^NQGXJPLMGBPN", "^NQUSB3000LMCADN", "^NQNA3000LM", "^NQNA3700LMAUDN", "^NQNALM", "^NQUS500LC", "^NQUSB3700LM", "^NQG3700LMGBP", "^NQDMXGBLMJPY", "^NQUSMLTCV", "^NQUSB3760LMGBPN", "^NQNALMAUD", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQG3000LMCAD", "^NQVDIVN", "^NQDXUSLCV", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQFGSL", "^NQDMXKRLMEUR", "^NQUSB3700LMCAD", "^NQUSB3700LMJPYN", "^NQNALMAUDN", "^NQUSB3700LMEUR", "^CAPEXAN", "^NQUSB3700LMEURN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQDM3700LMEURN", "^NQG3700LMAUD", "^NQDMXGBLMJPYN", "^NQG3000LMCADN", "^NQUSB3760LMGBP", "^NQNA3000LMEURN", "^NQDMXKRLMJPY", "^NQUSB3000LMAUDN", "^NQUSBLMJPYN", "^NQDM3700LMJPYN", "^NQDM3700LMGBP", "^NQNA3000LMAUD", "^NQNA3000LMJPYN", "^NQDMXGBLMCAD", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQBUY", "^NQDMXGBLMEUR", "^NQDM3000LMAUDN", "^NQG3700LMGBPN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQNA3000LMGBP", "^NQDMXGBLMN", "^NQDM3000LMN", "^NQG3000LM", "^NQUSB3000LMJPYN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB3760LMEUR", "^NQUSB3760LMCAD", "^NQUSB3000LMGBP", "^NQUSB3700LMJPY", "^NQGXJPLM", "^NQUSB3000LMEURN", "^NQG3700LM", "^NQUSB3700LMN", "^NQUSBLMGBP", "^NQNALMN", "^NQDM3700LMAUD", "^RCH", "^NQNA3000LMGBPN", "^NQNA3700LMCAD", "^NQGXJPLMAUDN", "^NQUSB3000LMAUD", "^NQUSLVN", "^NQNA3700LMEUR", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDMXKRLC", "^NQG3000LMAUD", "^NQNALMGBP", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQGMOI", "^NQUSB3700LMCADN", "^NQDMXKRN", "^NQDM3700LMN", "^NQUSMLTCVN", "^NQUSB3760LM", "^NQCRDN", "^NQDMXJPLMEURN", "^NQG3700LMN", "^NQDMXJPLM", "^NQDM3700LMCADN", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQNA3700LMCADN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQUSB3760LMAUDN", "^NQDM3000LMEUR", "^NQDMXKRCAD", "^NQPRCEN", "^NQNA3700LMJPY", "^DJA", "^NQG3000LMEURN", "^NQDM3000LMCAD", "^DAAXMLPREIT", "^NQDXUSMLTCV", "^NQDXUSLCEURN", "^NQNA3000LMAUDN", "^NQDMXKRLCAUD", "^NQNALMCAD", "^NQG3000LMGBP", "^NQUSB3760LMN", "^NQUSB3700LMGBPN", "^NQGXJPLMEURN", "^NQDXUSLCGBP", "^NQG3000LMJPYN", "^NQUSB3000LMN", "^NQGXJPLMN", "^NQNALMEUR", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM3000LMGBP", "^NQDMXGBLMGBPN", "^NQG3700LMJPY", "^NQCRD", "^NQDMXKRCADN", "^NQG3700LMAUDN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDXUSLCGBPN", "^NQNA3000LMN", "^NQDM3700LMGBPN", "^NQUSBLMGBPN", "^NQNA3700LMAUD", "^NQDMXKRLMN", "^NQFGSLN", "^NQGXJPLMAUD", "^NQUSB3000LM", "^NQDMXGBLMAUDN", "^NQNA3700LMJPYN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDM3000LMEURN", "^NQNA3700LM", "^NQDMXKREURN", "^NQNA3000LMCAD", "^NQNALMJPYN", "^NQDM3700LMAUDN", "^NQNA3000LMEUR", "^NQG3700LMCADN", "^NQDMXJPLMCADN", "^NQUSB3760LMCADN", "^NQDVRIS", "^RCHNTR", "^NQUSB3700LMAUD", "^NQG3000LMN", "^NQDM3000LMJPYN", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQUSB3760LMJPY", "^NQNA3700LMN", "^NQDMXJPLMCAD", "^NQUSB3700LMAUDN", "^NQDMXJPLMEUR", "^NQDMXKRLMGBP", "^NQDXUSLCVN", "^NQGXGBLMAUDN", "^NQDM3700LMJPY", "^NQG3700LMEUR", "^NQNA3700LMEURN", "^NQUS500LCN", "^NQG3700LMCAD", "^NQUS500LCV"],
        symbol: "NKE"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 0.76,
                estimate: 0.7
              }, {
                date: "1Q2021",
                actual: 0.79,
                estimate: 0.76
              }, {
                date: "2Q2021",
                actual: 0.83,
                estimate: 0.82
              }, {
                date: "3Q2021",
                actual: 0.84,
                estimate: 0.82
              }],
              currentQuarterEstimate: 0.8,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1636541940, 1636977600]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 49330000000,
                earnings: 110000000
              }, {
                date: 2019,
                revenue: 51904000000,
                earnings: 11621000000
              }, {
                date: 2020,
                revenue: 49301000000,
                earnings: 11214000000
              }, {
                date: 2021,
                revenue: 49818000000,
                earnings: 10591000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 11929000000,
                earnings: 2174000000
              }, {
                date: "1Q2021",
                revenue: 11960000000,
                earnings: 2545000000
              }, {
                date: "2Q2021",
                revenue: 12803000000,
                earnings: 2863000000
              }, {
                date: "3Q2021",
                revenue: 13126000000,
                earnings: 3009000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.011604696,
        marketCap: 234885988352,
        forwardPE: 15.016349,
        priceToBook: 5.630364,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 635178600000,
        priceHint: 2,
        totalCash: 24526999600,
        floatShares: 4214319551,
        ebitda: 15495999488,
        shortRatio: 2.09,
        targetPriceHigh: 74,
        targetPriceLow: 50,
        targetPriceMean: 62.7,
        targetPriceMedian: 64,
        heldPercentInsiders: 0.067,
        heldPercentInstitutions: 74.854,
        postMarketChangePercent: -0.0181494,
        postMarketTime: 1634946761,
        postMarketPrice: 55.1,
        postMarketChange: -0.0100021,
        regularMarketChange: -0.579998,
        regularMarketChangePercent: -1.041476,
        regularMarketTime: 1634932802,
        regularMarketPrice: 55.11,
        regularMarketDayHigh: 55.86,
        regularMarketDayRange: "54.94 - 55.86",
        regularMarketDayLow: 54.94,
        regularMarketVolume: 14779464,
        sharesShort: 36609536,
        sharesShortPrevMonth: 41846217,
        shortPercentFloat: 0.87,
        regularMarketPreviousClose: 55.69,
        bid: 55.01,
        ask: 55.1,
        bidSize: 31,
        askSize: 12,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_19691",
        fullExchangeName: "NasdaqGS",
        shortName: "Cisco Systems, Inc.",
        longName: "Cisco Systems, Inc.",
        regularMarketOpen: 55.55,
        averageDailyVolume3Month: 15747446,
        averageDailyVolume10Day: 13353200,
        beta: 0.920105,
        fiftyTwoWeekLowChange: 19.830002,
        fiftyTwoWeekLowChangePercent: 0.5620749,
        fiftyTwoWeekRange: "35.28 - 60.27",
        fiftyTwoWeekHighChange: -5.16,
        fiftyTwoWeekHighChangePercent: -0.08561473,
        fiftyTwoWeekLow: 35.28,
        fiftyTwoWeekHigh: 60.27,
        dividendDate: 1635292800,
        exDividendDate: 1633305600,
        earningsTimestamp: 1612886714,
        earningsTimestampStart: 1636541940,
        earningsTimestampEnd: 1636977600,
        trailingAnnualDividendRate: 1.46,
        trailingPE: 22.044,
        pegRatio: 2.49,
        dividendsPerShare: 1.46,
        dividendRate: 1.48,
        trailingAnnualDividendYield: 0.026216557,
        dividendYield: 2.69,
        revenue: 49818001000,
        priceToSales: 4.714882,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 2.5,
        epsForward: 3.67,
        epsCurrentYear: 3.42,
        epsNextQuarter: 0.82,
        priceEpsCurrentYear: 16.114035,
        priceEpsNextQuarter: 67.20732,
        sharesOutstanding: 4217740032,
        bookValue: 9.788,
        fiftyDayAverage: 56.105145,
        fiftyDayAverageChange: -0.9951439,
        fiftyDayAverageChangePercent: -0.017737124,
        twoHundredDayAverage: 54.477802,
        twoHundredDayAverageChange: 0.63219833,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQSHYL", "^QIV", "^HXR", "^NQUSB9578LMAUD", "^NQGS", "^NQNALMEURN", "^HURNTR", "^NQUSB9000LMJPYN", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQUSB9570LMJPY", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQUSHEIN", "^NDXCHF", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQPRCE", "^NQGXGBLMN", "^NQUS500LCVN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQUSB9578LMN", "^NQDXUSLCEUR", "^CPQ", "^CPQNTR", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQDXUSMLTCVN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^NQUSHEI", "^MSH", "^NDX", "^NQGXGBLMJPY", "^NQMAEQY", "^QCRD", "^IXTC", "^NQUSB9570LMGBPN", "^NQGXJPLMJPY", "^NQDMXKR", "^NQUSB9578LMEURN", "^NQDMXGBLMCADN", "^NQUSHEIEURN", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^NQUSB9578LMJPYN", "^XNDXNNRCHF", "^NQDMXJPLMGBPN", "^NQUSLV", "^NQDMXJPLMN", "^NQGIHEIGBP", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQUSB9000LMN", "^NQDXUSLC", "^NQUSB9570LMAUDN", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQGIHEIGBPN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQUSB9570LM", "^NQDMXKRLCEURN", "^NQG9000LMAUD", "^NQUSHEIGBPN", "^NQGXJPLMGBPN", "^QMI", "^NQUSB9578LM", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQUSMLTCV", "^NQNALMAUD", "^NQNA9000LMN", "^NQVMVUS", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQDXUSLCV", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQUSB9570LMCADN", "^NQDMXKRLMEUR", "^MNX1", "^NQUSB9578LMJPY", "^GRNENEF", "^HXRNTR", "^NQNALMAUDN", "^NQG9000LMEURN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB9570LMAUD", "^NQSHYLN", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSHEIGBP", "^NQGXJPLM", "^NQNA9000LMAUD", "^NQUSB9570LMGBP", "^NQUSBLMGBP", "^NQNALMN", "^NQUSB9000LMAUD", "^NQUSB9578LMCAD", "^NQNA9000LM", "^NQUSB9578LMEUR", "^NQUSB9570LMEURN", "^NQFFUSLV", "^NQGXJPLMAUDN", "^NQUSLVN", "^NQGIHEIN", "^GRNCLNFO", "^NQCAPST", "^NQ96DIVUS", "^NQUSB9578LMGBPN", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^GREENIT", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQDMXKRN", "^NQUSB9570LMN", "^GRNFOCUS", "^NQUSMLTCVN", "^XQC", "^NQCRDN", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NDXCAD", "^NQFFUSLVN", "^NQNA9000LMJPYN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^NQPRCEN", "^XQO", "^GRNUS", "^DJA", "^NQDXUSMLTCV", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQDMXKRLCAUD", "^XCQ", "^NQDXUSMEGAN", "^NQNALMCAD", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^XNDXNNRHKD", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^NQUSB9578LMAUDN", "^XNDXNNREUR", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQUSB9570LMJPYN", "^NQG9000LM", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQUSHEIEUR", "^NDXT", "^NQUSB9000LM", "^QGREEN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQVMVUSN", "^NQUSB9578LMGBP", "^NQGIHEIEURN", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQG9000LMGBPN", "^NQDMXJPLMCADN", "^NQDVRIS", "^NQUSB9570LMCAD", "^NQGIHEI", "^NQGIHEIEUR", "^NQUSB9570LMEUR", "^NQDMXGBLMAUD", "^AXC", "^CSCSY", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^HUR", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQDXUSLCVN", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQNA9000LMCADN", "^NQUS500LCV", "^NQUSB9578LMCADN"],
        symbol: "CSCO"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 0.55,
                estimate: 0.46
              }, {
                date: "4Q2020",
                actual: 0.47,
                estimate: 0.42
              }, {
                date: "1Q2021",
                actual: 0.55,
                estimate: 0.5
              }, {
                date: "2Q2021",
                actual: 0.68,
                estimate: 0.56
              }],
              currentQuarterEstimate: 0.58,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635337800]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 36212000000,
                earnings: 1248000000
              }, {
                date: 2018,
                revenue: 34300000000,
                earnings: 6434000000
              }, {
                date: 2019,
                revenue: 37266000000,
                earnings: 8920000000
              }, {
                date: 2020,
                revenue: 33014000000,
                earnings: 7747000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 8652000000,
                earnings: 1737000000
              }, {
                date: "4Q2020",
                revenue: 8611000000,
                earnings: 1456000000
              }, {
                date: "2Q2021",
                revenue: 9020000000,
                earnings: 2245000000
              }, {
                date: "3Q2021",
                revenue: 10129000000,
                earnings: 2641000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.00986463,
        marketCap: 235039948800,
        forwardPE: 22.5,
        priceToBook: 10.560512,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: -252322200000,
        priceHint: 2,
        totalCash: 13045999600,
        floatShares: 3887762635,
        ebitda: 12999999488,
        shortRatio: 2.17,
        targetPriceHigh: 67,
        targetPriceLow: 55,
        targetPriceMean: 61.89,
        targetPriceMedian: 62.05,
        heldPercentInsiders: 0.638,
        heldPercentInstitutions: 69.076,
        postMarketChangePercent: -0.220384,
        postMarketTime: 1634947024,
        postMarketPrice: 54.33,
        postMarketChange: -0.119999,
        regularMarketChange: 0.100002,
        regularMarketChangePercent: 0.183997,
        regularMarketTime: 1634932802,
        regularMarketPrice: 54.45,
        regularMarketDayHigh: 54.53,
        regularMarketDayRange: "54.07 - 54.53",
        regularMarketDayLow: 54.07,
        regularMarketVolume: 12820769,
        sharesShort: 33833500,
        sharesShortPrevMonth: 28160082,
        shortPercentFloat: 0.79,
        regularMarketPreviousClose: 54.35,
        bid: 54.4,
        ask: 54.51,
        bidSize: 40,
        askSize: 11,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_26642",
        fullExchangeName: "NYSE",
        shortName: "Coca-Cola Company (The)",
        longName: "The Coca-Cola Company",
        regularMarketOpen: 54.39,
        averageDailyVolume3Month: 13278161,
        averageDailyVolume10Day: 13792037,
        beta: 0.641798,
        fiftyTwoWeekLowChange: 7.1500015,
        fiftyTwoWeekLowChangePercent: 0.15116282,
        fiftyTwoWeekRange: "47.3 - 57.56",
        fiftyTwoWeekHighChange: -3.1100006,
        fiftyTwoWeekHighChangePercent: -0.054030586,
        fiftyTwoWeekLow: 47.3,
        fiftyTwoWeekHigh: 57.56,
        dividendDate: 1633046400,
        exDividendDate: 1631577600,
        earningsTimestamp: 1635337800,
        earningsTimestampStart: 1635337800,
        earningsTimestampEnd: 1635337800,
        trailingAnnualDividendRate: 1.66,
        trailingPE: 29.102083,
        pegRatio: 2.42,
        dividendsPerShare: 1.66,
        dividendRate: 1.68,
        trailingAnnualDividendYield: 0.030542778,
        dividendYield: 3.09,
        revenue: 36411998000,
        priceToSales: 6.4550138,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 1.871,
        epsForward: 2.42,
        epsCurrentYear: 2.26,
        epsNextQuarter: 0.44,
        priceEpsCurrentYear: 24.09292,
        priceEpsNextQuarter: 123.75,
        sharesOutstanding: 4316619776,
        bookValue: 5.156,
        fiftyDayAverage: 54.390858,
        fiftyDayAverageChange: 0.059143066,
        fiftyDayAverageChangePercent: 0.0010873715,
        twoHundredDayAverage: 54.99248,
        twoHundredDayAverageChange: -0.54248047,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQNA3000LMJPY", "^NQUSB3530LMJPY", "^NQUSB3537LMN", "^NQUSB3000LMJPY", "^NQDM3000LM", "^NQNALMEURN", "^NQUSB3500LMGBP", "^NQUSBLMCAD", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQUSB3000LMEUR", "^NQUSB3000LMCAD", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQFFUSHYN", "^NQNA3500LMAUDN", "^NQUSBLMJPY", "^NQUSHEIN", "^NQDM3500LMCAD", "^NQDM3500LMGBPN", "^NQDM3500LMEUR", "^NQUSB3500LMGBPN", "^NQGXGBLMN", "^NQVDIV", "^NQUS500LCVN", "^NQDMXKRLCJPY", "^NQDM3500LMAUDN", "^NQG3000LMEUR", "^NQDM3000LMCADN", "^NQUSB3530LMCADN", "^NQUSB3000LMGBPN", "^NQDMXKRAUD", "^NQG3500LMAUD", "^NQG3000LMGBPN", "^NQUSB3500LMAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM3000LMAUD", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQUSB3500LMAUDN", "^NQDM3500LMJPY", "^NQNALMJPY", "^NQNA3000LMCADN", "^NQUSHEI", "^DAA", "^NQGXGBLMJPY", "^NQMAEQY", "^NQGXJPLMJPY", "^NQDMXKR", "^AKX", "^NQDMXGBLMCADN", "^NQUSHEIEURN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^NQG3000LMAUDN", "^NQDMXJPLMGBPN", "^NQUSLV", "^NQDMXJPLMN", "^NQGIHEIGBP", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQG3500LMJPY", "^NQGXGBLMJPYN", "^NQG3000LMJPY", "^NQUSB3537LMGBPN", "^NQGIHEIGBPN", "^NQNA3500LMGBPN", "^NQUSBLMEURN", "^NQDM3000LMGBPN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQUSB3537LMGBP", "^NQDMXKRLCEURN", "^NQDM3000LMJPY", "^NQUSHEIGBPN", "^NQGXJPLMGBPN", "^NQUSB3000LMCADN", "^NQNA3000LM", "^NQUSB3530LM", "^NQNALM", "^NQUS500LC", "^NQG3500LMEURN", "^NQDMXGBLMJPY", "^NQUSMLTCV", "^NQNALMAUD", "^NQUSB3530LMJPYN", "^NQNA3500LMAUD", "^KOSPY", "^NQGXGBLMAUD", "^NQG3000LMCAD", "^NQVDIVN", "^NQG3500LMJPYN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQDMXKRLMEUR", "^NQUSB3530LMEURN", "^NQUSB3530LMAUD", "^NQNALMAUDN", "^NQUSB3500LMCADN", "^NQUSB3537LMAUD", "^NQFFUSHY", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQDM3500LMCADN", "^NQDMXGBLMJPYN", "^NQG3000LMCADN", "^NQNA3000LMEURN", "^NQNA3500LM", "^NQDMXKRLMJPY", "^NQNA3500LMGBP", "^NQUSB3000LMAUDN", "^NQUSBLMJPYN", "^NQNA3000LMAUD", "^NQNA3000LMJPYN", "^NQDMXGBLMCAD", "^XMI", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQDM3000LMAUDN", "^NQNA3500LMN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQNA3000LMGBP", "^NQDMXGBLMN", "^NQDM3000LMN", "^NQG3000LM", "^NQUSB3500LMN", "^NQUSB3000LMJPYN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB3530LMGBP", "^NQUSB3500LMJPY", "^NQUSHEIGBP", "^NQUSB3000LMGBP", "^NQGXJPLM", "^NQUSB3000LMEURN", "^NQG3500LMCADN", "^NQUSBLMGBP", "^NQDM3500LMAUD", "^NQNALMN", "^NQNA3000LMGBPN", "^NQUSB3537LMAUDN", "^NQG3500LMN", "^NQUSB3537LMCADN", "^NQFFUSLV", "^NQG3500LMCAD", "^NQGXJPLMAUDN", "^NQUSB3000LMAUD", "^NQUSLVN", "^NQGIHEIN", "^NQG3500LMEUR", "^NQUSB3500LMJPYN", "^NQCAPST", "^NQUSB3500LMEUR", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM3500LM", "^NQDMXKRLC", "^NQG3000LMAUD", "^NQNALMGBP", "^NQUSB3500LMEURN", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA3500LMJPYN", "^NQG3500LMAUDN", "^NQDMXKRN", "^NQUSMLTCVN", "^NQDMXJPLMEURN", "^NQDM3500LMGBP", "^NQDM3500LMEURN", "^NQFFUSLVN", "^NQNA3500LMEURN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQUSB3537LM", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSB3500LMCAD", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDM3000LMEUR", "^NQDMXKRCAD", "^NQSSFBN", "^DJA", "^NQG3000LMEURN", "^NQDM3000LMCAD", "^DAAXMLPREIT", "^NQDM3500LMJPYN", "^NQSSFB", "^NQNA3000LMAUDN", "^NQUSB3500LM", "^NQDMXKRLCAUD", "^NQNALMCAD", "^NQG3000LMGBP", "^NQGXJPLMEURN", "^NQG3500LMGBP", "^NQG3000LMJPYN", "^NQUSB3000LMN", "^NQGXJPLMN", "^NQNALMEUR", "^NQUSB3537LMJPY", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM3000LMGBP", "^NQUSB3530LMN", "^NQUSB3530LMAUDN", "^NQDMXGBLMGBPN", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQNA3000LMN", "^NQDM3500LMN", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQGXJPLMAUD", "^NQUSB3000LM", "^NQDMXGBLMAUDN", "^NQUSHEIEUR", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQNA3500LMCAD", "^NQUSB3537LMEURN", "^NQNA3500LMEUR", "^NQUSB3537LMCAD", "^NQUSB3537LMEUR", "^NQDM3000LMEURN", "^NQGIHEIEURN", "^NQDMXKREURN", "^NQUSB3537LMJPYN", "^NQNA3000LMCAD", "^NQNALMJPYN", "^NQNA3000LMEUR", "^NQNA3500LMCADN", "^NQDMXJPLMCADN", "^NQG3500LM", "^NQUSB3530LMEUR", "^NQG3000LMN", "^NQDM3000LMJPYN", "^NQGIHEI", "^NQGIHEIEUR", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQUSB3530LMCAD", "^NQDMXJPLMCAD", "^NQNA3500LMJPY", "^NQDMXJPLMEUR", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUSB3530LMGBPN", "^NQUS500LCN", "^NQG3500LMGBPN", "^NQUS500LCV"],
        symbol: "KO"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 1.47,
                estimate: 1.46
              }, {
                date: "1Q2021",
                actual: 1.21,
                estimate: 1.12
              }, {
                date: "2Q2021",
                actual: 1.72,
                estimate: 1.53
              }, {
                date: "3Q2021",
                actual: 1.79,
                estimate: 1.73
              }],
              currentQuarterEstimate: 1.51,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1633437000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 63525000000,
                earnings: 4857000000
              }, {
                date: 2018,
                revenue: 64661000000,
                earnings: 12515000000
              }, {
                date: 2019,
                revenue: 67161000000,
                earnings: 7314000000
              }, {
                date: 2020,
                revenue: 70372000000,
                earnings: 7120000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 22455000000,
                earnings: 1845000000
              }, {
                date: "1Q2021",
                revenue: 14820000000,
                earnings: 1714000000
              }, {
                date: "2Q2021",
                revenue: 19217000000,
                earnings: 2358000000
              }, {
                date: "3Q2021",
                revenue: 20189000000,
                earnings: 2224000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.05853894,
        marketCap: 221182525440,
        forwardPE: 23.769688,
        priceToBook: 13.929815,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 76253400000,
        priceHint: 2,
        totalCash: 6849999900,
        floatShares: 1380191821,
        ebitda: 13886000128,
        shortRatio: 2.86,
        targetPriceHigh: 185,
        targetPriceLow: 145,
        targetPriceMean: 167.11,
        targetPriceMedian: 168.3,
        heldPercentInsiders: 0.146,
        heldPercentInstitutions: 73.269,
        postMarketChangePercent: -0.287558,
        postMarketTime: 1634947175,
        postMarketPrice: 159.51,
        postMarketChange: -0.460007,
        regularMarketChange: 0.79000854,
        regularMarketChangePercent: 0.4962989,
        regularMarketTime: 1634932804,
        regularMarketPrice: 159.97,
        regularMarketDayHigh: 160.46,
        regularMarketDayRange: "159.47 - 160.46",
        regularMarketDayLow: 159.47,
        regularMarketVolume: 2806507,
        sharesShort: 11357696,
        sharesShortPrevMonth: 9287931,
        shortPercentFloat: 0.82,
        regularMarketPreviousClose: 159.18,
        bid: 159.98,
        ask: 159.96,
        bidSize: 10,
        askSize: 12,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_32854",
        fullExchangeName: "NasdaqGS",
        shortName: "Pepsico, Inc.",
        longName: "PepsiCo, Inc.",
        regularMarketOpen: 159.58,
        averageDailyVolume3Month: 3769921,
        averageDailyVolume10Day: 3638562,
        beta: 0.618518,
        fiftyTwoWeekLowChange: 31.649994,
        fiftyTwoWeekLowChangePercent: 0.24664894,
        fiftyTwoWeekRange: "128.32 - 161.88",
        fiftyTwoWeekHighChange: -1.9100037,
        fiftyTwoWeekHighChangePercent: -0.011798886,
        fiftyTwoWeekLow: 128.32,
        fiftyTwoWeekHigh: 161.88,
        dividendDate: 1632960000,
        exDividendDate: 1630540800,
        earningsTimestamp: 1633437000,
        earningsTimestampStart: 1633437000,
        earningsTimestampEnd: 1633437000,
        trailingAnnualDividendRate: 4.195,
        trailingPE: 27.25213,
        pegRatio: 2.62,
        dividendsPerShare: 4.2,
        dividendRate: 4.3,
        trailingAnnualDividendYield: 0.026353816,
        dividendYield: 2.69,
        revenue: 76681003000,
        priceToSales: 2.8844502,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 5.87,
        epsForward: 6.73,
        epsCurrentYear: 6.24,
        epsNextQuarter: 1.29,
        priceEpsCurrentYear: 25.636219,
        priceEpsNextQuarter: 124.00776,
        sharesOutstanding: 1382649984,
        bookValue: 11.484,
        fiftyDayAverage: 155.41771,
        fiftyDayAverageChange: 4.552292,
        fiftyDayAverageChangePercent: 0.02929069,
        twoHundredDayAverage: 151.1234,
        twoHundredDayAverageChange: 8.846603,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQNA3000LMJPY", "^DWAMLVDM", "^NQUSB3530LMJPY", "^NQUSB3537LMN", "^NQUSB3000LMJPY", "^NQDM3000LM", "^NQNALMEURN", "^NQUSB3500LMGBP", "^NQUSBLMCAD", "^DVGCADN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQUSB3000LMEUR", "^NQUSB3000LMCAD", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQFFUSHYN", "^NQNA3500LMAUDN", "^NQUSBLMJPY", "^NQDM3500LMCAD", "^NQDM3500LMGBPN", "^NQDM3500LMEUR", "^NQUSB3500LMGBPN", "^NQPRCE", "^NQGXGBLMN", "^NQVDIV", "^NQUS500LCVN", "^NQDMXKRLCJPY", "^NQDM3500LMAUDN", "^NQG3000LMEUR", "^NQDM3000LMCADN", "^NQUSB3530LMCADN", "^NQUSB3000LMGBPN", "^NQDMXKRAUD", "^NQG3500LMAUD", "^NQG3000LMGBPN", "^NQUSB3500LMAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM3000LMAUD", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQUSB3500LMAUDN", "^NQDM3500LMJPY", "^NQNALMJPY", "^NQNA3000LMCADN", "^DAA", "^NQGXGBLMJPY", "^NQGXJPLMJPY", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^NQG3000LMAUDN", "^NQDMXJPLMGBPN", "^NQUSLV", "^NQDMXJPLMN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQG3500LMJPY", "^NQGXGBLMJPYN", "^NQG3000LMJPY", "^NQUSB3537LMGBPN", "^NQNA3500LMGBPN", "^NQUSBLMEURN", "^NQDM3000LMGBPN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQUSB3537LMGBP", "^NQDMXKRLCEURN", "^NQDM3000LMJPY", "^NQGXJPLMGBPN", "^NQUSB3000LMCADN", "^NQNA3000LM", "^NQUSB3530LM", "^NQNALM", "^NQUS500LC", "^NQG3500LMEURN", "^NQDMXGBLMJPY", "^NQUSMLTCV", "^NQNALMAUD", "^NQVMVUS", "^NQUSB3530LMJPYN", "^NQNA3500LMAUD", "^NQGXGBLMAUD", "^NQG3000LMCAD", "^NQVDIVN", "^NQG3500LMJPYN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQDMXKRLMEUR", "^NQUSB3530LMEURN", "^NQUSB3530LMAUD", "^NQNALMAUDN", "^NQUSB3500LMCADN", "^NQUSB3537LMAUD", "^NQFFUSHY", "^DWAMLVDMNTR", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQDM3500LMCADN", "^NQDMXGBLMJPYN", "^NQG3000LMCADN", "^NQNA3000LMEURN", "^NQNA3500LM", "^NQDMXKRLMJPY", "^NQNA3500LMGBP", "^NQUSB3000LMAUDN", "^NQUSBLMJPYN", "^NQNA3000LMAUD", "^NQNA3000LMJPYN", "^NQDMXGBLMCAD", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQDM3000LMAUDN", "^NQNA3500LMN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQNA3000LMGBP", "^NQDMXGBLMN", "^NQDM3000LMN", "^NQG3000LM", "^NQUSB3500LMN", "^NQUSB3000LMJPYN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB3530LMGBP", "^NQUSB3500LMJPY", "^NQUSB3000LMGBP", "^NQGXJPLM", "^NQUSB3000LMEURN", "^NQG3500LMCADN", "^NQUSBLMGBP", "^NQDM3500LMAUD", "^NQNALMN", "^NQNA3000LMGBPN", "^NQUSB3537LMAUDN", "^NQG3500LMN", "^NQUSB3537LMCADN", "^NQFFUSLV", "^NQG3500LMCAD", "^NQGXJPLMAUDN", "^NQUSB3000LMAUD", "^NQUSLVN", "^NQG3500LMEUR", "^NQUSB3500LMJPYN", "^NQCAPST", "^NQUSB3500LMEUR", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM3500LM", "^NQDMXKRLC", "^NQG3000LMAUD", "^NQNALMGBP", "^NQUSB3500LMEURN", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA3500LMJPYN", "^NQG3500LMAUDN", "^NQDMXKRN", "^NQUSMLTCVN", "^NQDMXJPLMEURN", "^NQDM3500LMGBP", "^NQDM3500LMEURN", "^NQFFUSLVN", "^NQNA3500LMEURN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQUSB3537LM", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSB3500LMCAD", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDM3000LMEUR", "^NQDMXKRCAD", "^NQPRCEN", "^NQSSFBN", "^NQG3000LMEURN", "^NQDM3000LMCAD", "^DAAXMLPREIT", "^NQDM3500LMJPYN", "^NQSSFB", "^NQNA3000LMAUDN", "^NQUSB3500LM", "^NQDMXKRLCAUD", "^NQNALMCAD", "^NQG3000LMGBP", "^NQGXJPLMEURN", "^NQG3500LMGBP", "^NQG3000LMJPYN", "^NQUSB3000LMN", "^NQGXJPLMN", "^NQNALMEUR", "^NQUSB3537LMJPY", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM3000LMGBP", "^NQUSB3530LMN", "^NQUSB3530LMAUDN", "^NQDMXGBLMGBPN", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQNA3000LMN", "^NQDM3500LMN", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFFUSQ", "^NQGXJPLMAUD", "^NQUSB3000LM", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQNA3500LMCAD", "^NQUSB3537LMEURN", "^NQNA3500LMEUR", "^NQVMVUSN", "^NQUSB3537LMCAD", "^NQUSB3537LMEUR", "^NQDM3000LMEURN", "^NQDMXKREURN", "^NQUSB3537LMJPYN", "^NQNA3000LMCAD", "^NQNALMJPYN", "^NQFFUSQN", "^NQNA3000LMEUR", "^NQNA3500LMCADN", "^NQDMXJPLMCADN", "^NQG3500LM", "^NQUSB3530LMEUR", "^NQG3000LMN", "^NQDM3000LMJPYN", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQUSB3530LMCAD", "^NQDMXJPLMCAD", "^NQNA3500LMJPY", "^NQDMXJPLMEUR", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUSB3530LMGBPN", "^NQUS500LCN", "^NQG3500LMGBPN", "^NQUS500LCV"],
        symbol: "PEP"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 1.52,
                estimate: 1.1
              }, {
                date: "1Q2021",
                actual: 1.39,
                estimate: 1.15
              }, {
                date: "2Q2021",
                actual: 1.28,
                estimate: 1.06
              }, {
                date: "3Q2021",
                actual: 1.71,
                estimate: 1.11
              }],
              currentQuarterEstimate: 1.01,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1642626000, 1643058000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 62761000000,
                earnings: 9601000000
              }, {
                date: 2018,
                revenue: 70848000000,
                earnings: 21053000000
              }, {
                date: 2019,
                revenue: 71965000000,
                earnings: 21048000000
              }, {
                date: 2020,
                revenue: 77867000000,
                earnings: 20899000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 19978000000,
                earnings: 5857000000
              }, {
                date: "1Q2021",
                revenue: 19673000000,
                earnings: 3361000000
              }, {
                date: "2Q2021",
                revenue: 19631000000,
                earnings: 5061000000
              }, {
                date: "3Q2021",
                revenue: 19192000000,
                earnings: 6823000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.11680474,
        marketCap: 201153822720,
        forwardPE: 11.21542,
        priceToBook: 2.2328563,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 322151400000,
        priceHint: 2,
        totalCash: 34635002000,
        floatShares: 4063339700,
        ebitda: 32270000128,
        shortRatio: 3.01,
        targetPriceHigh: 85,
        targetPriceLow: 40,
        targetPriceMean: 61.87,
        targetPriceMedian: 60,
        heldPercentInsiders: 0.07,
        heldPercentInstitutions: 64.968,
        postMarketChangePercent: -0.0404376,
        postMarketTime: 1634947197,
        postMarketPrice: 49.44,
        postMarketChange: -0.0200005,
        regularMarketChange: -6.540001,
        regularMarketChangePercent: -11.678573,
        regularMarketTime: 1634932803,
        regularMarketPrice: 49.46,
        regularMarketDayHigh: 50.55,
        regularMarketDayRange: "49.14 - 50.55",
        regularMarketDayLow: 49.14,
        regularMarketVolume: 108409258,
        sharesShort: 58948195,
        sharesShortPrevMonth: 58851153,
        shortPercentFloat: 1.45,
        regularMarketPreviousClose: 56,
        bid: 49.46,
        ask: 49.43,
        bidSize: 362,
        askSize: 361,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_21127",
        fullExchangeName: "NasdaqGS",
        shortName: "Intel Corporation",
        longName: "Intel Corporation",
        regularMarketOpen: 50.39,
        averageDailyVolume3Month: 22516475,
        averageDailyVolume10Day: 34523187,
        fiftyTwoWeekLowChange: 5.8499985,
        fiftyTwoWeekLowChangePercent: 0.1341435,
        fiftyTwoWeekRange: "43.61 - 68.49",
        fiftyTwoWeekHighChange: -19.029999,
        fiftyTwoWeekHighChangePercent: -0.27785078,
        fiftyTwoWeekLow: 43.61,
        fiftyTwoWeekHigh: 68.49,
        dividendDate: 1638316800,
        exDividendDate: 1635984000,
        earningsTimestamp: 1634846400,
        earningsTimestampStart: 1642626000,
        earningsTimestampEnd: 1643058000,
        trailingAnnualDividendRate: 0.33,
        trailingPE: 9.588987,
        pegRatio: 1.17,
        dividendsPerShare: 1.35,
        dividendRate: 1.39,
        trailingAnnualDividendYield: 0.0058928574,
        dividendYield: 2.81,
        revenue: 78474002000,
        priceToSales: 2.563318,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 5.158,
        epsForward: 4.41,
        epsCurrentYear: 4.79,
        epsNextQuarter: 0.99,
        priceEpsCurrentYear: 10.325679,
        priceEpsNextQuarter: 49.959595,
        sharesOutstanding: 4056999936,
        bookValue: 22.151,
        fiftyDayAverage: 53.848858,
        fiftyDayAverageChange: -4.388859,
        fiftyDayAverageChangePercent: -0.08150329,
        twoHundredDayAverage: 56.001205,
        twoHundredDayAverageChange: -6.5412064,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^QIV", "^NQUSB9576LMGBPN", "^NQUSB9576LM", "^NQGS", "^NQNALMEURN", "^NQSSSEN", "^NQUSB9000LMJPYN", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQUSB9570LMJPY", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQGXGBLMN", "^NQUS500LCVN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQDXUSLCEUR", "^INTSY", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQDXUSMLTCVN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^MSH", "^NDX", "^NQGXGBLMJPY", "^QCRD", "^NQUSB9570LMGBPN", "^SOX", "^IXCO", "^NQGXJPLMJPY", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQDMXJPLMGBPN", "^NQUSLV", "^NQDMXJPLMN", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQSSSE", "^NQUSB9000LMN", "^NQDXUSLC", "^NQUSB9570LMAUDN", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQUSB9570LM", "^NQDMXKRLCEURN", "^NQG9000LMAUD", "^NQUSB9576LMGBP", "^NQGXJPLMGBPN", "^QMI", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQUSMLTCV", "^NQNALMAUD", "^NQNA9000LMN", "^NQVMVUS", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQDXUSLCV", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQFGSL", "^NQUSB9570LMCADN", "^NQDMXKRLMEUR", "^MNX1", "^NQNALMAUDN", "^GMB", "^NQG9000LMEURN", "^NQUSB9576LMJPYN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB9570LMAUD", "^NQUSB9576LMAUD", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^RSDNTR", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQGXJPLM", "^NQUSB9576LMEURN", "^NQNA9000LMAUD", "^NQUSB9570LMGBP", "^NQUSBLMGBP", "^RSD", "^NQNALMN", "^NQUSB9000LMAUD", "^NQNA9000LM", "^NQUSB9570LMEURN", "^SX", "^NQGXJPLMAUDN", "^NQUSLVN", "^NQCAPST", "^NQ96DIVUS", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQDMXKRN", "^NQUSB9570LMN", "^NQUSMLTCVN", "^XQC", "^NQCRDN", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NDXCAD", "^NQNA9000LMJPYN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^XQO", "^DJA", "^NQDXUSMLTCV", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^GMBNTR", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQUSB9576LMN", "^NQDMXKRLCAUD", "^XCQ", "^NQDXUSMEGAN", "^NQNALMCAD", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQGXGBLMEUR", "^NQUSB9576LMJPY", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^XNDXNNRHKD", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQUSB9576LMCADN", "^XNDXNNRCAD", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQUSB9570LMJPYN", "^NQG9000LM", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFGSLN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NDXT", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQVMVUSN", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQUSB9576LMCAD", "^NQG9000LMGBPN", "^NQUSB9576LMEUR", "^NQDMXJPLMCADN", "^NQDVRIS", "^NQUSB9570LMCAD", "^NQUSB9570LMEUR", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQDXUSLCVN", "^NQGXGBLMAUDN", "^NQUSB9576LMAUDN", "^NQUS500LCN", "^AXJ", "^NQNA9000LMCADN", "^NQUS500LCV"],
        symbol: "INTC"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: false,
        quoteSummary: {
          errorResult: {
            code: "Not Found",
            description: "No fundamentals data found for any of the summaryTypes=earnings"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.18924461,
        marketCap: 188800843776,
        priceToBook: 1.1174998,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1214400600000,
        priceHint: 2,
        totalCash: 34104000500,
        floatShares: 7612174116,
        ebitda: 53721001984,
        heldPercentInsiders: 0.183,
        heldPercentInstitutions: 28.414,
        regularMarketChange: 0,
        regularMarketChangePercent: 0,
        regularMarketTime: 1634916195,
        regularMarketPrice: 24.1,
        regularMarketDayHigh: 24.1,
        regularMarketDayRange: "24.0 - 24.1",
        regularMarketDayLow: 24,
        regularMarketVolume: 330450,
        regularMarketPreviousClose: 24.1,
        bid: 0,
        ask: 0,
        bidSize: 0,
        askSize: 0,
        exchange: "PNK",
        market: "us_market",
        messageBoardId: "finmb_22385966",
        fullExchangeName: "Other OTC",
        shortName: "ROYAL DUTCH SHELL",
        longName: "Royal Dutch Shell plc",
        regularMarketOpen: 24.1,
        averageDailyVolume3Month: 69613,
        averageDailyVolume10Day: 127600,
        beta: 1.00619,
        fiftyTwoWeekLowChange: 12.700001,
        fiftyTwoWeekLowChangePercent: 1.1140352,
        fiftyTwoWeekRange: "11.4 - 25.0",
        fiftyTwoWeekHighChange: -0.8999996,
        fiftyTwoWeekHighChangePercent: -0.035999984,
        fiftyTwoWeekLow: 11.4,
        fiftyTwoWeekHigh: 25,
        exDividendDate: 1628726400,
        trailingAnnualDividendRate: 0.747,
        trailingPE: 33.7535,
        dividendsPerShare: 0.67,
        dividendRate: 0.75,
        trailingAnnualDividendYield: 0.03099585,
        dividendYield: 3.1,
        revenue: 204191007000,
        priceToSales: 0.9246286,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 0.714,
        sharesOutstanding: 4101240064,
        bookValue: 21.566,
        fiftyDayAverage: 21.854572,
        fiftyDayAverageChange: 2.245428,
        fiftyDayAverageChangePercent: 0.10274409,
        twoHundredDayAverage: 20.264965,
        twoHundredDayAverageChange: 3.8350353,
        symbol: "RYDAF"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "2Q2021",
                actual: 2.83,
                estimate: 1.22
              }],
              currentQuarterEstimate: 1.3,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635424200]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 673304000,
                earnings: -39995000
              }, {
                date: 2018,
                revenue: 1073229000,
                earnings: -64553000
              }, {
                date: 2019,
                revenue: 1578173000,
                earnings: -124842000
              }, {
                date: 2020,
                revenue: 2929491000,
                earnings: 319509000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 767405000,
                earnings: 191068000
              }, {
                date: "4Q2020",
                revenue: 977744000,
                earnings: 123872000
              }, {
                date: "1Q2021",
                revenue: 988647000,
                earnings: 1258445000
              }, {
                date: "2Q2021",
                revenue: 1119445000,
                earnings: 879093000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.038240887,
        marketCap: 177957486592,
        forwardPE: 184.93515,
        priceToBook: 17.57748,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1432128600000,
        priceHint: 2,
        totalCash: 7755386900,
        floatShares: 113061877,
        ebitda: 531630016,
        shortRatio: 2.13,
        targetPriceHigh: 2510.42,
        targetPriceLow: 1731.84,
        targetPriceMean: 2076.01,
        targetPriceMedian: 2030.89,
        heldPercentInsiders: 0.274,
        heldPercentInstitutions: 70.578,
        postMarketChangePercent: -0.199879,
        postMarketTime: 1634947190,
        postMarketPrice: 1423,
        postMarketChange: -2.84998,
        regularMarketChange: -70.859985,
        regularMarketChangePercent: -4.734383,
        regularMarketTime: 1634932802,
        regularMarketPrice: 1425.85,
        regularMarketDayHigh: 1472.95,
        regularMarketDayRange: "1404.48 - 1472.95",
        regularMarketDayLow: 1404.48,
        regularMarketVolume: 1513890,
        sharesShort: 1653331,
        sharesShortPrevMonth: 1757556,
        shortPercentFloat: 2.56,
        regularMarketPreviousClose: 1496.71,
        bid: 1421.11,
        ask: 1425.99,
        bidSize: 10,
        askSize: 10,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_84159238",
        fullExchangeName: "NYSE",
        shortName: "Shopify Inc.",
        longName: "Shopify Inc.",
        regularMarketOpen: 1470,
        averageDailyVolume3Month: 916772,
        averageDailyVolume10Day: 803462,
        beta: 1.487301,
        fiftyTwoWeekLowChange: 550.85,
        fiftyTwoWeekLowChangePercent: 0.6295428,
        fiftyTwoWeekRange: "875.0 - 1650.0",
        fiftyTwoWeekHighChange: -224.15002,
        fiftyTwoWeekHighChangePercent: -0.13584849,
        fiftyTwoWeekLow: 875,
        fiftyTwoWeekHigh: 1650,
        earningsTimestamp: 1635424200,
        earningsTimestampStart: 1635424200,
        earningsTimestampEnd: 1635424200,
        trailingPE: 73.2407,
        pegRatio: 5.09,
        dividendsPerShare: 0,
        revenue: 3853241090,
        priceToSales: 46.183846,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 19.468,
        epsForward: 7.71,
        epsCurrentYear: 7.69,
        epsNextQuarter: 1.42,
        priceEpsCurrentYear: 185.41612,
        priceEpsNextQuarter: 1004.11975,
        sharesOutstanding: 113224000,
        bookValue: 81.118,
        fiftyDayAverage: 1431.7566,
        fiftyDayAverageChange: -5.906616,
        fiftyDayAverageChangePercent: -0.004125433,
        twoHundredDayAverage: 1373.3325,
        twoHundredDayAverageChange: 52.517456,
        symbol: "SHOP"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 2.22,
                estimate: 1.9
              }, {
                date: "4Q2020",
                actual: 1.7,
                estimate: 1.78
              }, {
                date: "1Q2021",
                actual: 1.92,
                estimate: 1.81
              }, {
                date: "2Q2021",
                actual: 2.37,
                estimate: 2.11
              }],
              currentQuarterEstimate: 2.46,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635337800]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 22820400000,
                earnings: 5192300000
              }, {
                date: 2018,
                revenue: 21257900000,
                earnings: 5924300000
              }, {
                date: 2019,
                revenue: 21364400000,
                earnings: 6025400000
              }, {
                date: 2020,
                revenue: 19207800000,
                earnings: 4730500000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 5418100000,
                earnings: 1762600000
              }, {
                date: "4Q2020",
                revenue: 5313800000,
                earnings: 1377200000
              }, {
                date: "1Q2021",
                revenue: 5124600000,
                earnings: 1537200000
              }, {
                date: "2Q2021",
                revenue: 5887900000,
                earnings: 2219300000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.007128086,
        marketCap: 178066751488,
        forwardPE: 24.08485,
        priceToBook: -30.659637,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: -110197800000,
        priceHint: 2,
        totalCash: 3053400060,
        floatShares: 746186500,
        ebitda: 10887499776,
        shortRatio: 2.55,
        targetPriceHigh: 306,
        targetPriceLow: 232,
        targetPriceMean: 266.88,
        targetPriceMedian: 270,
        heldPercentInsiders: 0.047,
        heldPercentInstitutions: 68.728,
        postMarketChangePercent: -0.083877265,
        postMarketTime: 1634947186,
        postMarketPrice: 238.24,
        postMarketChange: -0.19999695,
        regularMarketChange: -2.95999,
        regularMarketChangePercent: -1.22618,
        regularMarketTime: 1634932803,
        regularMarketPrice: 238.44,
        regularMarketDayHigh: 242.24,
        regularMarketDayRange: "238.0 - 242.24",
        regularMarketDayLow: 238,
        regularMarketVolume: 3283657,
        sharesShort: 6778487,
        sharesShortPrevMonth: 6354593,
        shortPercentFloat: 0.91,
        regularMarketPreviousClose: 241.4,
        bid: 238.24,
        ask: 238.44,
        bidSize: 8,
        askSize: 11,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_139488",
        fullExchangeName: "NYSE",
        shortName: "McDonald's Corporation",
        longName: "McDonald's Corporation",
        regularMarketOpen: 240.71,
        averageDailyVolume3Month: 2453492,
        averageDailyVolume10Day: 2734125,
        beta: 0.604761,
        fiftyTwoWeekLowChange: 35.710007,
        fiftyTwoWeekLowChangePercent: 0.17614564,
        fiftyTwoWeekRange: "202.73 - 249.95",
        fiftyTwoWeekHighChange: -11.5099945,
        fiftyTwoWeekHighChangePercent: -0.04604919,
        fiftyTwoWeekLow: 202.73,
        fiftyTwoWeekHigh: 249.95,
        dividendDate: 1639526400,
        exDividendDate: 1638230400,
        earningsTimestamp: 1635337800,
        earningsTimestampStart: 1635337800,
        earningsTimestampEnd: 1635337800,
        trailingAnnualDividendRate: 5.12,
        trailingPE: 25.948416,
        pegRatio: 1.3,
        dividendsPerShare: 5.12,
        dividendRate: 5.52,
        trailingAnnualDividendYield: 0.02120961,
        dividendYield: 2.29,
        revenue: 21744400400,
        priceToSales: 8.189085,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 9.189,
        epsForward: 9.9,
        epsCurrentYear: 9.09,
        epsNextQuarter: 2.27,
        priceEpsCurrentYear: 26.231024,
        priceEpsNextQuarter: 105.03965,
        sharesOutstanding: 746798976,
        bookValue: -7.777,
        fiftyDayAverage: 242.60342,
        fiftyDayAverageChange: -4.1634216,
        fiftyDayAverageChangePercent: -0.017161429,
        twoHundredDayAverage: 236.75241,
        twoHundredDayAverageChange: 1.6875916,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQG5700LMCADN", "^NQDM5700LMJPYN", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQDM5000LMGBPN", "^NQDM5700LM", "^NQDM5700LMEURN", "^NQUSB5000LM", "^NQNALMEURN", "^NQUSBLMCAD", "^NQUSB5757LMCADN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQG5700LMGBP", "^NQNA5000LMAUDN", "^NQDM5700LMN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQFFUSHYN", "^NQUSBLMJPY", "^NQUSB5000LMGBPN", "^NQDM5000LM", "^NQPRCE", "^NQDM5000LMGBP", "^NQGXGBLMN", "^NQVDIV", "^NQDMXKRLCJPY", "^NQUSB5700LMEUR", "^NQG5000LMEUR", "^NQDXUSLCEUR", "^NQG5000LMCAD", "^NQUSB5757LMAUDN", "^NQDXUSLCG", "^NQNA5000LMAUD", "^NQDM5000LMN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQNA5000LMCADN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQNALMJPY", "^DAA", "^NQG5700LMAUD", "^NQG5000LMJPY", "^NQGXGBLMJPY", "^NQUSB5700LMN", "^NQUSB5757LMCAD", "^NQGXJPLMJPY", "^NQUSB5757LMEUR", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDM5700LMJPY", "^NQUSB5700LMCAD", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB5000LMGBP", "^NQGXJPLMEUR", "^NQNA5700LMEURN", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQNA5000LMJPY", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQNA5000LMGBPN", "^NQDMXKRLCEUR", "^NQUSB5700LMGBP", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQNA5700LM", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQGXJPLMGBPN", "^NQUSB5757LMEURN", "^NQUSB5757LMJPY", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQNALMAUD", "^NQG5700LMN", "^NQVMVUS", "^NQDXUSLCN", "^NQNA5700LMJPYN", "^NQG5000LMEURN", "^NQGXGBLMAUD", "^NQUSB5757LMJPYN", "^NQDM5700LMAUD", "^NQVDIVN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQUSB5000LMAUD", "^NQG5000LMJPYN", "^NQDMXKRLMEUR", "^NQUSB5000LMEURN", "^NQDM5700LMGBPN", "^NQNALMAUDN", "^NQDM5000LMCAD", "^NQFFUSHY", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB5757LMN", "^NQDMXGBLMJPYN", "^NQNA5700LMGBP", "^NQDM5000LMEUR", "^NQDM5000LMJPYN", "^NQDMXKRLMJPY", "^NQG5700LMAUDN", "^NQG5000LM", "^NQUSBLMJPYN", "^NQDMXGBLMCAD", "^NQUSB5000LMJPYN", "^XMI", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQDM5000LMEURN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQG5700LM", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB5700LMGBPN", "^NQDM5700LMAUDN", "^NQG5700LMJPY", "^NQGXJPLM", "^NQUSB5000LMN", "^NQUSBLMGBP", "^NQNA5700LMAUD", "^NQNALMN", "^NQG5000LMCADN", "^NQUSLGN", "^NQUSB5700LMAUDN", "^NQNA5700LMCADN", "^NQDM5000LMJPY", "^NQFFUSLV", "^NQGXJPLMAUDN", "^NQUSB5000LMCADN", "^NQCAPST", "^DRBNNR", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NQNA5700LMAUDN", "^NQUSB5700LMAUD", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA5000LMCAD", "^NQG5700LMGBPN", "^NQDMXKRN", "^NQNA5000LMEUR", "^NQDM5000LMCADN", "^NQDMXJPLMEURN", "^NQUSB5757LMAUD", "^NQDXUSMLTCG", "^NQFFUSLVN", "^NQDMXJPLM", "^NQG5000LMN", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQDM5700LMGBP", "^NQG5000LMGBP", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQG5700LMEUR", "^NQPRCEN", "^DJA", "^NQG5700LMCAD", "^DAAXMLPREIT", "^NQDXUSLCEURN", "^NQUSB5000LMJPY", "^NQG5000LMGBPN", "^NQDMXKRLCAUD", "^NQNALMCAD", "^NQNA5000LMGBP", "^NQG5700LMEURN", "^NQNA5000LM", "^NQGXJPLMEURN", "^NQUSB5700LMCADN", "^NQUSB5700LMJPY", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NQNA5700LMN", "^NQDM5700LMCADN", "^NQG5700LMJPYN", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQUSB5000LMAUDN", "^NQDM5700LMCAD", "^NQUSB5757LMGBP", "^NQDMXGBLMGBPN", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDM5700LMEUR", "^NQDXUSLCGBPN", "^NQG5000LMAUD", "^NQUSB5000LMCAD", "^NQUSB5000LMEUR", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFFUSQ", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQNA5000LMJPYN", "^NQDXUSLCGN", "^NQDM5000LMAUDN", "^NQVMVUSN", "^NQUS500LCG", "^NQUSB5700LM", "^NQDMXKREURN", "^NQNALMJPYN", "^NQFFUSQN", "^NQG5000LMAUDN", "^NQNA5700LMCAD", "^NQDMXJPLMCADN", "^NQNA5000LMEURN", "^NQNA5700LMEUR", "^NQDMXGBLMAUD", "^NQUSB5700LMJPYN", "^NQNA5000LMN", "^NQUSB5757LM", "^NQUSBLMAUDN", "^NQNA5700LMJPY", "^NQDMXJPLMCAD", "^DRBGN", "^NQDMXJPLMEUR", "^NQUSB5700LMEURN", "^NQUSB5757LMGBPN", "^DRBN", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQNA5700LMGBPN", "^NQUS500LCN", "^NQDM5000LMAUD", "^DRBG"],
        symbol: "MCD"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 1,
                estimate: 0.43
              }, {
                date: "4Q2020",
                actual: 0.6,
                estimate: 0.51
              }, {
                date: "1Q2021",
                actual: 0.74,
                estimate: 0.57
              }, {
                date: "2Q2021",
                actual: 0.78,
                estimate: 0.53
              }],
              currentQuarterEstimate: 0.52,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635883200]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 40604000000,
                earnings: 4536000000
              }, {
                date: 2018,
                revenue: 43310000000,
                earnings: 2888000000
              }, {
                date: 2019,
                revenue: 44998000000,
                earnings: 3468000000
              }, {
                date: 2020,
                revenue: 68397000000,
                earnings: 3064000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 19272000000,
                earnings: 1253000000
              }, {
                date: "4Q2020",
                revenue: 20341000000,
                earnings: 750000000
              }, {
                date: "1Q2021",
                revenue: 19759000000,
                earnings: 933000000
              }, {
                date: "2Q2021",
                revenue: 19950000000,
                earnings: 978000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.14470986,
        marketCap: 145850269696,
        forwardPE: 33.875362,
        priceToBook: 2.1616173,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1176989400000,
        priceHint: 2,
        totalCash: 7792999900,
        floatShares: 647944112,
        ebitda: 27132999680,
        shortRatio: 2.79,
        targetPriceHigh: 250,
        targetPriceLow: 129,
        targetPriceMean: 170,
        targetPriceMedian: 167,
        heldPercentInsiders: 52.657,
        heldPercentInstitutions: 42.07,
        postMarketChangePercent: 0.0256685,
        postMarketTime: 1634947090,
        postMarketPrice: 116.9,
        postMarketChange: 0.0299988,
        regularMarketChange: 0.020004272,
        regularMarketChangePercent: 0.017119616,
        regularMarketTime: 1634932803,
        regularMarketPrice: 116.87,
        regularMarketDayHigh: 117.51,
        regularMarketDayRange: "116.17 - 117.51",
        regularMarketDayLow: 116.17,
        regularMarketVolume: 5212694,
        sharesShort: 16054358,
        sharesShortPrevMonth: 9709194,
        shortPercentFloat: 2.32,
        regularMarketPreviousClose: 116.85,
        bid: 116.44,
        ask: 116.9,
        bidSize: 9,
        askSize: 22,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_93339",
        fullExchangeName: "NasdaqGS",
        shortName: "T-Mobile US, Inc.",
        longName: "T-Mobile US, Inc.",
        regularMarketOpen: 117.4,
        averageDailyVolume3Month: 5022075,
        averageDailyVolume10Day: 5829212,
        beta: 0.57619,
        fiftyTwoWeekLowChange: 9.310005,
        fiftyTwoWeekLowChangePercent: 0.08655639,
        fiftyTwoWeekRange: "107.56 - 150.2",
        fiftyTwoWeekHighChange: -33.329994,
        fiftyTwoWeekHighChangePercent: -0.2219041,
        fiftyTwoWeekLow: 107.56,
        fiftyTwoWeekHigh: 150.2,
        dividendDate: 1473897600,
        exDividendDate: 1367366400,
        earningsTimestamp: 1635883200,
        earningsTimestampStart: 1635883200,
        earningsTimestampEnd: 1635883200,
        trailingPE: 37.530506,
        pegRatio: 1.26,
        dividendsPerShare: 0,
        revenue: 79321997000,
        priceToSales: 1.8387115,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 3.114,
        epsForward: 3.45,
        epsCurrentYear: 2.42,
        epsNextQuarter: 0.33,
        priceEpsCurrentYear: 48.29339,
        priceEpsNextQuarter: 354.15152,
        sharesOutstanding: 1247970048,
        bookValue: 54.066,
        fiftyDayAverage: 125.22457,
        fiftyDayAverageChange: -8.3545685,
        fiftyDayAverageChangePercent: -0.066716686,
        twoHundredDayAverage: 136.64369,
        twoHundredDayAverageChange: -19.77369,
        components: ["^NQDMXJPLMAUD", "^NQDOG", "^NQNA6000LMCAD", "^NQUSBLM", "^NQNA6000LMEUR", "^NQDM6000LMN", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQGS", "^NQNALMEURN", "^NQUSBLMCAD", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQNA6000LMEURN", "^NDXCHF", "^NQNA6000LMJPYN", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^NQDXUSLCEUR", "^NQDM6000LMEURN", "^NQDXUSLCG", "^NQG6000LM", "^NQUSB6000LMJPY", "^NQDM6000LMJPYN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQUSB6000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQNALMJPY", "^NDX", "^NQGXGBLMJPY", "^NQUSB6000LMCAD", "^IXTC", "^NQGXJPLMJPY", "^NQDM6000LMJPY", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB6000LMEUR", "^NQG6000LMAUDN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQG6000LMCAD", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQG6000LMEUR", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQGXJPLMGBPN", "^QMI", "^IXIC", "^NQG6000LMCADN", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQFFUSGN", "^NQNALMAUD", "^NQDXUSLCN", "^NQG6000LMJPY", "^NQUSB6000LMAUDN", "^NQDM6000LMAUDN", "^NQGXGBLMAUD", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQDM6000LMAUD", "^NQDMXKRLMEUR", "^MNX1", "^NQNALMAUDN", "^NQNA6000LMGBP", "^NQDM6000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQDMXGBLMJPYN", "^NQDOGN", "^NQUSB6000LMCADN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQNA6000LMAUDN", "^NQUSB6000LM", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQUSB6000LMAUD", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQNA6000LMAUD", "^NQG6000LMJPYN", "^NQGXJPLM", "^NQUSBLMGBP", "^NQG6000LMEURN", "^NQNALMN", "^NQUSLGN", "^NQG6000LMN", "^NQGXJPLMAUDN", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSB6000LMGBP", "^NQUSMLTCGN", "^NQDM6000LM", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQUSB6000LMGBPN", "^NQDMXKRN", "^XQC", "^NQDMXJPLMEURN", "^NQDM6000LMGBP", "^NQDM6000LMGBPN", "^NDXCAD", "^NQDXUSMLTCG", "^NQG6000LMAUD", "^NQFFUSMN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^XQO", "^NQNA6000LMGBPN", "^NQDXUSLCEURN", "^NQDMXKRLCAUD", "^XCQ", "^NQDXUSMEGAN", "^NQNALMCAD", "^NQGXJPLMEURN", "^NQUSB6000LMJPYN", "^NQDXUSLCGBP", "^NQDM6000LMCAD", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQUSB6000LMN", "^NQFFUSG", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^XNDXNNRHKD", "^NQFFUSM", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQDM6000LMEUR", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDXUSLCGBPN", "^NQG6000LMGBP", "^NQUSBLMGBPN", "^NQNA6000LMCADN", "^NQDMXKRLMN", "^NQGXJPLMAUD", "^NQNA6000LM", "^NQNA6000LMN", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NDXX", "^NQDXUSLCGN", "^NQUS500LCG", "^NDXE", "^NQDMXKREURN", "^NQNA6000LMJPY", "^NQNALMJPYN", "^NQDMXJPLMCADN", "^NQG6000LMGBPN", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUS500LCN"],
        symbol: "TMUS"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 0.41,
                estimate: 0.36
              }, {
                date: "4Q2020",
                actual: 0.52,
                estimate: 0.47
              }, {
                date: "1Q2021",
                actual: 0.52,
                estimate: 0.44
              }, {
                date: "2Q2021",
                actual: 0.63,
                estimate: 0.54
              }],
              currentQuarterEstimate: 0.67,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635278400]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 5253000000,
                earnings: -33000000
              }, {
                date: 2018,
                revenue: 6475000000,
                earnings: 337000000
              }, {
                date: 2019,
                revenue: 6731000000,
                earnings: 341000000
              }, {
                date: 2020,
                revenue: 9763000000,
                earnings: 2490000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 2801000000,
                earnings: 390000000
              }, {
                date: "4Q2020",
                revenue: 3244000000,
                earnings: 1781000000
              }, {
                date: "1Q2021",
                revenue: 3445000000,
                earnings: 555000000
              }, {
                date: "2Q2021",
                revenue: 3850000000,
                earnings: 710000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.2777513,
        marketCap: 145338056704,
        forwardPE: 39.029316,
        priceToBook: 20.57349,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 322151400000,
        priceHint: 2,
        totalCash: 3792999940,
        floatShares: 1205808787,
        ebitda: 2900999936,
        shortRatio: 1.48,
        targetPriceHigh: 172,
        targetPriceLow: 90,
        targetPriceMean: 119.45,
        targetPriceMedian: 120,
        heldPercentInsiders: 0.431,
        heldPercentInstitutions: 69.738,
        postMarketChangePercent: 0.10849378,
        postMarketTime: 1634947196,
        postMarketPrice: 119.95,
        postMarketChange: 0.12999725,
        regularMarketChange: 0.48999786,
        regularMarketChangePercent: 0.4106242,
        regularMarketTime: 1634932802,
        regularMarketPrice: 119.82,
        regularMarketDayHigh: 121.56,
        regularMarketDayRange: "118.37 - 121.56",
        regularMarketDayLow: 118.37,
        regularMarketVolume: 38992694,
        sharesShort: 62455085,
        sharesShortPrevMonth: 64854437,
        shortPercentFloat: 5.18,
        regularMarketPreviousClose: 119.33,
        bid: 119.89,
        ask: 120.05,
        bidSize: 9,
        askSize: 8,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_168864",
        fullExchangeName: "NasdaqGS",
        shortName: "Advanced Micro Devices, Inc.",
        longName: "Advanced Micro Devices, Inc.",
        regularMarketOpen: 120.825,
        averageDailyVolume3Month: 62266495,
        averageDailyVolume10Day: 41476662,
        beta: 1.997883,
        fiftyTwoWeekLowChange: 47.32,
        fiftyTwoWeekLowChangePercent: 0.65268964,
        fiftyTwoWeekRange: "72.5 - 122.49",
        fiftyTwoWeekHighChange: -2.6699982,
        fiftyTwoWeekHighChangePercent: -0.021797683,
        fiftyTwoWeekLow: 72.5,
        fiftyTwoWeekHigh: 122.49,
        exDividendDate: 798940800,
        earningsTimestamp: 1635278400,
        earningsTimestampStart: 1635278400,
        earningsTimestampEnd: 1635278400,
        trailingPE: 42.234756,
        pegRatio: 1.48,
        dividendsPerShare: 0,
        revenue: 13340000300,
        priceToSales: 10.894907,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 2.837,
        epsForward: 3.07,
        epsCurrentYear: 2.49,
        epsNextQuarter: 0.69,
        priceEpsCurrentYear: 48.120483,
        priceEpsNextQuarter: 173.65218,
        sharesOutstanding: 1212969984,
        bookValue: 5.824,
        fiftyDayAverage: 107.071144,
        fiftyDayAverageChange: 12.748856,
        fiftyDayAverageChangePercent: 0.11906902,
        twoHundredDayAverage: 93.77412,
        twoHundredDayAverageChange: 26.045883,
        components: ["^NQDMXJPLMAUD", "^NQDOG", "^NQUSBLM", "^NQDMXKRMCCADN", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQDMXKRMCAUD", "^NQUSB9576LMGBPN", "^NQUSB9576LM", "^NQNALMEURN", "^NQSSSEN", "^NQUSB9000LMJPYN", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQUSB9570LMJPY", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQGXGBLMN", "^NQUSB9000LMEUR", "^NQDXUSLCEUR", "^NQDXUSLCG", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^NQGXGBLMJPY", "^NQUSB9570LMGBPN", "^SOX", "^IXCO", "^NQGXJPLMJPY", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9000LMJPY", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDMXKRMCEURN", "^NQDM9000LMAUD", "^NQDMXKRLMCADN", "^NQSSSE", "^NQUSB9000LMN", "^NQDXUSLC", "^NQUSB9570LMAUDN", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRMCJPYN", "^NQDMXKRJPY", "^NQUSB9570LM", "^NQUSMLTCG", "^NQG9000LMAUD", "^NQUSB9576LMGBP", "^NQGXJPLMGBPN", "^NQUSB9000LMCADN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQFFUSGN", "^NQNALMAUD", "^NQNA9000LMN", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQUSB9570LMCADN", "^NQDMXKRLMEUR", "^NQNALMAUDN", "^GMB", "^NQG9000LMEURN", "^NQUSB9576LMJPYN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQDMXKRMCJPY", "^NQUSB9570LMAUD", "^NQUSB9576LMAUD", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQDOGN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQDMXKRMCEUR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQDMXKRMCCAD", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQGXJPLMCADN", "^NQGXJPLM", "^NQUSB9576LMEURN", "^NQNA9000LMAUD", "^NQUSB9570LMGBP", "^NQUSBLMGBP", "^NQNALMN", "^NQUSB9000LMAUD", "^NQNA9000LM", "^NQUSB9570LMEURN", "^NQDMXKRMCN", "^SX", "^NQGXJPLMAUDN", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQUSMLTCGN", "^NQNALMGBP", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQDMXKRN", "^NQUSB9570LMN", "^NQDMXKRMCGBPN", "^NQCRDN", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NQDXUSMLTCG", "^NQNA9000LMJPYN", "^NQFFUSMN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQDMXKRMC", "^NQNA9000LMEURN", "^NQUSMGN", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^GMBNTR", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQUSB9576LMN", "^XCQ", "^NQNALMCAD", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NQFFUSG", "^RCMP", "^NQGXGBLMEUR", "^NQUSB9576LMJPY", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^NQFFUSM", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQUSB9576LMCADN", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQUSB9570LMJPYN", "^NQG9000LM", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDXUSLCGN", "^NQUS500LCG", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQUSB9576LMCAD", "^NQG9000LMGBPN", "^NQUSB9576LMEUR", "^NQDMXJPLMCADN", "^NQUSB9570LMCAD", "^NQUSB9570LMEUR", "^NQDMXKRMCGBP", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^DWUSSR", "^NQDMXJPLMCAD", "^NQDMXKRMCAUDN", "^NQDMXJPLMEUR", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUSB9576LMAUDN", "^NQUS500LCN", "^NQNA9000LMCADN"],
        symbol: "AMD"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 3.37,
                estimate: 0.91
              }, {
                date: "4Q2020",
                actual: 2.88,
                estimate: 0.8
              }, {
                date: "1Q2021",
                actual: 0.8,
                estimate: 0.62
              }, {
                date: "2Q2021",
                actual: 1.56,
                estimate: 1.03
              }],
              currentQuarterEstimate: 1.54,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: []
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 8534664000000,
                earnings: 490794000000
              }, {
                date: 2019,
                revenue: 8665687000000,
                earnings: 916271000000
              }, {
                date: 2020,
                revenue: 8259885000000,
                earnings: 582191000000
              }, {
                date: 2021,
                revenue: 8999360000000,
                earnings: 1171776000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 2113486000000,
                earnings: 459634000000
              }, {
                date: "4Q2020",
                revenue: 2696536000000,
                earnings: 371891000000
              }, {
                date: "1Q2021",
                revenue: 2220419000000,
                earnings: 107000000000
              }, {
                date: "2Q2021",
                revenue: 2256843000000,
                earnings: 211829000000
              }]
            },
            financialCurrency: "JPY"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.089472994,
        marketCap: 140112166912,
        forwardPE: 17.168694,
        priceToBook: 0.020279337,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "NONE",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 99153000000,
        priceHint: 2,
        totalCash: 1162534060000,
        floatShares: 1203720131,
        ebitda: 1431618977792,
        shortRatio: 3.16,
        targetPriceHigh: 184,
        targetPriceLow: 111.72,
        targetPriceMean: 143.3,
        targetPriceMedian: 141.8,
        heldPercentInsiders: 0.062,
        heldPercentInstitutions: 7.966,
        postMarketChangePercent: -0.1770422,
        postMarketTime: 1634940234,
        postMarketPrice: 112.77,
        postMarketChange: -0.20000458,
        regularMarketChange: 0.7000046,
        regularMarketChangePercent: 0.62350106,
        regularMarketTime: 1634932802,
        regularMarketPrice: 112.97,
        regularMarketDayHigh: 113.04,
        regularMarketDayRange: "111.65 - 113.04",
        regularMarketDayLow: 111.65,
        regularMarketVolume: 463100,
        sharesShort: 1838145,
        sharesShortPrevMonth: 1010320,
        regularMarketPreviousClose: 112.27,
        bid: 110.54,
        ask: 112.96,
        bidSize: 11,
        askSize: 8,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_23021",
        fullExchangeName: "NYSE",
        shortName: "Sony Group Corporation",
        longName: "Sony Group Corporation",
        regularMarketOpen: 112.31,
        averageDailyVolume3Month: 574430,
        averageDailyVolume10Day: 526537,
        beta: 0.674169,
        fiftyTwoWeekLowChange: 37.42,
        fiftyTwoWeekLowChangePercent: 0.49530107,
        fiftyTwoWeekRange: "75.55 - 118.5",
        fiftyTwoWeekHighChange: -5.529999,
        fiftyTwoWeekHighChangePercent: -0.046666656,
        fiftyTwoWeekLow: 75.55,
        fiftyTwoWeekHigh: 118.5,
        dividendDate: 1512691200,
        exDividendDate: 1616976000,
        trailingAnnualDividendRate: 55,
        trailingPE: 13.529341,
        pegRatio: 1.65,
        dividendsPerShare: 55.38,
        dividendRate: 0.55,
        trailingAnnualDividendYield: 0.48989046,
        dividendYield: 0.48,
        revenue: 9293254400000,
        priceToSales: 0.01507676,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 8.35,
        epsForward: 6.58,
        epsCurrentYear: 5.88,
        epsNextQuarter: 1.68,
        priceEpsCurrentYear: 19.212585,
        priceEpsNextQuarter: 67.24405,
        sharesOutstanding: 1240259968,
        bookValue: 5570.695,
        fiftyDayAverage: 110.81972,
        fiftyDayAverageChange: 2.1502838,
        fiftyDayAverageChangePercent: 0.01940344,
        twoHundredDayAverage: 103.69234,
        twoHundredDayAverageChange: 9.277664,
        symbol: "SONY"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 0.51,
                estimate: 0.31
              }, {
                date: "4Q2020",
                actual: 0.61,
                estimate: 0.55
              }, {
                date: "1Q2021",
                actual: 0.62,
                estimate: 0.53
              }, {
                date: "2Q2021",
                actual: 1.01,
                estimate: 0.78
              }],
              currentQuarterEstimate: 1,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635451200]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 22386800000,
                earnings: 2884700000
              }, {
                date: 2018,
                revenue: 24719500000,
                earnings: 4518300000
              }, {
                date: 2019,
                revenue: 26508600000,
                earnings: 3599200000
              }, {
                date: 2020,
                revenue: 23518000000,
                earnings: 928300000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 6203100000,
                earnings: 392600000
              }, {
                date: "4Q2020",
                revenue: 6749400000,
                earnings: 622200000
              }, {
                date: "1Q2021",
                revenue: 6668000000,
                earnings: 659400000
              }, {
                date: "2Q2021",
                revenue: 7496500000,
                earnings: 1153400000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.0024420882,
        marketCap: 135065911296,
        forwardPE: 30.710457,
        priceToBook: -19.85957,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 709565400000,
        priceHint: 2,
        totalCash: 4906699800,
        floatShares: 1176930456,
        ebitda: 5488099840,
        shortRatio: 2.06,
        targetPriceHigh: 148,
        targetPriceLow: 95,
        targetPriceMean: 129.47,
        targetPriceMedian: 130.4,
        heldPercentInsiders: 0.169,
        heldPercentInstitutions: 70.858,
        postMarketChangePercent: 0,
        postMarketTime: 1634947170,
        postMarketPrice: 114.55,
        postMarketChange: 0,
        regularMarketChange: 0.11000061,
        regularMarketChangePercent: 0.09612077,
        regularMarketTime: 1634932803,
        regularMarketPrice: 114.55,
        regularMarketDayHigh: 114.98,
        regularMarketDayRange: "114.07 - 114.98",
        regularMarketDayLow: 114.07,
        regularMarketVolume: 3396356,
        sharesShort: 11294508,
        sharesShortPrevMonth: 9382422,
        shortPercentFloat: 0.96,
        regularMarketPreviousClose: 114.44,
        bid: 114.57,
        ask: 114.55,
        bidSize: 14,
        askSize: 8,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_34745",
        fullExchangeName: "NasdaqGS",
        shortName: "Starbucks Corporation",
        longName: "Starbucks Corporation",
        regularMarketOpen: 114.41,
        averageDailyVolume3Month: 5472006,
        averageDailyVolume10Day: 5167550,
        beta: 0.879365,
        fiftyTwoWeekLowChange: 29.100006,
        fiftyTwoWeekLowChangePercent: 0.34055012,
        fiftyTwoWeekRange: "85.45 - 126.32",
        fiftyTwoWeekHighChange: -11.769997,
        fiftyTwoWeekHighChangePercent: -0.09317604,
        fiftyTwoWeekLow: 85.45,
        fiftyTwoWeekHigh: 126.32,
        dividendDate: 1637884800,
        exDividendDate: 1636502400,
        earningsTimestamp: 1635451200,
        earningsTimestampStart: 1635451200,
        earningsTimestampEnd: 1635451200,
        trailingAnnualDividendRate: 1.8,
        trailingPE: 47.689426,
        pegRatio: 0.65,
        dividendsPerShare: 1.76,
        dividendRate: 1.96,
        trailingAnnualDividendYield: 0.015728766,
        dividendYield: 1.71,
        revenue: 27117000700,
        priceToSales: 4.9808574,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 2.402,
        epsForward: 3.73,
        epsCurrentYear: 3.23,
        epsNextQuarter: 0.88,
        priceEpsCurrentYear: 35.464397,
        priceEpsNextQuarter: 130.17046,
        sharesOutstanding: 1179100032,
        bookValue: -5.768,
        fiftyDayAverage: 113.690575,
        fiftyDayAverageChange: 0.8594284,
        fiftyDayAverageChangePercent: 0.0075593637,
        twoHundredDayAverage: 114.83043,
        twoHundredDayAverageChange: -0.28042603,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQG5700LMCADN", "^NQDM5700LMJPYN", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQDM5000LMGBPN", "^NQDM5700LM", "^NQDM5700LMEURN", "^NQGMOIN", "^NQUSB5000LM", "^NQGS", "^NQNALMEURN", "^NQUSBLMCAD", "^NQUSB5757LMCADN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQG5700LMGBP", "^NQNA5000LMAUDN", "^NQDM5700LMN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQUSB5000LMGBPN", "^NQDM5000LM", "^NQPRCE", "^NQDM5000LMGBP", "^NQGXGBLMN", "^NQVDIV", "^NQDMXKRLCJPY", "^NQUSB5700LMEUR", "^NQG5000LMEUR", "^WEALTHGN", "^NQDXUSLCEUR", "^NQG5000LMCAD", "^WEALTHGL", "^NQUSB5757LMAUDN", "^NQDXUSLCG", "^CAPEXA", "^NQNA5000LMAUD", "^NQDM5000LMN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQNA5000LMCADN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQNALMJPY", "^NQG5700LMAUD", "^NDX", "^NQG5000LMJPY", "^NQGXGBLMJPY", "^QCRD", "^NQUSB5700LMN", "^NQUSB5757LMCAD", "^NQGXJPLMJPY", "^NQUSB5757LMEUR", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDM5700LMJPY", "^NQUSB5700LMCAD", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB5000LMGBP", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^NQNA5700LMEURN", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQNA5000LMJPY", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQNA5000LMGBPN", "^NQDMXKRLCEUR", "^NQUSB5700LMGBP", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQNA5700LM", "^NQUSBLMEURN", "^INDS", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQGXJPLMGBPN", "^QMI", "^NQUSB5757LMEURN", "^NQUSB5757LMJPY", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQNALMAUD", "^NQG5700LMN", "^NQDXUSLCN", "^NQNA5700LMJPYN", "^NQG5000LMEURN", "^NQGXGBLMAUD", "^NQUSB5757LMJPYN", "^NQDM5700LMAUD", "^NQVDIVN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQFGSL", "^NQUSB5000LMAUD", "^NQG5000LMJPYN", "^NQDMXKRLMEUR", "^MNX1", "^NQUSB5000LMEURN", "^NQDM5700LMGBPN", "^NQNALMAUDN", "^NQDM5000LMCAD", "^CAPEXAN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB5757LMN", "^NQDMXGBLMJPYN", "^NQNA5700LMGBP", "^NQDM5000LMEUR", "^NQDM5000LMJPYN", "^NQDMXKRLMJPY", "^NQG5700LMAUDN", "^NQG5000LM", "^NQUSBLMJPYN", "^NQDMXGBLMCAD", "^NQUSB5000LMJPYN", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDM5000LMEURN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQG5700LM", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB5700LMGBPN", "^NQDM5700LMAUDN", "^NQG5700LMJPY", "^NQGXJPLM", "^NQUSB5000LMN", "^NQUSBLMGBP", "^NQNA5700LMAUD", "^NQNALMN", "^NQG5000LMCADN", "^RCH", "^NQUSLGN", "^NQUSB5700LMAUDN", "^NQNA5700LMCADN", "^NQDM5000LMJPY", "^NQGXJPLMAUDN", "^NQUSB5000LMCADN", "^NQCAPST", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSMLTCGN", "^NQDMXKRLC", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQNA5700LMAUDN", "^NQUSB5700LMAUD", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQNA5000LMCAD", "^NQG5700LMGBPN", "^NQGMOI", "^NQDMXKRN", "^NQNA5000LMEUR", "^XQC", "^NQCRDN", "^NQDM5000LMCADN", "^NQDMXJPLMEURN", "^NQUSB5757LMAUD", "^NDXCAD", "^NQDXUSMLTCG", "^NQDMXJPLM", "^NQG5000LMN", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQDM5700LMGBP", "^NQG5000LMGBP", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQG5700LMEUR", "^NQPRCEN", "^XQO", "^NQG5700LMCAD", "^NQDXUSLCEURN", "^NQUSB5000LMJPY", "^NQG5000LMGBPN", "^NQDMXKRLCAUD", "^XCQ", "^NQNALMCAD", "^NQNA5000LMGBP", "^NQG5700LMEURN", "^NQNA5000LM", "^NQGXJPLMEURN", "^NQUSB5700LMCADN", "^NQUSB5700LMJPY", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQNA5700LMN", "^NQDM5700LMCADN", "^NQG5700LMJPYN", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQUSB5000LMAUDN", "^NQDM5700LMCAD", "^NQUSB5757LMGBP", "^XNDXNNRHKD", "^NQDMXGBLMGBPN", "^XNDXNNREUR", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDM5700LMEUR", "^NQDXUSLCGBPN", "^NQG5000LMAUD", "^NQUSB5000LMCAD", "^NQUSB5000LMEUR", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQFFUSQ", "^NQFGSLN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQNA5000LMJPYN", "^NDXX", "^NQDXUSLCGN", "^NQDM5000LMAUDN", "^NQUS500LCG", "^NQUSB5700LM", "^NDXE", "^NQDMXKREURN", "^NQNALMJPYN", "^NQFFUSQN", "^NQG5000LMAUDN", "^NQNA5700LMCAD", "^NQDMXJPLMCADN", "^NQDVRIS", "^NQNA5000LMEURN", "^RCHNTR", "^NQNA5700LMEUR", "^NQDMXGBLMAUD", "^NQUSB5700LMJPYN", "^NQNA5000LMN", "^NQUSB5757LM", "^NQUSBLMAUDN", "^NQNA5700LMJPY", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQUSB5700LMEURN", "^NQUSB5757LMGBPN", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQNA5700LMGBPN", "^NQUS500LCN", "^NQDM5000LMAUD"],
        symbol: "SBUX"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 2.07,
                estimate: 1.79
              }, {
                date: "1Q2021",
                actual: 1.77,
                estimate: 1.63
              }, {
                date: "2Q2021",
                actual: 2.33,
                estimate: 2.29
              }, {
                date: "3Q2021",
                actual: 2.52,
                estimate: 2.5
              }],
              currentQuarterEstimate: 3.8,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1634746080]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 79139000000,
                earnings: 5753000000
              }, {
                date: 2018,
                revenue: 79591000000,
                earnings: 8728000000
              }, {
                date: 2019,
                revenue: 77147000000,
                earnings: 9431000000
              }, {
                date: 2020,
                revenue: 73621000000,
                earnings: 5590000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 20368000000,
                earnings: 1356000000
              }, {
                date: "1Q2021",
                revenue: 17729000000,
                earnings: 955000000
              }, {
                date: "2Q2021",
                revenue: 18745000000,
                earnings: 1325000000
              }, {
                date: "3Q2021",
                revenue: 17618000000,
                earnings: 1130000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.095866494,
        marketCap: 114621399040,
        forwardPE: 11.168559,
        priceToBook: 5.16103,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: -252322200000,
        priceHint: 2,
        totalCash: 8055000100,
        floatShares: 895521104,
        ebitda: 16435999744,
        shortRatio: 7.16,
        targetPriceHigh: 172,
        targetPriceLow: 115,
        targetPriceMean: 151.12,
        targetPriceMedian: 150.05,
        heldPercentInsiders: 0.133,
        heldPercentInstitutions: 57.778,
        postMarketChangePercent: -0.0234585,
        postMarketTime: 1634947185,
        postMarketPrice: 127.85,
        postMarketChange: -0.0299988,
        regularMarketChange: -0.450005,
        regularMarketChangePercent: -0.350662,
        regularMarketTime: 1634932804,
        regularMarketPrice: 127.88,
        regularMarketDayHigh: 130.25,
        regularMarketDayRange: "126.611 - 130.25",
        regularMarketDayLow: 126.611,
        regularMarketVolume: 11336311,
        sharesShort: 25805221,
        sharesShortPrevMonth: 25087625,
        shortPercentFloat: 2.88,
        regularMarketPreviousClose: 128.33,
        bid: 127.75,
        ask: 127.85,
        bidSize: 32,
        askSize: 9,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_112350",
        fullExchangeName: "NYSE",
        shortName: "International Business Machines",
        longName: "International Business Machines Corporation",
        regularMarketOpen: 128.05,
        averageDailyVolume3Month: 4257158,
        averageDailyVolume10Day: 8754687,
        beta: 1.180952,
        fiftyTwoWeekLowChange: 21.96,
        fiftyTwoWeekLowChangePercent: 0.20732628,
        fiftyTwoWeekRange: "105.92 - 152.84",
        fiftyTwoWeekHighChange: -24.96,
        fiftyTwoWeekHighChangePercent: -0.16330804,
        fiftyTwoWeekLow: 105.92,
        fiftyTwoWeekHigh: 152.84,
        dividendDate: 1631232000,
        exDividendDate: 1628467200,
        earningsTimestamp: 1634746080,
        earningsTimestampStart: 1634746080,
        earningsTimestampEnd: 1634746080,
        trailingAnnualDividendRate: 6.54,
        trailingPE: 24.205944,
        pegRatio: 0.79,
        dividendsPerShare: 6.54,
        dividendRate: 6.56,
        trailingAnnualDividendYield: 0.050962362,
        dividendYield: 5.11,
        revenue: 74461004000,
        priceToSales: 1.539348,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 5.283,
        epsForward: 11.45,
        epsCurrentYear: 10.29,
        epsNextQuarter: 1.98,
        priceEpsCurrentYear: 12.427599,
        priceEpsNextQuarter: 64.58585,
        sharesOutstanding: 896320000,
        bookValue: 24.778,
        fiftyDayAverage: 138.76028,
        fiftyDayAverageChange: -10.880287,
        fiftyDayAverageChangePercent: -0.07841067,
        twoHundredDayAverage: 141.43929,
        twoHundredDayAverageChange: -13.559288,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQSHYL", "^NQUSB9533LMAUD", "^NQGMOIN", "^NQNALMEURN", "^NQUSB9000LMJPYN", "^NQUSB9530LM", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQFFUSHYN", "^NQUSBLMJPY", "^NQUSHEIN", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQGXGBLMN", "^NQUS500LCVN", "^NQUSB9533LMEURN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQDXUSLCEUR", "^NQUSB9533LMGBP", "^CPQ", "^CPQNTR", "^NQUSB9000LMCAD", "^NQUSB9533LMJPYN", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQDXUSMLTCVN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^NQUSHEI", "^DAA", "^MSH", "^NQGXGBLMJPY", "^QCRD", "^NQGXJPLMJPY", "^NQUSB9530LMCAD", "^NQUSB9530LMGBPN", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9530LMEUR", "^NQUSHEIEURN", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQUSB9530LMN", "^NQGXJPLMEUR", "^NQUSB9530LMGBP", "^NQDMXJPLMGBPN", "^NQUSLV", "^NQDMXJPLMN", "^NQGIHEIGBP", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQUSB9000LMN", "^NQDXUSLC", "^NQGXGBLMJPYN", "^IBMSY", "^NQG9000LMJPYN", "^NQGIHEIGBPN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQG9000LMAUD", "^NQUSHEIGBPN", "^NQGXJPLMGBPN", "^NQUSB9000LMCADN", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQUSMLTCV", "^NQNALMAUD", "^NQNA9000LMN", "^NQVMVUS", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQUSB9530LMJPYN", "^NQDXUSLCV", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQDMXKRLMEUR", "^NQNALMAUDN", "^NQG9000LMEURN", "^NQDM9000LMCADN", "^NQFFUSHY", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQSHYLN", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^XMI", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQUSB9533LMGBPN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^BGDNTR", "^NQUSHEIGBP", "^NQGXJPLM", "^NQNA9000LMAUD", "^NQUSBLMGBP", "^NQNALMN", "^NQUSB9000LMAUD", "^NQNA9000LM", "^NQFFUSLV", "^NQGXJPLMAUDN", "^NQUSLVN", "^NQGIHEIN", "^NQCAPST", "^NQUSB9530LMEURN", "^NQ96DIVUS", "^NQUSB9530LMAUD", "^DJI", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSB9533LMJPY", "^NQDM9000LMGBP", "^NQDMXKRLC", "^NQNALMGBP", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQGMOI", "^NQDMXKRN", "^NQUSMLTCVN", "^NQCRDN", "^NQUSB9533LM", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NQFFUSLVN", "^NQNA9000LMJPYN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQUSB9533LMAUDN", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^DJA", "^DAAXMLPREIT", "^NQDXUSMLTCV", "^NQUSB9533LMCAD", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^NQUSB9533LMEUR", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQDMXKRLCAUD", "^NQDXUSMEGAN", "^NQNALMCAD", "^NQUSB9530LMJPY", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^BGD", "^NQCRD", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQG9000LM", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQUSB9530LMCADN", "^NQUSB9533LMCADN", "^NQUSB9533LMN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQUSHEIEUR", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQVMVUSN", "^NQGIHEIEURN", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQG9000LMGBPN", "^NQDMXJPLMCADN", "^NQGIHEI", "^NQGIHEIEUR", "^NQDMXGBLMAUD", "^NQUSB9530LMAUDN", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDXUSMEGA", "^NQDMXKRLMGBP", "^NQDXUSLCVN", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQNA9000LMCADN", "^AXI", "^NQUS500LCV"],
        symbol: "IBM"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: false,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [],
              earningsDate: []
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 6546143000000,
                earnings: 714302000000
              }, {
                date: 2018,
                revenue: 8224177000000,
                earnings: 1456270000000
              }, {
                date: 2019,
                revenue: 7659623000000,
                earnings: 1202887000000
              }, {
                date: 2020,
                revenue: 6321559000000,
                earnings: 135341000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 1398070000000,
                earnings: -251297000000
              }, {
                date: "4Q2020",
                revenue: 2020341000000,
                earnings: 353719000000
              }, {
                date: "1Q2021",
                revenue: 2285161000000,
                earnings: 447263000000
              }, {
                date: "2Q2021",
                revenue: 2066807000000,
                earnings: 521235000000
              }]
            },
            financialCurrency: "RUB"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.2922011,
        marketCap: 120854216704,
        priceToBook: 0.007976322,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1136298600000,
        priceHint: 2,
        totalCash: 1678641990000,
        floatShares: 5872117525,
        ebitda: 2283844927488,
        heldPercentInsiders: 0,
        heldPercentInstitutions: 4.995,
        regularMarketChange: -0.029999733,
        regularMarketChangePercent: -0.29440367,
        regularMarketTime: 1634932771,
        regularMarketPrice: 10.16,
        regularMarketDayHigh: 10.27,
        regularMarketDayRange: "10.11 - 10.27",
        regularMarketDayLow: 10.11,
        regularMarketVolume: 346402,
        regularMarketPreviousClose: 10.19,
        bid: 0,
        ask: 0,
        bidSize: 0,
        askSize: 0,
        exchange: "PNK",
        market: "us_market",
        messageBoardId: "finmb_5828266",
        fullExchangeName: "Other OTC",
        shortName: "GAZPROM PUBLIC JOINT STOCK COMP",
        longName: "Public Joint Stock Company Gazprom",
        regularMarketOpen: 10.23,
        averageDailyVolume3Month: 483152,
        averageDailyVolume10Day: 447437,
        beta: 0.275451,
        fiftyTwoWeekLowChange: 6.35,
        fiftyTwoWeekLowChangePercent: 1.6666666,
        fiftyTwoWeekRange: "3.81 - 10.72",
        fiftyTwoWeekHighChange: -0.5600004,
        fiftyTwoWeekHighChangePercent: -0.052238844,
        fiftyTwoWeekLow: 3.81,
        fiftyTwoWeekHigh: 10.72,
        dividendDate: 1629244800,
        exDividendDate: 1626220800,
        trailingAnnualDividendRate: 12.55,
        trailingPE: 7.9874215,
        dividendsPerShare: 30.3,
        dividendRate: 0.34,
        trailingAnnualDividendYield: 1.2315997,
        dividendYield: 3.32,
        revenue: 7770379100000,
        priceToSales: 0.015553194,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 1.272,
        sharesOutstanding: 11822499840,
        bookValue: 1273.77,
        fiftyDayAverage: 9.7322855,
        fiftyDayAverageChange: 0.42771435,
        fiftyDayAverageChangePercent: 0.043947987,
        twoHundredDayAverage: 7.862553,
        twoHundredDayAverageChange: 2.2974467,
        symbol: "OGZPY"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: false,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [],
              earningsDate: []
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 1604300000000,
                earnings: 750400000000
              }, {
                date: 2018,
                revenue: 1793100000000,
                earnings: 832900000000
              }, {
                date: 2019,
                revenue: 1955800000000,
                earnings: 844900000000
              }, {
                date: 2020,
                revenue: 1796100000000,
                earnings: 761100000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 545600000000,
                earnings: 272100000000
              }, {
                date: "4Q2020",
                revenue: 510700000000,
                earnings: 201800000000
              }, {
                date: "1Q2021",
                revenue: 574800000000,
                earnings: 304900000000
              }, {
                date: "2Q2021",
                revenue: 615500000000,
                earnings: 325900000000
              }]
            },
            financialCurrency: "RUB"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.19852582,
        marketCap: 111196545024,
        priceToBook: 0.021629533,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1309181400000,
        priceHint: 2,
        totalCash: 3175299940000,
        floatShares: 2678255000,
        targetPriceHigh: 21.99,
        targetPriceLow: 4.65,
        targetPriceMean: 16.89,
        targetPriceMedian: 20.46,
        heldPercentInsiders: 0,
        heldPercentInstitutions: 12.013,
        regularMarketChange: 0.1609993,
        regularMarketChangePercent: 0.78497946,
        regularMarketTime: 1634932767,
        regularMarketPrice: 20.671,
        regularMarketDayHigh: 20.96,
        regularMarketDayRange: "20.57 - 20.96",
        regularMarketDayLow: 20.57,
        regularMarketVolume: 789506,
        regularMarketPreviousClose: 20.51,
        bid: 0,
        ask: 0,
        bidSize: 0,
        askSize: 0,
        exchange: "PNK",
        market: "us_market",
        messageBoardId: "finmb_8793535",
        fullExchangeName: "Other OTC",
        shortName: "SBERBANK OF RUSSIA",
        longName: "Sberbank of Russia",
        regularMarketOpen: 20.9,
        averageDailyVolume3Month: 160650,
        averageDailyVolume10Day: 265800,
        beta: 0.899074,
        fiftyTwoWeekLowChange: 10.591,
        fiftyTwoWeekLowChangePercent: 1.0506945,
        fiftyTwoWeekRange: "10.08 - 21.63",
        fiftyTwoWeekHighChange: -0.95899963,
        fiftyTwoWeekHighChangePercent: -0.044336554,
        fiftyTwoWeekLow: 10.08,
        fiftyTwoWeekHigh: 21.63,
        dividendDate: 1623110400,
        exDividendDate: 1620691200,
        trailingAnnualDividendRate: 18.7,
        trailingPE: 7.4356112,
        dividendsPerShare: 151.5,
        dividendRate: 1.02,
        trailingAnnualDividendYield: 0.9117504,
        dividendYield: 4.92,
        revenue: 2248199900000,
        priceToSales: 0.04946026,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 2.78,
        sharesOutstanding: 5379350016,
        bookValue: 955.684,
        fiftyDayAverage: 19.145428,
        fiftyDayAverageChange: 1.5255718,
        fiftyDayAverageChangePercent: 0.07968335,
        twoHundredDayAverage: 17.24702,
        twoHundredDayAverageChange: 3.4239788,
        symbol: "SBRCY"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: -10.84,
                estimate: -9.16
              }, {
                date: "1Q2021",
                actual: -1.95,
                estimate: -1.17
              }, {
                date: "2Q2021",
                actual: -0.11,
                estimate: -0.47
              }],
              currentQuarterEstimate: 0.75,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1628798400]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 2561721000,
                earnings: -70046000
              }, {
                date: 2018,
                revenue: 3651985000,
                earnings: -16860000
              }, {
                date: 2019,
                revenue: 4805239000,
                earnings: -674339000
              }, {
                date: 2020,
                revenue: 3378199000,
                earnings: -4584716000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 1342331000,
                earnings: 219328000
              }, {
                date: "4Q2020",
                revenue: 859264000,
                earnings: -3887851000
              }, {
                date: "1Q2021",
                revenue: 886936000,
                earnings: -1172211000
              }, {
                date: "2Q2021",
                revenue: 1335196000,
                earnings: -68217000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.068168245,
        marketCap: 104757067776,
        forwardPE: 378.72726,
        priceToBook: 30.397665,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1607610600000,
        priceHint: 2,
        totalCash: 7427938800,
        floatShares: 321800536,
        ebitda: -2834944000,
        shortRatio: 2.47,
        targetPriceHigh: 220,
        targetPriceLow: 132,
        targetPriceMean: 177.97,
        targetPriceMedian: 177.5,
        heldPercentInsiders: 0.276,
        heldPercentInstitutions: 49.488,
        postMarketChangePercent: 0,
        postMarketTime: 1634947192,
        postMarketPrice: 166.64,
        postMarketChange: 0,
        regularMarketChange: -3.8600006,
        regularMarketChangePercent: -2.26393,
        regularMarketTime: 1634932803,
        regularMarketPrice: 166.64,
        regularMarketDayHigh: 169.44,
        regularMarketDayRange: "165.2 - 169.44",
        regularMarketDayLow: 165.2,
        regularMarketVolume: 2967386,
        sharesShort: 14697513,
        sharesShortPrevMonth: 14050683,
        shortPercentFloat: 4.37,
        regularMarketPreviousClose: 170.5,
        bid: 166.2,
        ask: 166.9,
        bidSize: 14,
        askSize: 22,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_115705393",
        fullExchangeName: "NasdaqGS",
        shortName: "Airbnb, Inc.",
        longName: "Airbnb, Inc.",
        regularMarketOpen: 169.3,
        averageDailyVolume3Month: 5537480,
        averageDailyVolume10Day: 3172187,
        fiftyTwoWeekLowChange: 45.14,
        fiftyTwoWeekLowChangePercent: 0.37152264,
        fiftyTwoWeekRange: "121.5 - 219.94",
        fiftyTwoWeekHighChange: -53.300003,
        fiftyTwoWeekHighChangePercent: -0.24233884,
        fiftyTwoWeekLow: 121.5,
        fiftyTwoWeekHigh: 219.94,
        earningsTimestamp: 1628798400,
        earningsTimestampStart: 1628798400,
        earningsTimestampEnd: 1628798400,
        pegRatio: -1.24,
        dividendsPerShare: 0,
        revenue: 4423727100,
        priceToSales: 23.680725,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: -10.764,
        epsForward: 0.44,
        epsCurrentYear: -1.37,
        epsNextQuarter: -0.09,
        priceEpsCurrentYear: -121.63503,
        priceEpsNextQuarter: -1851.5554,
        sharesOutstanding: 336553984,
        bookValue: 5.482,
        fiftyDayAverage: 168.14658,
        fiftyDayAverageChange: -1.5065765,
        fiftyDayAverageChangePercent: -0.008959901,
        twoHundredDayAverage: 156.00539,
        twoHundredDayAverageChange: 10.634613,
        symbol: "ABNB"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: -0.62,
                estimate: -0.65
              }, {
                date: "4Q2020",
                actual: -0.54,
                estimate: -0.55
              }, {
                date: "1Q2021",
                actual: -0.06,
                estimate: -0.54
              }, {
                date: "2Q2021",
                actual: 0.58,
                estimate: -0.51
              }],
              currentQuarterEstimate: -0.33,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1636056000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 7932000000,
                earnings: -4033000000
              }, {
                date: 2018,
                revenue: 10433000000,
                earnings: 997000000
              }, {
                date: 2019,
                revenue: 13000000000,
                earnings: -8506000000
              }, {
                date: 2020,
                revenue: 11139000000,
                earnings: -6768000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 3129000000,
                earnings: -1089000000
              }, {
                date: "4Q2020",
                revenue: 2226000000,
                earnings: -969000000
              }, {
                date: "1Q2021",
                revenue: 2903000000,
                earnings: -108000000
              }, {
                date: "2Q2021",
                revenue: 3929000000,
                earnings: 1144000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.045104127,
        marketCap: 88192917504,
        forwardPE: -75.84999,
        priceToBook: 6.036609,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1557495000000,
        priceHint: 2,
        totalCash: 5002999800,
        floatShares: 1753290539,
        ebitda: -3508999936,
        shortRatio: 2.86,
        targetPriceHigh: 82,
        targetPriceLow: 34,
        targetPriceMean: 67.15,
        targetPriceMedian: 69.5,
        heldPercentInsiders: 0.43,
        heldPercentInstitutions: 75.585,
        postMarketChangePercent: 0.0878948,
        postMarketTime: 1634947189,
        postMarketPrice: 45.55,
        postMarketChange: 0.0400009,
        regularMarketChange: -0.9600029,
        regularMarketChangePercent: -2.065855,
        regularMarketTime: 1634932802,
        regularMarketPrice: 45.51,
        regularMarketDayHigh: 46.5,
        regularMarketDayRange: "45.23 - 46.5",
        regularMarketDayLow: 45.23,
        regularMarketVolume: 17733221,
        sharesShort: 84109908,
        sharesShortPrevMonth: 79553204,
        shortPercentFloat: 4.65,
        regularMarketPreviousClose: 46.47,
        bid: 45.45,
        ask: 45.5,
        bidSize: 12,
        askSize: 10,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_144524848",
        fullExchangeName: "NYSE",
        shortName: "Uber Technologies, Inc.",
        longName: "Uber Technologies, Inc.",
        regularMarketOpen: 46,
        averageDailyVolume3Month: 24934296,
        averageDailyVolume10Day: 17463887,
        beta: 1.322001,
        fiftyTwoWeekLowChange: 12.609997,
        fiftyTwoWeekLowChangePercent: 0.38328257,
        fiftyTwoWeekRange: "32.9 - 64.05",
        fiftyTwoWeekHighChange: -18.540005,
        fiftyTwoWeekHighChangePercent: -0.2894614,
        fiftyTwoWeekLow: 32.9,
        fiftyTwoWeekHigh: 64.05,
        earningsTimestamp: 1636056000,
        earningsTimestampStart: 1636056000,
        earningsTimestampEnd: 1636056000,
        pegRatio: -3.98,
        dividendsPerShare: 0,
        revenue: 12810000400,
        priceToSales: 6.8846927,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: -0.568,
        epsForward: -0.6,
        epsCurrentYear: -0.18,
        epsNextQuarter: -0.27,
        priceEpsCurrentYear: -252.83331,
        priceEpsNextQuarter: -168.55554,
        sharesOutstanding: 1937880064,
        bookValue: 7.539,
        fiftyDayAverage: 44.294857,
        fiftyDayAverageChange: 1.2151413,
        fiftyDayAverageChangePercent: 0.027433012,
        twoHundredDayAverage: 47.659645,
        twoHundredDayAverageChange: -2.1496468,
        symbol: "UBER"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 2.03,
                estimate: 1.4
              }, {
                date: "1Q2021",
                actual: 2.7,
                estimate: 2.14
              }, {
                date: "2Q2021",
                actual: 2.13,
                estimate: 1.61
              }, {
                date: "3Q2021",
                actual: 2.24,
                estimate: 2.03
              }],
              currentQuarterEstimate: 2.3,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1637704800]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 79040000000,
                earnings: -2849000000
              }, {
                date: 2019,
                revenue: 90621000000,
                earnings: -2310000000
              }, {
                date: 2020,
                revenue: 92154000000,
                earnings: 4616000000
              }, {
                date: 2021,
                revenue: 94224000000,
                earnings: 3250000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 23482000000,
                earnings: 832000000
              }, {
                date: "1Q2021",
                revenue: 26112000000,
                earnings: 1227000000
              }, {
                date: "2Q2021",
                revenue: 24487000000,
                earnings: 887000000
              }, {
                date: "3Q2021",
                revenue: 26122000000,
                earnings: 831000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.14791405,
        marketCap: 87636393984,
        forwardPE: 12.198083,
        priceToBook: 18.160774,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1471440600000,
        priceHint: 2,
        totalCash: 11719000100,
        floatShares: 283628557,
        ebitda: 10714000384,
        shortRatio: 3.53,
        targetPriceHigh: 137,
        targetPriceLow: 101,
        targetPriceMean: 118.7,
        targetPriceMedian: 120,
        heldPercentInsiders: 2.564,
        heldPercentInstitutions: 84.188,
        postMarketChangePercent: -0.034923095,
        postMarketTime: 1634946973,
        postMarketPrice: 114.5,
        postMarketChange: -0.040000916,
        regularMarketChange: 1.5599976,
        regularMarketChangePercent: 1.3807732,
        regularMarketTime: 1634932802,
        regularMarketPrice: 114.54,
        regularMarketDayHigh: 114.77,
        regularMarketDayRange: "112.65 - 114.77",
        regularMarketDayLow: 112.65,
        regularMarketVolume: 2630721,
        sharesShort: 10363024,
        sharesShortPrevMonth: 7358375,
        shortPercentFloat: 4.2,
        regularMarketPreviousClose: 112.98,
        bid: 112.28,
        ask: 117.35,
        bidSize: 10,
        askSize: 11,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_266017",
        fullExchangeName: "NYSE",
        shortName: "Dell Technologies Inc.",
        longName: "Dell Technologies Inc.",
        regularMarketOpen: 112.84,
        averageDailyVolume3Month: 2161233,
        averageDailyVolume10Day: 2838112,
        beta: 0.869344,
        fiftyTwoWeekLowChange: 55.66,
        fiftyTwoWeekLowChangePercent: 0.9453125,
        fiftyTwoWeekRange: "58.88 - 114.77",
        fiftyTwoWeekHighChange: -0.22999573,
        fiftyTwoWeekHighChangePercent: -0.0020039708,
        fiftyTwoWeekLow: 58.88,
        fiftyTwoWeekHigh: 114.77,
        earningsTimestamp: 1637704800,
        earningsTimestampStart: 1637704800,
        earningsTimestampEnd: 1637704800,
        trailingPE: 23.73394,
        pegRatio: 1.55,
        dividendsPerShare: 0,
        revenue: 100203004000,
        priceToSales: 0.8745885,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 4.826,
        epsForward: 9.39,
        epsCurrentYear: 9.35,
        epsNextQuarter: 2.57,
        priceEpsCurrentYear: 12.250267,
        priceEpsNextQuarter: 44.568096,
        sharesOutstanding: 290848992,
        bookValue: 6.307,
        fiftyDayAverage: 103.52857,
        fiftyDayAverageChange: 11.011429,
        fiftyDayAverageChangePercent: 0.106361255,
        twoHundredDayAverage: 99.78099,
        twoHundredDayAverageChange: 14.75901,
        symbol: "DELL"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 0.99,
                estimate: 0.76
              }, {
                date: "1Q2021",
                actual: 1.22,
                estimate: 0.79
              }, {
                date: "2Q2021",
                actual: 1.32,
                estimate: 0.99
              }, {
                date: "3Q2021",
                actual: 1.36,
                estimate: 1.16
              }],
              currentQuarterEstimate: 1.09,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1638183540, 1638532800]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 151478000,
                earnings: -3822000
              }, {
                date: 2019,
                revenue: 330517000,
                earnings: 7584000
              }, {
                date: 2020,
                revenue: 622658000,
                earnings: 25305000
              }, {
                date: 2021,
                revenue: 2651368000,
                earnings: 672316000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 777196000,
                earnings: 198642000
              }, {
                date: "1Q2021",
                revenue: 882485000,
                earnings: 260610000
              }, {
                date: "2Q2021",
                revenue: 956237000,
                earnings: 227531000
              }, {
                date: "3Q2021",
                revenue: 1021495000,
                earnings: 317084000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.15185778,
        marketCap: 82476785664,
        forwardPE: 57.351234,
        priceToBook: 17.701677,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1555594200000,
        priceHint: 2,
        totalCash: 5105398800,
        floatShares: 217144042,
        ebitda: 1085708032,
        shortRatio: 1.67,
        targetPriceHigh: 643,
        targetPriceLow: 244,
        targetPriceMean: 369.43,
        targetPriceMedian: 350,
        heldPercentInsiders: 13.886,
        heldPercentInstitutions: 58.562,
        postMarketChangePercent: 0,
        postMarketTime: 1634947107,
        postMarketPrice: 277.58,
        postMarketChange: 0,
        regularMarketChange: 2.7999878,
        regularMarketChangePercent: 1.0189925,
        regularMarketTime: 1634932803,
        regularMarketPrice: 277.58,
        regularMarketDayHigh: 286.66,
        regularMarketDayRange: "276.12 - 286.66",
        regularMarketDayLow: 276.12,
        regularMarketVolume: 3320476,
        sharesShort: 10986477,
        sharesShortPrevMonth: 11162293,
        shortPercentFloat: 4.57,
        regularMarketPreviousClose: 274.78,
        bid: 277.25,
        ask: 277.5,
        bidSize: 10,
        askSize: 10,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_223236753",
        fullExchangeName: "NasdaqGS",
        shortName: "Zoom Video Communications, Inc.",
        longName: "Zoom Video Communications, Inc.",
        regularMarketOpen: 283.51,
        averageDailyVolume3Month: 4301304,
        averageDailyVolume10Day: 2650862,
        beta: -1.325842,
        fiftyTwoWeekLowChange: 27.469986,
        fiftyTwoWeekLowChangePercent: 0.10983162,
        fiftyTwoWeekRange: "250.11 - 553.859",
        fiftyTwoWeekHighChange: -276.27902,
        fiftyTwoWeekHighChangePercent: -0.49882555,
        fiftyTwoWeekLow: 250.11,
        fiftyTwoWeekHigh: 553.859,
        earningsTimestamp: 1630339500,
        earningsTimestampStart: 1638183540,
        earningsTimestampEnd: 1638532800,
        trailingPE: 83.78509,
        pegRatio: 4.18,
        dividendsPerShare: 0,
        revenue: 3637413120,
        priceToSales: 22.674572,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 3.313,
        epsForward: 4.84,
        epsCurrentYear: 4.84,
        epsNextQuarter: 1.05,
        priceEpsCurrentYear: 57.351234,
        priceEpsNextQuarter: 264.3619,
        sharesOutstanding: 240744992,
        bookValue: 15.681,
        fiftyDayAverage: 273.76886,
        fiftyDayAverageChange: 3.8111267,
        fiftyDayAverageChangePercent: 0.013920965,
        twoHundredDayAverage: 327.28,
        twoHundredDayAverageChange: -49.700012,
        symbol: "ZM"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 0.19,
                estimate: 0.06
              }, {
                date: "4Q2020",
                actual: 0.38,
                estimate: 0.31
              }, {
                date: "1Q2021",
                actual: 0.16,
                estimate: 0.14
              }, {
                date: "2Q2021",
                actual: 0.2,
                estimate: 0.07
              }],
              currentQuarterEstimate: 0.15,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635278400]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 2443299000,
                earnings: -108063000
              }, {
                date: 2018,
                revenue: 3042359000,
                earnings: 1205596000
              }, {
                date: 2019,
                revenue: 3459329000,
                earnings: 1465659000
              }, {
                date: 2020,
                revenue: 3716349000,
                earnings: -1135626000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 936233000,
                earnings: 28659000
              }, {
                date: "4Q2020",
                revenue: 1289041000,
                earnings: 222116000
              }, {
                date: "1Q2021",
                revenue: 1036018000,
                earnings: 68005000
              }, {
                date: "2Q2021",
                revenue: 1190427000,
                earnings: 65649000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.018600632,
        marketCap: 49665466368,
        forwardPE: 50.601627,
        priceToBook: 6.423117,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1383834600000,
        priceHint: 2,
        totalCash: 8607063000,
        floatShares: 775864749,
        ebitda: 797420032,
        shortRatio: 2.46,
        targetPriceHigh: 90,
        targetPriceLow: 33,
        targetPriceMean: 71.21,
        targetPriceMedian: 73,
        heldPercentInsiders: 2.526,
        heldPercentInstitutions: 80.468,
        postMarketChangePercent: -0.03213441,
        postMarketTime: 1634947186,
        postMarketPrice: 62.22,
        postMarketChange: -0.020000458,
        regularMarketChange: -3.1599998,
        regularMarketChangePercent: -4.831804,
        regularMarketTime: 1634932942,
        regularMarketPrice: 62.24,
        regularMarketDayHigh: 64.47,
        regularMarketDayRange: "62.09 - 64.47",
        regularMarketDayLow: 62.09,
        regularMarketVolume: 17417529,
        sharesShort: 25679369,
        sharesShortPrevMonth: 22817216,
        shortPercentFloat: 3.69,
        regularMarketPreviousClose: 65.4,
        bid: 62.17,
        ask: 62.22,
        bidSize: 14,
        askSize: 12,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_35962803",
        fullExchangeName: "NYSE",
        shortName: "Twitter, Inc.",
        longName: "Twitter, Inc.",
        regularMarketOpen: 63.81,
        averageDailyVolume3Month: 11154564,
        averageDailyVolume10Day: 11154262,
        beta: 0.820634,
        fiftyTwoWeekLowChange: 23.310001,
        fiftyTwoWeekLowChangePercent: 0.59876704,
        fiftyTwoWeekRange: "38.93 - 80.75",
        fiftyTwoWeekHighChange: -18.509998,
        fiftyTwoWeekHighChangePercent: -0.22922598,
        fiftyTwoWeekLow: 38.93,
        fiftyTwoWeekHigh: 80.75,
        earningsTimestamp: 1635278400,
        earningsTimestampStart: 1635278400,
        earningsTimestampEnd: 1635278400,
        trailingPE: 132.42554,
        pegRatio: 0.91,
        dividendsPerShare: 0,
        revenue: 4451719200,
        priceToSales: 11.156469,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 0.47,
        epsForward: 1.23,
        epsCurrentYear: 0.9,
        epsNextQuarter: 0.38,
        priceEpsCurrentYear: 69.155556,
        priceEpsNextQuarter: 163.78947,
        sharesOutstanding: 797966976,
        bookValue: 9.69,
        fiftyDayAverage: 62.794285,
        fiftyDayAverageChange: -0.55428314,
        fiftyDayAverageChangePercent: -0.008826968,
        twoHundredDayAverage: 63.419647,
        twoHundredDayAverageChange: -1.1796455,
        components: ["^NQDMXJPLMAUD", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQUSBLM", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQUS500LCGN", "^NQDMXKRLCCADN", "^NQUSB9535LMGBP", "^NQGXJPLMCADN", "^NQUSB9535LMJPY", "^NQNALMEURN", "^NQUSB9000LMJPYN", "^NQUSB9530LM", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQGXJPLM", "^NQUSB9535LMCAD", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMAUD", "^NQUSB9535LMEUR", "^NQNA9000LMGBPN", "^NQUSBLMGBP", "^NQNALMN", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQUSB9000LMAUD", "^NQUSLGN", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQGXGBLMN", "^NQNA9000LM", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQGXJPLMAUDN", "^NQUSB9530LMEURN", "^NQUSB9000LMCAD", "^NQUSB9530LMAUD", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQUSMLTCGN", "^NQDM9000LMJPY", "^NQDMXKRLC", "^NQNALMGBP", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQG9000LMCADN", "^NQGXGBLM", "^NQDMXKRAUD", "^NQG9000LMCAD", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQDMXKRN", "^QTW", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQDMXJPLMEURN", "^NQG9000LMGBP", "^NQG9000LMJPY", "^NQDM9000LMJPYN", "^NQNA9000LMJPYN", "^NQNALMJPY", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXGBLMJPY", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^NQUSB9535LMCADN", "^NQGXJPLMJPY", "^NQUSB9530LMCAD", "^NQUSB9530LMGBPN", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9530LMEUR", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQGXJPLMCAD", "^NQUSB9530LMN", "^NQDMXKRLCAUD", "^NQGXJPLMEUR", "^NQNALMCAD", "^NQUSB9530LMGBP", "^NQDMXJPLMGBPN", "^NQUSB9530LMJPY", "^NQDMXJPLMN", "^XCI", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQGXJPLMEURN", "^NQDMXKRLCEUR", "^NQDM9000LM", "^NQUSB9000LMN", "^NQGXGBLMJPYN", "^NQG9000LMJPYN", "^NQGXJPLMN", "^NQNALMEUR", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSB9535LMAUDN", "^NQUSMLTCG", "^NQG9000LMAUD", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^NQGXJPLMGBPN", "^NQUSB9000LMCADN", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDM9000LMGBPN", "^NQNALMAUD", "^NQNA9000LMN", "^NQG9000LM", "^NQGXGBLMAUD", "^NQUSBLMGBPN", "^QNET", "^NQDMXKRLMN", "^NQUSB9530LMCADN", "^NQUSB9530LMJPYN", "^NQUSB9535LMGBPN", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDMXKRLMEUR", "^NQUSB9535LMAUD", "^NQUS500LCG", "^NQNALMAUDN", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQG9000LMEURN", "^NQG9000LMGBPN", "^NQDM9000LMCADN", "^NQDMXJPLMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB9535LM", "^NQDMXGBLMAUD", "^NQUSB9530LMAUDN", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDMXKRLMJPY", "^NQUSB9535LMEURN", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQUSBLMJPYN", "^NQUS500LCN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^NQUSB9535LMN", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^NQNA9000LMCADN", "^NQUSB9535LMJPYN"],
        symbol: "TWTR"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: false,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 3.4,
                estimate: 3.16
              }, {
                date: "4Q2020",
                actual: 0.94,
                estimate: 0.79
              }, {
                date: "1Q2021",
                actual: 3.08,
                estimate: 2.21
              }, {
                date: "2Q2021",
                actual: 2.38,
                estimate: 1.94
              }],
              currentQuarterEstimate: 3.04,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: []
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 21218000000,
                earnings: 1097000000
              }, {
                date: 2018,
                revenue: 21915000000,
                earnings: 1702000000
              }, {
                date: 2019,
                revenue: 23640000000,
                earnings: 1976000000
              }, {
                date: 2020,
                revenue: 19844000000,
                earnings: 432000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 5964000000,
                earnings: 546000000
              }, {
                date: "4Q2020",
                revenue: 0,
                earnings: 0
              }, {
                date: "1Q2021",
                revenue: 5268000000,
                earnings: 558000000
              }, {
                date: "2Q2021",
                revenue: 5077000000,
                earnings: 397000000
              }]
            },
            financialCurrency: "EUR"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.06989251,
        marketCap: 63279411200,
        forwardPE: 26.590164,
        priceToBook: 8.904993,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1264084200000,
        priceHint: 2,
        totalCash: 4663000100,
        floatShares: 173817514,
        ebitda: 2752000000,
        heldPercentInsiders: 10.428,
        heldPercentInstitutions: 49.762,
        regularMarketChange: 0.5799866,
        regularMarketChangePercent: 0.1791077,
        regularMarketTime: 1634931686,
        regularMarketPrice: 324.4,
        regularMarketDayHigh: 325.64,
        regularMarketDayRange: "320.49 - 325.64",
        regularMarketDayLow: 320.49,
        regularMarketVolume: 911,
        regularMarketPreviousClose: 323.82,
        bid: 0,
        ask: 0,
        bidSize: 0,
        askSize: 0,
        exchange: "PNK",
        market: "us_market",
        messageBoardId: "finmb_92816",
        fullExchangeName: "Other OTC",
        shortName: "ADIDAS AG",
        longName: "adidas AG",
        regularMarketOpen: 325.05,
        averageDailyVolume3Month: 344,
        averageDailyVolume10Day: 400,
        beta: 0.87507,
        fiftyTwoWeekLowChange: 26.699982,
        fiftyTwoWeekLowChangePercent: 0.08968754,
        fiftyTwoWeekRange: "297.7 - 406.19",
        fiftyTwoWeekHighChange: -81.79001,
        fiftyTwoWeekHighChangePercent: -0.20135899,
        fiftyTwoWeekLow: 297.7,
        fiftyTwoWeekHigh: 406.19,
        exDividendDate: 1620864000,
        trailingAnnualDividendRate: 3,
        trailingPE: 32.994305,
        pegRatio: 0.36,
        dividendsPerShare: 3,
        dividendRate: 3.65,
        trailingAnnualDividendYield: 0.009264406,
        dividendYield: 1.12,
        revenue: 22456000500,
        priceToSales: 2.8179288,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 9.832,
        epsForward: 12.2,
        epsCurrentYear: 9.22,
        epsNextQuarter: 0.85,
        priceEpsCurrentYear: 35.18438,
        priceEpsNextQuarter: 381.64703,
        sharesOutstanding: 195066000,
        bookValue: 36.429,
        fiftyDayAverage: 325.8994,
        fiftyDayAverageChange: -1.4994202,
        fiftyDayAverageChangePercent: -0.004600868,
        twoHundredDayAverage: 348.7769,
        twoHundredDayAverageChange: -24.376892,
        symbol: "ADDDF"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [],
              earningsDate: []
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 15361146000000,
                earnings: 1059337000000
              }, {
                date: 2019,
                revenue: 15888617000000,
                earnings: 610316000000
              }, {
                date: 2020,
                revenue: 14931009000000,
                earnings: 455746000000
              }, {
                date: 2021,
                revenue: 13170519000000,
                earnings: 657425000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 3651369000000,
                earnings: 240922000000
              }, {
                date: "4Q2020",
                revenue: 3771569000000,
                earnings: 284051000000
              }, {
                date: "1Q2021",
                revenue: 3623806000000,
                earnings: 213323000000
              }, {
                date: "2Q2021",
                revenue: 3583870000000,
                earnings: 222512000000
              }]
            },
            financialCurrency: "JPY"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.04038869,
        marketCap: 51762495488,
        forwardPE: 9.745929,
        priceToBook: 0.0055402443,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 322151400000,
        priceHint: 2,
        totalCash: 2778411040000,
        floatShares: 1596986830,
        ebitda: 2228539097088,
        shortRatio: 2.94,
        targetPriceHigh: 39.96,
        targetPriceLow: 35.96,
        targetPriceMean: 37.96,
        targetPriceMedian: 37.96,
        heldPercentInsiders: 0,
        heldPercentInstitutions: 5.081,
        postMarketChangePercent: -0.568182,
        postMarketTime: 1634944386,
        postMarketPrice: 29.75,
        postMarketChange: -0.17,
        regularMarketChange: 0,
        regularMarketChangePercent: 0,
        regularMarketTime: 1634932802,
        regularMarketPrice: 29.92,
        regularMarketDayHigh: 30.095,
        regularMarketDayRange: "29.74 - 30.095",
        regularMarketDayLow: 29.74,
        regularMarketVolume: 673638,
        sharesShort: 1994192,
        sharesShortPrevMonth: 2211990,
        regularMarketPreviousClose: 29.92,
        bid: 29.55,
        ask: 30.13,
        bidSize: 8,
        askSize: 10,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_278933",
        fullExchangeName: "NYSE",
        shortName: "Honda Motor Company, Ltd.",
        longName: "Honda Motor Co., Ltd.",
        regularMarketOpen: 29.96,
        averageDailyVolume3Month: 664869,
        averageDailyVolume10Day: 654200,
        beta: 0.953854,
        fiftyTwoWeekLowChange: 6.6900005,
        fiftyTwoWeekLowChangePercent: 0.2879897,
        fiftyTwoWeekRange: "23.23 - 33.42",
        fiftyTwoWeekHighChange: -3.499998,
        fiftyTwoWeekHighChangePercent: -0.104727656,
        fiftyTwoWeekLow: 23.23,
        fiftyTwoWeekHigh: 33.42,
        dividendDate: 1560124800,
        exDividendDate: 1616976000,
        trailingAnnualDividendRate: 99,
        trailingPE: 6.121113,
        dividendsPerShare: 98.19,
        dividendRate: 1.02,
        trailingAnnualDividendYield: 3.3088236,
        dividendYield: 3.4,
        revenue: 14630614200000,
        priceToSales: 0.0035379578,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 4.888,
        epsForward: 3.07,
        sharesOutstanding: 1724640000,
        bookValue: 5400.484,
        fiftyDayAverage: 30.674572,
        fiftyDayAverageChange: -0.7545719,
        fiftyDayAverageChangePercent: -0.024599265,
        twoHundredDayAverage: 31.17929,
        twoHundredDayAverageChange: -1.2592907,
        symbol: "HMC"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: -0.71,
                estimate: -0.68
              }, {
                date: "4Q2020",
                actual: -0.78,
                estimate: -0.65
              }, {
                date: "1Q2021",
                actual: -0.3,
                estimate: -0.47
              }, {
                date: "2Q2021",
                actual: -0.22,
                estimate: -0.44
              }],
              currentQuarterEstimate: -0.22,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635337800]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 4090000000,
                earnings: -1235000000
              }, {
                date: 2018,
                revenue: 5259000000,
                earnings: -78000000
              }, {
                date: 2019,
                revenue: 6764000000,
                earnings: -186000000
              }, {
                date: 2020,
                revenue: 7880000000,
                earnings: -581000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 1975000000,
                earnings: -101000000
              }, {
                date: "4Q2020",
                revenue: 2168000000,
                earnings: -125000000
              }, {
                date: "1Q2021",
                revenue: 2147000000,
                earnings: 23000000
              }, {
                date: "2Q2021",
                revenue: 2331000000,
                earnings: -20000000
              }]
            },
            financialCurrency: "EUR"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.037713055,
        marketCap: 48405413888,
        forwardPE: -4216,
        priceToBook: 17.934067,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1522762200000,
        priceHint: 2,
        totalCash: 2988000000,
        floatShares: 137485468,
        ebitda: -44000000,
        shortRatio: 3.98,
        targetPriceHigh: 399.17,
        targetPriceLow: 171.64,
        targetPriceMean: 303.73,
        targetPriceMedian: 299.37,
        heldPercentInsiders: 28.304,
        heldPercentInstitutions: 60.246,
        postMarketChangePercent: -0.102787,
        postMarketTime: 1634947041,
        postMarketPrice: 252.7,
        postMarketChange: -0.26001,
        regularMarketChange: -2.0399933,
        regularMarketChangePercent: -0.7999973,
        regularMarketTime: 1634932802,
        regularMarketPrice: 252.96,
        regularMarketDayHigh: 254.37,
        regularMarketDayRange: "249.02 - 254.37",
        regularMarketDayLow: 249.02,
        regularMarketVolume: 808074,
        sharesShort: 4827974,
        sharesShortPrevMonth: 4746268,
        shortPercentFloat: 4.14,
        regularMarketPreviousClose: 255,
        bid: 252.25,
        ask: 252.78,
        bidSize: 8,
        askSize: 10,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_225595077",
        fullExchangeName: "NYSE",
        shortName: "Spotify Technology S.A.",
        longName: "Spotify Technology S.A.",
        regularMarketOpen: 251.5,
        averageDailyVolume3Month: 1401873,
        averageDailyVolume10Day: 940700,
        beta: 1.486422,
        fiftyTwoWeekLowChange: 51.282013,
        fiftyTwoWeekLowChangePercent: 0.2542767,
        fiftyTwoWeekRange: "201.678 - 387.44",
        fiftyTwoWeekHighChange: -134.48,
        fiftyTwoWeekHighChangePercent: -0.3470989,
        fiftyTwoWeekLow: 201.678,
        fiftyTwoWeekHigh: 387.44,
        earningsTimestamp: 1635337800,
        earningsTimestampStart: 1635337800,
        earningsTimestampEnd: 1635337800,
        pegRatio: -1.56,
        dividendsPerShare: 0,
        revenue: 8620999700,
        priceToSales: 5.614826,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: -1.899,
        epsForward: -0.06,
        epsCurrentYear: -1.02,
        epsNextQuarter: -0.53,
        priceEpsCurrentYear: -248.00002,
        priceEpsNextQuarter: -477.28305,
        sharesOutstanding: 191356000,
        bookValue: 14.105,
        fiftyDayAverage: 239.802,
        fiftyDayAverageChange: 13.158005,
        fiftyDayAverageChangePercent: 0.05487029,
        twoHundredDayAverage: 243.76682,
        twoHundredDayAverageChange: 9.193192,
        symbol: "SPOT"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 0.62,
                estimate: 0.52
              }, {
                date: "1Q2021",
                actual: 0.92,
                estimate: 0.66
              }, {
                date: "2Q2021",
                actual: 0.93,
                estimate: 0.89
              }, {
                date: "3Q2021",
                actual: 1,
                estimate: 0.84
              }],
              currentQuarterEstimate: 0.89,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1637578740, 1637928000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 52056000000,
                earnings: 2526000000
              }, {
                date: 2018,
                revenue: 58472000000,
                earnings: 5327000000
              }, {
                date: 2019,
                revenue: 58756000000,
                earnings: 3152000000
              }, {
                date: 2020,
                revenue: 56639000000,
                earnings: 2844000000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 15258000000,
                earnings: 668000000
              }, {
                date: "1Q2021",
                revenue: 15646000000,
                earnings: 1068000000
              }, {
                date: "2Q2021",
                revenue: 15877000000,
                earnings: 1228000000
              }, {
                date: "3Q2021",
                revenue: 15289000000,
                earnings: 1108000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.013369196,
        marketCap: 35232460800,
        forwardPE: 7.5607934,
        priceToBook: -8.909356,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: -252322200000,
        priceHint: 2,
        totalCash: 3447000060,
        floatShares: 1149487614,
        ebitda: 6051999744,
        shortRatio: 5.05,
        targetPriceHigh: 42,
        targetPriceLow: 24,
        targetPriceMean: 32.94,
        targetPriceMedian: 32,
        heldPercentInsiders: 0.161,
        heldPercentInstitutions: 84.008,
        postMarketChangePercent: 0.525106,
        postMarketTime: 1634947170,
        postMarketPrice: 30.63,
        postMarketChange: 0.16,
        regularMarketChange: -0.10000038,
        regularMarketChangePercent: -0.32711935,
        regularMarketTime: 1634932974,
        regularMarketPrice: 30.47,
        regularMarketDayHigh: 30.995,
        regularMarketDayRange: "30.31 - 30.995",
        regularMarketDayLow: 30.31,
        regularMarketVolume: 10858902,
        sharesShort: 46442555,
        sharesShortPrevMonth: 45658699,
        shortPercentFloat: 4.64,
        regularMarketPreviousClose: 30.57,
        bid: 30.62,
        ask: 30.85,
        bidSize: 22,
        askSize: 31,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_108856",
        fullExchangeName: "NYSE",
        shortName: "HP Inc.",
        longName: "HP Inc.",
        regularMarketOpen: 30.48,
        averageDailyVolume3Month: 9072960,
        averageDailyVolume10Day: 11960962,
        beta: 1.042857,
        fiftyTwoWeekLowChange: 13.219999,
        fiftyTwoWeekLowChangePercent: 0.7663768,
        fiftyTwoWeekRange: "17.25 - 36.0",
        fiftyTwoWeekHighChange: -5.5300007,
        fiftyTwoWeekHighChangePercent: -0.15361112,
        fiftyTwoWeekLow: 17.25,
        fiftyTwoWeekHigh: 36,
        dividendDate: 1633478400,
        exDividendDate: 1630972800,
        earningsTimestamp: 1629994020,
        earningsTimestampStart: 1637578740,
        earningsTimestampEnd: 1637928000,
        trailingAnnualDividendRate: 0.758,
        trailingPE: 9.545739,
        pegRatio: 0.36,
        dividendsPerShare: 0.76,
        dividendRate: 0.78,
        trailingAnnualDividendYield: 0.024795553,
        dividendYield: 2.54,
        revenue: 62070002000,
        priceToSales: 0.5676246,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 3.192,
        epsForward: 4.03,
        epsCurrentYear: 3.73,
        epsNextQuarter: 0.95,
        priceEpsCurrentYear: 8.1689005,
        priceEpsNextQuarter: 32.073685,
        sharesOutstanding: 1152519936,
        bookValue: -3.42,
        fiftyDayAverage: 28.106285,
        fiftyDayAverageChange: 2.3637142,
        fiftyDayAverageChangePercent: 0.08409914,
        twoHundredDayAverage: 30.068014,
        twoHundredDayAverageChange: 0.40198517,
        components: ["^NQDMXJPLMAUD", "^NQUSBLM", "^NQUSB9572LMCADN", "^NQGMOIN", "^NQNALMEURN", "^NQUSB9000LMJPYN", "^NQUSB9572LMN", "^NQUSBLMCAD", "^NQUSB9000LMEURN", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQNA9000LMGBPN", "^NQUSB9570LMJPY", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NQNA9000LMEUR", "^NQNA9000LMCAD", "^NQGXGBLMN", "^NQUS500LCVN", "^NQDMXKRLCJPY", "^NQUSB9000LMEUR", "^NQDXUSLCEUR", "^NQUSB9572LMAUDN", "^NQUSB9000LMCAD", "^NQDM9000LMJPY", "^NQG9000LMCADN", "^NQDMXKRAUD", "^NQDMXKRLMGBPN", "^NQDXUSMLTCVN", "^NQGXGBLMGBPN", "^NQDM9000LMEURN", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQG9000LMGBP", "^NQDM9000LMJPYN", "^NQNALMJPY", "^NQGXGBLMJPY", "^NQUSB9570LMGBPN", "^NQGXJPLMJPY", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQUSB9000LMJPY", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^NQUSB9572LMEUR", "^NQDMXJPLMGBPN", "^NQUSLV", "^NQDMXJPLMN", "^NQUSB9572LMCAD", "^NQDM9000LMAUD", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQUSB9000LMN", "^NQDXUSLC", "^NQUSB9570LMAUDN", "^NQGXGBLMJPYN", "^NQUSB9572LMEURN", "^NQG9000LMJPYN", "^NQUSBLMEURN", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQUSB9570LM", "^NQDMXKRLCEURN", "^NQG9000LMAUD", "^NQGXJPLMGBPN", "^NQUSB9000LMCADN", "^NQNALM", "^NQUS500LC", "^NQDMXGBLMJPY", "^NQUSMLTCV", "^NQNALMAUD", "^NQNA9000LMN", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQDXUSLCV", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQUSB9570LMCADN", "^NQDMXKRLMEUR", "^NQNALMAUDN", "^NQG9000LMEURN", "^NQDM9000LMCADN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQUSB9570LMAUD", "^NQNA9000LMGBP", "^NQDMXGBLMJPYN", "^NQG9000LMN", "^NQDMXKRLMJPY", "^NQUSBLMJPYN", "^NQDM9000LMN", "^NQDMXGBLMCAD", "^NQUSB9572LMJPY", "^XMI", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQBUY", "^NQDMXGBLMEUR", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQDMXGBLMN", "^NQNALMGBPN", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB9572LM", "^NQGXJPLM", "^NQNA9000LMAUD", "^NQUSB9570LMGBP", "^NQUSBLMGBP", "^NQNALMN", "^NQUSB9000LMAUD", "^NQNA9000LM", "^NQUSB9570LMEURN", "^NQGXJPLMAUDN", "^NQUSLVN", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQDM9000LMGBP", "^NQDMXKRLC", "^NQNALMGBP", "^NQDMXJPLMJPYN", "^NQG9000LMEUR", "^NQGXGBLM", "^NQG9000LMCAD", "^NQGMOI", "^NQDMXKRN", "^NQUSB9570LMN", "^NQUSMLTCVN", "^NQUSB9572LMJPYN", "^NQDMXJPLMEURN", "^NQG9000LMJPY", "^NQNA9000LMJPYN", "^NQDMXJPLM", "^NQDMXKREUR", "^NQGXJPLMGBP", "^NQDM9000LMAUDN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDMXKRCAD", "^NQNA9000LMEURN", "^NQDXUSMLTCV", "^NQUSB9000LMAUDN", "^NQUSB9000LMGBP", "^NQDXUSLCEURN", "^NQNA9000LMAUDN", "^NQG9000LMAUDN", "^NQDMXKRLCAUD", "^NQNALMCAD", "^XCI", "^NQGXJPLMEURN", "^NQDM9000LM", "^NQDXUSLCGBP", "^NQGXJPLMN", "^NQNALMEUR", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQDM9000LMEUR", "^NQUSB9572LMGBPN", "^NQDM9000LMCAD", "^NQDMXGBLMGBPN", "^NQDMXKRCADN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^NQDM9000LMGBPN", "^NQDXUSLCGBPN", "^NQUSB9570LMJPYN", "^NQG9000LM", "^NQUSB9572LMAUD", "^NQUSBLMGBPN", "^NQDMXKRLMN", "^NQGXJPLMAUD", "^NQDMXGBLMAUDN", "^NQUSB9000LM", "^NQDMXJPLMJPY", "^NQDMXKRLCGBPN", "^NQDMXKREURN", "^NQNALMJPYN", "^NQUSB9000LMGBPN", "^NQG9000LMGBPN", "^NQDMXJPLMCADN", "^NQUSB9570LMCAD", "^NQUSB9570LMEUR", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQNA9000LMJPY", "^NQDMXJPLMCAD", "^NQDMXJPLMEUR", "^NQDMXKRLMGBP", "^NQDXUSLCVN", "^NQGXGBLMAUDN", "^NQUS500LCN", "^NQUSB9572LMGBP", "^NQNA9000LMCADN", "^NQUS500LCV"],
        symbol: "HPQ"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: -0.31,
                estimate: -0.44
              }, {
                date: "1Q2021",
                actual: -0.33,
                estimate: -0.39
              }, {
                date: "2Q2021",
                actual: -0.15,
                estimate: -0.37
              }, {
                date: "3Q2021",
                actual: -0.24,
                estimate: -0.39
              }],
              currentQuarterEstimate: -0.37,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1638788340, 1639137600]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 166028000,
                earnings: -83973000
              }, {
                date: 2019,
                revenue: 267016000,
                earnings: -99011000
              }, {
                date: 2020,
                revenue: 421720000,
                earnings: -175522000
              }, {
                date: 2021,
                revenue: 590380000,
                earnings: -266944000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 150771000,
                earnings: -72651000
              }, {
                date: "1Q2021",
                revenue: 170999000,
                earnings: -75801000
              }, {
                date: "2Q2021",
                revenue: 181648000,
                earnings: -63992000
              }, {
                date: "3Q2021",
                revenue: 198747000,
                earnings: -77133000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.35927576,
        marketCap: 33412661248,
        forwardPE: -682.2838,
        priceToBook: 49.557323,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1508419800000,
        priceHint: 2,
        totalCash: 1814824960,
        floatShares: 62061823,
        ebitda: -232408992,
        shortRatio: 4.16,
        targetPriceHigh: 590,
        targetPriceLow: 410,
        targetPriceMean: 489.15,
        targetPriceMedian: 480,
        heldPercentInsiders: 5.867,
        heldPercentInstitutions: 90.4,
        postMarketChangePercent: -0.5724048,
        postMarketTime: 1634946697,
        postMarketPrice: 502,
        postMarketChange: -2.8900146,
        regularMarketChange: -4.539978,
        regularMarketChangePercent: -0.8911878,
        regularMarketTime: 1634932804,
        regularMarketPrice: 504.89,
        regularMarketDayHigh: 513.24,
        regularMarketDayRange: "497.29 - 513.24",
        regularMarketDayLow: 497.29,
        regularMarketVolume: 541945,
        sharesShort: 4995604,
        sharesShortPrevMonth: 5129990,
        shortPercentFloat: 8.9,
        regularMarketPreviousClose: 509.43,
        bid: 485,
        ask: 504.95,
        bidSize: 8,
        askSize: 9,
        exchange: "NGM",
        market: "us_market",
        messageBoardId: "finmb_46952162",
        fullExchangeName: "NasdaqGM",
        shortName: "MongoDB, Inc.",
        longName: "MongoDB, Inc.",
        regularMarketOpen: 507.55,
        averageDailyVolume3Month: 810030,
        averageDailyVolume10Day: 823975,
        beta: 0.634664,
        fiftyTwoWeekLowChange: 285.38,
        fiftyTwoWeekLowChangePercent: 1.3000776,
        fiftyTwoWeekRange: "219.51 - 518.34",
        fiftyTwoWeekHighChange: -13.450012,
        fiftyTwoWeekHighChangePercent: -0.025948241,
        fiftyTwoWeekLow: 219.51,
        fiftyTwoWeekHigh: 518.34,
        earningsTimestamp: 1630598706,
        earningsTimestampStart: 1638788340,
        earningsTimestampEnd: 1639137600,
        dividendsPerShare: 0,
        revenue: 702164990,
        priceToSales: 47.5852,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: -4.733,
        epsForward: -0.74,
        epsCurrentYear: -1.13,
        epsNextQuarter: -0.34,
        priceEpsCurrentYear: -446.80533,
        priceEpsNextQuarter: -1484.9706,
        sharesOutstanding: 66178100,
        bookValue: 10.188,
        fiftyDayAverage: 486.33173,
        fiftyDayAverageChange: 18.558289,
        fiftyDayAverageChangePercent: 0.03815973,
        twoHundredDayAverage: 371.44046,
        twoHundredDayAverageChange: 133.44955,
        symbol: "MDB"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: -0.09,
                estimate: -0.15
              }, {
                date: "4Q2020",
                actual: -0.1,
                estimate: -0.14
              }, {
                date: "1Q2021",
                actual: -0.1,
                estimate: -0.12
              }, {
                date: "2Q2021",
                actual: -0.02,
                estimate: -0.13
              }],
              currentQuarterEstimate: -0.07,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1636491600]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 380755000,
                earnings: -131602000
              }, {
                date: 2019,
                revenue: 541779000,
                earnings: -163190000
              }, {
                date: 2020,
                revenue: 772445000,
                earnings: -282308000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 200784000,
                earnings: -144719000
              }, {
                date: "4Q2020",
                revenue: 220336000,
                earnings: -83502000
              }, {
                date: "1Q2021",
                revenue: 234772000,
                earnings: -107460000
              }, {
                date: "2Q2021",
                revenue: 273562000,
                earnings: -148342000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.28665876,
        marketCap: 40640360448,
        forwardPE: -1106.5386,
        priceToBook: 20.605932,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1600435800000,
        priceHint: 2,
        totalCash: 1589024000,
        floatShares: 163434183,
        ebitda: -379950016,
        shortRatio: 3.47,
        targetPriceHigh: 160,
        targetPriceLow: 85,
        targetPriceMean: 131.79,
        targetPriceMedian: 132,
        heldPercentInsiders: 11.435,
        heldPercentInstitutions: 73.903,
        postMarketChangePercent: -0.03476055,
        postMarketTime: 1634947070,
        postMarketPrice: 143.8,
        postMarketChange: -0.05000305,
        regularMarketChange: -3.25,
        regularMarketChangePercent: -2.209381,
        regularMarketTime: 1634932802,
        regularMarketPrice: 143.85,
        regularMarketDayHigh: 147.74,
        regularMarketDayRange: "143.58 - 147.74",
        regularMarketDayLow: 143.58,
        regularMarketVolume: 1913521,
        sharesShort: 12671716,
        sharesShortPrevMonth: 9825748,
        shortPercentFloat: 9.32,
        regularMarketPreviousClose: 147.1,
        bid: 143.5,
        ask: 143.85,
        bidSize: 9,
        askSize: 8,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_241908542",
        fullExchangeName: "NYSE",
        shortName: "Unity Software Inc.",
        longName: "Unity Software Inc.",
        regularMarketOpen: 146.53,
        averageDailyVolume3Month: 3141304,
        averageDailyVolume10Day: 2169625,
        fiftyTwoWeekLowChange: 67.850006,
        fiftyTwoWeekLowChangePercent: 0.89276326,
        fiftyTwoWeekRange: "76.0 - 174.94",
        fiftyTwoWeekHighChange: -31.089996,
        fiftyTwoWeekHighChangePercent: -0.17771806,
        fiftyTwoWeekLow: 76,
        fiftyTwoWeekHigh: 174.94,
        earningsTimestamp: 1636491600,
        earningsTimestampStart: 1636491600,
        earningsTimestampEnd: 1636491600,
        pegRatio: -9.22,
        dividendsPerShare: 0,
        revenue: 929454020,
        priceToSales: 43.724983,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: -1.978,
        epsForward: -0.13,
        epsCurrentYear: -0.23,
        epsNextQuarter: -0.05,
        priceEpsCurrentYear: -625.4348,
        priceEpsNextQuarter: -2877,
        sharesOutstanding: 282519008,
        bookValue: 6.981,
        fiftyDayAverage: 135.14972,
        fiftyDayAverageChange: 8.700287,
        fiftyDayAverageChangePercent: 0.06437518,
        twoHundredDayAverage: 111.80121,
        twoHundredDayAverageChange: 32.048798,
        symbol: "U"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 0.05,
                estimate: 0.02
              }, {
                date: "4Q2020",
                actual: 3.06,
                estimate: 2.96
              }, {
                date: "1Q2021",
                actual: 1.23,
                estimate: 1.05
              }, {
                date: "2Q2021",
                actual: 0.79,
                estimate: 0.67
              }],
              currentQuarterEstimate: 1.17,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635969600]
            },
            financialsChart: {
              yearly: [{
                date: 2018,
                revenue: 5150000000,
                earnings: 1043000000
              }, {
                date: 2019,
                revenue: 4950000000,
                earnings: 1019000000
              }, {
                date: 2020,
                revenue: 5537000000,
                earnings: 3039000000
              }, {
                date: 2021,
                revenue: 5629000000,
                earnings: 837000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 1151000000,
                earnings: 185000000
              }, {
                date: "4Q2020",
                revenue: 1673000000,
                earnings: 211000000
              }, {
                date: "1Q2021",
                revenue: 1346000000,
                earnings: 76000000
              }, {
                date: "2Q2021",
                revenue: 1551000000,
                earnings: 204000000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.0015690067,
        marketCap: 40145985536,
        forwardPE: 18.986542,
        priceToBook: 5.2095723,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 622301400000,
        priceHint: 2,
        totalCash: 3719000060,
        floatShares: 283110519,
        ebitda: 1176999936,
        shortRatio: 1.52,
        targetPriceHigh: 240,
        targetPriceLow: 140,
        targetPriceMean: 171.83,
        targetPriceMedian: 170,
        heldPercentInsiders: 0.513,
        heldPercentInstitutions: 94.188,
        postMarketChangePercent: 0.96405,
        postMarketTime: 1634940194,
        postMarketPrice: 142.43,
        postMarketChange: 1.35999,
        regularMarketChange: 0.44000244,
        regularMarketChangePercent: 0.3128795,
        regularMarketTime: 1634932803,
        regularMarketPrice: 141.07,
        regularMarketDayHigh: 144.16,
        regularMarketDayRange: "140.6 - 144.16",
        regularMarketDayLow: 140.6,
        regularMarketVolume: 2493612,
        sharesShort: 4861820,
        sharesShortPrevMonth: 4492772,
        shortPercentFloat: 1.72,
        regularMarketPreviousClose: 140.63,
        bid: 141.07,
        ask: 141.07,
        bidSize: 13,
        askSize: 10,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_27963",
        fullExchangeName: "NasdaqGS",
        shortName: "Electronic Arts Inc.",
        longName: "Electronic Arts Inc.",
        regularMarketOpen: 141,
        averageDailyVolume3Month: 2708641,
        averageDailyVolume10Day: 2289125,
        beta: 0.892063,
        fiftyTwoWeekLowChange: 30.920006,
        fiftyTwoWeekLowChangePercent: 0.28070816,
        fiftyTwoWeekRange: "110.15 - 150.3",
        fiftyTwoWeekHighChange: -9.229996,
        fiftyTwoWeekHighChangePercent: -0.061410483,
        fiftyTwoWeekLow: 110.15,
        fiftyTwoWeekHigh: 150.3,
        dividendDate: 1632268800,
        exDividendDate: 1630368000,
        earningsTimestamp: 1635969600,
        earningsTimestampStart: 1635969600,
        earningsTimestampEnd: 1635969600,
        trailingAnnualDividendRate: 0.51,
        trailingPE: 60.571064,
        pegRatio: 0.81,
        dividendsPerShare: 0.51,
        dividendRate: 0.68,
        trailingAnnualDividendYield: 0.0036265375,
        dividendYield: 0.49,
        revenue: 5720999900,
        priceToSales: 7.017302,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 2.329,
        epsForward: 7.43,
        epsCurrentYear: 6.64,
        epsNextQuarter: 3.26,
        priceEpsCurrentYear: 21.245483,
        priceEpsNextQuarter: 43.27301,
        sharesOutstanding: 284582016,
        bookValue: 27.079,
        fiftyDayAverage: 137.86171,
        fiftyDayAverageChange: 3.2082977,
        fiftyDayAverageChangePercent: 0.023271855,
        twoHundredDayAverage: 140.84901,
        twoHundredDayAverageChange: 0.22099304,
        components: ["^NQDMXJPLMAUD", "^NQNA3700LMGBPN", "^NQDOG", "^NQUSBLM", "^NQNA3000LMJPY", "^QIV", "^NQDXUSMLTCGN", "^NQUS500LCGN", "^NQGMOIN", "^NQUSB3000LMJPY", "^NQUSB3700LMGBP", "^NQUSB3747LMGBPN", "^NQDM3000LM", "^NQGS", "^NQNALMEURN", "^NQUSBLMCAD", "^NQDM3700LMEUR", "^NQDMXKRJPYN", "^NQDMXKRLMAUDN", "^NQDM3700LMCAD", "^NQUSB3740LM", "^NQUSB3000LMEUR", "^NQUSB3000LMCAD", "^NQDMXJPLMAUDN", "^NQDMXKRLMAUD", "^NQUSBLMJPY", "^NDXCHF", "^NQPRCE", "^NQGXGBLMN", "^NQDMXKRLCJPY", "^WEALTHGN", "^NQDXUSLCEUR", "^NQG3000LMEUR", "^WEALTHGL", "^NQDM3000LMCADN", "^NQDXUSLCG", "^NQG3700LMJPYN", "^NQUSB3740LMCAD", "^NQG3700LMEURN", "^NQUSB3000LMGBPN", "^NQDMXKRAUD", "^NQG3000LMGBPN", "^NQDMXKRLMGBPN", "^NQGXGBLMGBPN", "^NQDM3000LMAUD", "^NQGXJPLMJPYN", "^NQNALMCADN", "^NQUSBLMEUR", "^NQNALMJPY", "^NQNA3000LMCADN", "^DWANQTL", "^NDX", "^NQGXGBLMJPY", "^NQUSB3740LMEUR", "^NQNA3700LMGBP", "^NQGXJPLMJPY", "^NQDM3700LM", "^NQDMXKR", "^NQDMXGBLMCADN", "^NQDMXKRLCN", "^NQGXGBLMEURN", "^NQGXJPLMCAD", "^NQGXJPLMEUR", "^XNDXNNRCHF", "^GRNDO", "^NQG3000LMAUDN", "^NQDMXJPLMGBPN", "^NQDMXJPLMN", "^NQDMXKRLCJPYN", "^NQDMXKRLMCADN", "^NQDMXKRLCEUR", "^NQDXUSLC", "^NQGXGBLMJPYN", "^NQG3000LMJPY", "^NQUSBLMEURN", "^NQDM3000LMGBPN", "^INDS", "^NQDMXKRJPY", "^NQDMXKRLCCAD", "^NQDMXKRLCEURN", "^NQUSMLTCG", "^NQDM3000LMJPY", "^NQGXJPLMGBPN", "^NQUSB3000LMCADN", "^QMI", "^NQNA3000LM", "^NQNA3700LMAUDN", "^IXIC", "^NQNALM", "^NQUS500LC", "^NQUSB3700LM", "^NQG3700LMGBP", "^NQDMXGBLMJPY", "^NQNALMAUD", "^NQUSB3740LMGBPN", "^NQDXUSLCN", "^NQGXGBLMAUD", "^NQG3000LMCAD", "^NQUSB3747LMAUD", "^NQUSBLMN", "^NQDMXJPLMGBP", "^NQUSB3740LMGBP", "^NQDMXKRLMEUR", "^MNX1", "^NQUSB3700LMCAD", "^NQUSB3747LMEURN", "^NQUSB3747LMN", "^NQUSB3700LMJPYN", "^NQNALMAUDN", "^NQUSB3700LMEUR", "^GMB", "^NQUSB3700LMEURN", "^NQUSB3747LMJPYN", "^NQDMXKRLMCAD", "^NQDMXGBLM", "^NQDM3700LMEURN", "^NQG3700LMAUD", "^NQDMXGBLMJPYN", "^NQG3000LMCADN", "^NQUSB3747LM", "^NQDOGN", "^NQNA3000LMEURN", "^NQDMXKRLMJPY", "^NQUSB3740LMAUDN", "^NQUSB3000LMAUDN", "^NQUSB3747LMGBP", "^NQUSBLMJPYN", "^WEALTHAX", "^GRNREG", "^NQDM3700LMJPYN", "^NQDM3700LMGBP", "^NQNA3000LMAUD", "^NQNA3000LMJPYN", "^NQDMXGBLMCAD", "^XNDXNNRGBP", "^NQUSLG", "^NQDMXGBLMEURN", "^NQDMXKRGBPN", "^NQDMXGBLMEUR", "^XNDXNNR", "^NQDM3000LMAUDN", "^NQG3700LMGBPN", "^NQDMXKRAUDN", "^NQDMXKRLMJPYN", "^NQUSBLMCADN", "^NQNA3000LMGBP", "^NQDMXGBLMN", "^NQDM3000LMN", "^NQG3000LM", "^NQUSB3000LMJPYN", "^NQNALMGBPN", "^WEALTHAN", "^GRNASIA", "^NQGXGBLMCADN", "^NQDMXKRLCCADN", "^NQGXJPLMCADN", "^NQUSB3000LMGBP", "^NQUSB3700LMJPY", "^NQGXJPLM", "^NQUSB3000LMEURN", "^NQG3700LM", "^NQUSB3700LMN", "^NQUSBLMGBP", "^NQNALMN", "^NQDM3700LMAUD", "^NQUSLGN", "^NQNA3000LMGBPN", "^NQNA3700LMCAD", "^NQGXJPLMAUDN", "^NQUSB3000LMAUD", "^NQNA3700LMEUR", "^NQDMXKRLCGBP", "^NQDMXKRLM", "^NQUSB3747LMCADN", "^NQUSMLTCGN", "^GRNEXUS", "^NQDMXKRLC", "^NQG3000LMAUD", "^NQNALMGBP", "^NDXEUR", "^NDXHKD", "^NQDMXJPLMJPYN", "^NQGXGBLM", "^NQGMOI", "^NQUSB3700LMCADN", "^NQUSB3740LMCADN", "^NQDMXKRN", "^NQDM3700LMN", "^NQUSB3740LMAUD", "^XQC", "^NQDMXJPLMEURN", "^NDXCAD", "^NQDXUSMLTCG", "^NQFFUSMN", "^NQG3700LMN", "^NQDMXJPLM", "^NQDM3700LMCADN", "^NQDMXKREUR", "^NQUSB3740LMN", "^TSTWEALTHAN", "^NQGXJPLMGBP", "^NQNA3700LMCADN", "^NQDMXKRLMEURN", "^NQUSBLMAUD", "^NQGXGBLMGBP", "^NQDM3000LMEUR", "^NQDMXKRCAD", "^NQPRCEN", "^XQO", "^NQNA3700LMJPY", "^NQG3000LMEURN", "^NQDM3000LMCAD", "^NQDXUSLCEURN", "^GMBNTR", "^NQNA3000LMAUDN", "^NQDMXKRLCAUD", "^XCQ", "^NQNALMCAD", "^NQG3000LMGBP", "^NQUSB3700LMGBPN", "^NQGXJPLMEURN", "^NQDXUSLCGBP", "^NQG3000LMJPYN", "^NQUSB3000LMN", "^NQGXJPLMN", "^NQNALMEUR", "^NDXGBP", "^NQGXGBLMEUR", "^NQDMXKRGBP", "^NQUSB3740LMJPY", "^NQDM3000LMGBP", "^NQUSB3747LMCAD", "^XNDXNNRHKD", "^NQFFUSM", "^NQDMXGBLMGBPN", "^NQG3700LMJPY", "^NQUSB3747LMEUR", "^XNDXNNREUR", "^NQDMXKRCADN", "^NQG3700LMAUDN", "^NQGXGBLMCAD", "^NQDMXGBLMGBP", "^NQDMXKRLCAUDN", "^XNDXNNRCAD", "^NQDXUSLCGBPN", "^NQNA3000LMN", "^NQDM3700LMGBPN", "^NQUSBLMGBPN", "^NQNA3700LMAUD", "^NQDMXKRLMN", "^NQGXJPLMAUD", "^NQUSB3000LM", "^NQDMXGBLMAUDN", "^NQNA3700LMJPYN", "^QGREEN", "^NQDMXJPLMJPY", "^NQUSB3740LMEURN", "^NQDMXKRLCGBPN", "^NDXX", "^NQDXUSLCGN", "^NQUS500LCG", "^NQDM3000LMEURN", "^NQNA3700LM", "^NDXE", "^NQDMXKREURN", "^NQNA3000LMCAD", "^NQNALMJPYN", "^NQDM3700LMAUDN", "^NQNA3000LMEUR", "^NQG3700LMCADN", "^NQDMXJPLMCADN", "^NQUSB3700LMAUD", "^NQG3000LMN", "^NQDM3000LMJPYN", "^NQDMXGBLMAUD", "^NQUSBLMAUDN", "^NQNA3700LMN", "^NQUSB3740LMJPYN", "^NQDMXJPLMCAD", "^NQUSB3700LMAUDN", "^NQDMXJPLMEUR", "^NQUSB3747LMAUDN", "^NQDMXKRLMGBP", "^NQGXGBLMAUDN", "^NQDM3700LMJPY", "^NQG3700LMEUR", "^NQUSB3747LMJPY", "^NQNA3700LMEURN", "^NQUS500LCN", "^NQG3700LMCAD"],
        symbol: "EA"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [],
              earningsDate: [1635312600]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 94054000000,
                earnings: 9201000000
              }, {
                date: 2018,
                revenue: 127657000000,
                earnings: 45984000000
              }, {
                date: 2019,
                revenue: 175391000000,
                earnings: 12826000000
              }, {
                date: 2020,
                revenue: 218344000000,
                earnings: 25512000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 58335000000,
                earnings: 22149000000
              }, {
                date: "4Q2020",
                revenue: 71599000000,
                earnings: 813000000
              }, {
                date: "1Q2021",
                revenue: 73136000000,
                earnings: -2977000000
              }, {
                date: "2Q2021",
                revenue: 81402000000,
                earnings: -3879000000
              }]
            },
            financialCurrency: "RUB"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.07759091,
        marketCap: 27054424064,
        forwardPE: 58.23077,
        priceToBook: 0.08222585,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1306243800000,
        priceHint: 2,
        totalCash: 213687992000,
        floatShares: 312893639,
        ebitda: 24576000000,
        shortRatio: 4.49,
        targetPriceHigh: 6700,
        targetPriceLow: 5378,
        targetPriceMean: 6215.83,
        targetPriceMedian: 6379.5,
        heldPercentInsiders: 2.783,
        heldPercentInstitutions: 84.504,
        postMarketChangePercent: 0,
        postMarketTime: 1634938400,
        postMarketPrice: 75.7,
        postMarketChange: 0,
        regularMarketChange: -0.34000397,
        regularMarketChangePercent: -0.4471383,
        regularMarketTime: 1634932804,
        regularMarketPrice: 75.7,
        regularMarketDayHigh: 77.03,
        regularMarketDayRange: "75.44 - 77.03",
        regularMarketDayLow: 75.44,
        regularMarketVolume: 847401,
        sharesShort: 6288334,
        sharesShortPrevMonth: 5813588,
        shortPercentFloat: 2.2,
        regularMarketPreviousClose: 76.04,
        bid: 75.22,
        ask: 75.6,
        bidSize: 8,
        askSize: 8,
        exchange: "NMS",
        market: "us_market",
        messageBoardId: "finmb_52034495",
        fullExchangeName: "NasdaqGS",
        shortName: "Yandex N.V.",
        longName: "Yandex N.V.",
        regularMarketOpen: 76.63,
        averageDailyVolume3Month: 1178406,
        averageDailyVolume10Day: 1125050,
        beta: 1.296825,
        fiftyTwoWeekLowChange: 19.189999,
        fiftyTwoWeekLowChangePercent: 0.3395859,
        fiftyTwoWeekRange: "56.51 - 82.62",
        fiftyTwoWeekHighChange: -6.920006,
        fiftyTwoWeekHighChangePercent: -0.08375703,
        fiftyTwoWeekLow: 56.51,
        fiftyTwoWeekHigh: 82.62,
        earningsTimestamp: 1635312600,
        earningsTimestampStart: 1635312600,
        earningsTimestampEnd: 1635312600,
        trailingPE: 120.349754,
        dividendsPerShare: 0,
        revenue: 284471984000,
        priceToSales: 0.095104,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 0.629,
        epsForward: 1.3,
        sharesOutstanding: 321681984,
        bookValue: 920.635,
        fiftyDayAverage: 78.71429,
        fiftyDayAverageChange: -3.0142899,
        fiftyDayAverageChangePercent: -0.038294062,
        twoHundredDayAverage: 70.24929,
        twoHundredDayAverageChange: 5.4507065,
        components: ["^WEALTHGN", "^XCQ", "^IXCO", "^WEALTHGL", "^IXIC", "^QNET", "^NQGS", "^QTW"],
        symbol: "YNDX"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 0.14,
                estimate: 0.01
              }, {
                date: "4Q2020",
                actual: 0.49,
                estimate: 0.46
              }, {
                date: "1Q2021",
                actual: 0.4,
                estimate: 0.27
              }, {
                date: "2Q2021",
                actual: 0.53,
                estimate: 0.42
              }],
              currentQuarterEstimate: 0.44,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: []
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 4080015000000,
                earnings: 241923000000
              }, {
                date: 2018,
                revenue: 3951937000000,
                earnings: 252441000000
              }, {
                date: 2019,
                revenue: 3593299000000,
                earnings: 124964000000
              }, {
                date: 2020,
                revenue: 3160243000000,
                earnings: 83318000000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 758881000000,
                earnings: 16658000000
              }, {
                date: "4Q2020",
                revenue: 945735000000,
                earnings: 53589000000
              }, {
                date: "1Q2021",
                revenue: 842651000000,
                earnings: 44454000000
              }, {
                date: "2Q2021",
                revenue: 881933000000,
                earnings: 61149000000
              }]
            },
            financialCurrency: "JPY"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: 0.056142,
        marketCap: 26269743104,
        forwardPE: 16,
        priceToBook: 0.009568595,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 322151400000,
        priceHint: 2,
        totalCash: 523662000000,
        floatShares: 1028958559,
        ebitda: 484496998400,
        shortRatio: 4.65,
        targetPriceHigh: 28.09,
        targetPriceLow: 28.09,
        targetPriceMean: 28.09,
        targetPriceMedian: 28.09,
        heldPercentInsiders: 0,
        heldPercentInstitutions: 1.357,
        postMarketChangePercent: 1.4331158,
        postMarketTime: 1634944584,
        postMarketPrice: 25.48,
        postMarketChange: 0.3599987,
        regularMarketChange: 0.12000084,
        regularMarketChangePercent: 0.4800034,
        regularMarketTime: 1634932802,
        regularMarketPrice: 25.12,
        regularMarketDayHigh: 25.345,
        regularMarketDayRange: "25.0 - 25.345",
        regularMarketDayLow: 25,
        regularMarketVolume: 159732,
        sharesShort: 1342828,
        sharesShortPrevMonth: 969395,
        regularMarketPreviousClose: 25,
        bid: 25.11,
        ask: 26,
        bidSize: 8,
        askSize: 13,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_195225",
        fullExchangeName: "NYSE",
        shortName: "Canon, Inc.",
        longName: "Canon Inc.",
        regularMarketOpen: 25.345,
        averageDailyVolume3Month: 288033,
        averageDailyVolume10Day: 227475,
        beta: 0.539673,
        fiftyTwoWeekLowChange: 7.9900017,
        fiftyTwoWeekLowChangePercent: 0.4664333,
        fiftyTwoWeekRange: "17.13 - 25.94",
        fiftyTwoWeekHighChange: -0.8199997,
        fiftyTwoWeekHighChangePercent: -0.031611398,
        fiftyTwoWeekLow: 17.13,
        fiftyTwoWeekHigh: 25.94,
        dividendDate: 1491523200,
        exDividendDate: 1624838400,
        trailingAnnualDividendRate: 85,
        trailingPE: 17.01897,
        pegRatio: 13.59,
        dividendsPerShare: 82.29,
        dividendRate: 0.77,
        trailingAnnualDividendYield: 3.4,
        dividendYield: 3.06,
        revenue: 3429200040000,
        priceToSales: 0.007660604,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 1.476,
        epsForward: 1.57,
        epsCurrentYear: 1.84,
        epsNextQuarter: 0.51,
        priceEpsCurrentYear: 13.652174,
        priceEpsNextQuarter: 49.254906,
        sharesOutstanding: 1045769984,
        bookValue: 2625.255,
        fiftyDayAverage: 24.480572,
        fiftyDayAverageChange: 0.6394291,
        fiftyDayAverageChangePercent: 0.02611986,
        twoHundredDayAverage: 23.784681,
        twoHundredDayAverageChange: 1.3353195,
        components: ["^NQ96DIVUS"],
        symbol: "CAJ"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Delayed Quote",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "3Q2020",
                actual: 0.13,
                estimate: 0.03
              }, {
                date: "4Q2020",
                actual: 0.43,
                estimate: 0.32
              }, {
                date: "1Q2021",
                actual: 0.11,
                estimate: 0.07
              }, {
                date: "2Q2021",
                actual: 0.25,
                estimate: 0.13
              }],
              currentQuarterEstimate: 0.23,
              currentQuarterEstimateDate: "3Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1635245940, 1635768000]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 472852000,
                earnings: -130044000
              }, {
                date: 2018,
                revenue: 755932000,
                earnings: -62974000
              }, {
                date: 2019,
                revenue: 1142761000,
                earnings: -1361371000
              }, {
                date: 2020,
                revenue: 1692658000,
                earnings: -128323000
              }],
              quarterly: [{
                date: "3Q2020",
                revenue: 442616000,
                earnings: -94220000
              }, {
                date: "4Q2020",
                revenue: 705617000,
                earnings: 207841000
              }, {
                date: "1Q2021",
                revenue: 485230000,
                earnings: -21674000
              }, {
                date: "2Q2021",
                revenue: 613210000,
                earnings: 69417000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.0927743,
        marketCap: 39547977728,
        forwardPE: 41.769787,
        priceToBook: 14.906291,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "DOWN"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1555594200000,
        priceHint: 2,
        totalCash: 2143325950,
        floatShares: 552807896,
        ebitda: 276200000,
        shortRatio: 2.36,
        targetPriceHigh: 100,
        targetPriceLow: 40,
        targetPriceMean: 70.24,
        targetPriceMedian: 70,
        heldPercentInsiders: 0.61,
        heldPercentInstitutions: 209.172,
        postMarketChangePercent: -1.2745464,
        postMarketTime: 1634947199,
        postMarketPrice: 57.32,
        postMarketChange: -0.7400017,
        regularMarketChange: -3.289997,
        regularMarketChangePercent: -5.3626685,
        regularMarketTime: 1634932818,
        regularMarketPrice: 58.06,
        regularMarketDayHigh: 60.37,
        regularMarketDayRange: "57.63 - 60.37",
        regularMarketDayLow: 57.63,
        regularMarketVolume: 15458887,
        sharesShort: 16983145,
        sharesShortPrevMonth: 15250766,
        shortPercentFloat: 3.07,
        regularMarketPreviousClose: 61.35,
        bid: 57.2,
        ask: 57.32,
        bidSize: 13,
        askSize: 8,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_139264388",
        fullExchangeName: "NYSE",
        shortName: "Pinterest, Inc.",
        longName: "Pinterest, Inc.",
        regularMarketOpen: 59.97,
        averageDailyVolume3Month: 11871324,
        averageDailyVolume10Day: 24608262,
        beta: 1.254802,
        fiftyTwoWeekLowChange: 9.490002,
        fiftyTwoWeekLowChangePercent: 0.19538814,
        fiftyTwoWeekRange: "48.57 - 89.9",
        fiftyTwoWeekHighChange: -31.84,
        fiftyTwoWeekHighChangePercent: -0.3541713,
        fiftyTwoWeekLow: 48.57,
        fiftyTwoWeekHigh: 89.9,
        earningsTimestamp: 1627574700,
        earningsTimestampStart: 1635245940,
        earningsTimestampEnd: 1635768000,
        trailingPE: 230.39682,
        pegRatio: 1.17,
        dividendsPerShare: 0,
        revenue: 2246672900,
        priceToSales: 17.60291,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: 0.252,
        epsForward: 1.39,
        epsCurrentYear: 1.06,
        epsNextQuarter: 0.47,
        priceEpsCurrentYear: 54.77359,
        priceEpsNextQuarter: 123.53192,
        sharesOutstanding: 555177024,
        bookValue: 3.895,
        fiftyDayAverage: 53.704285,
        fiftyDayAverageChange: 4.3557167,
        fiftyDayAverageChangePercent: 0.081105575,
        twoHundredDayAverage: 63.997307,
        twoHundredDayAverageChange: -5.9373055,
        symbol: "PINS"
      }, {
        language: "en-US",
        region: "US",
        quoteType: "EQUITY",
        quoteSourceName: "Nasdaq Real Time Price",
        triggerable: true,
        quoteSummary: {
          earnings: {
            maxAge: 86400,
            earningsChart: {
              quarterly: [{
                date: "4Q2020",
                actual: 0.09,
                estimate: 0.07
              }, {
                date: "1Q2021",
                actual: 0,
                estimate: -0.05
              }, {
                date: "2Q2021",
                actual: 0.1,
                estimate: -0.01
              }, {
                date: "3Q2021",
                actual: 0.17,
                estimate: 0.08
              }],
              currentQuarterEstimate: 0.18,
              currentQuarterEstimateDate: "4Q",
              currentQuarterEstimateYear: 2021,
              earningsDate: [1634832600]
            },
            financialsChart: {
              yearly: [{
                date: 2017,
                revenue: 824949000,
                earnings: -3445066000
              }, {
                date: 2018,
                revenue: 1180446000,
                earnings: -1255911000
              }, {
                date: 2019,
                revenue: 1715534000,
                earnings: -1033660000
              }, {
                date: 2020,
                revenue: 2506626000,
                earnings: -944839000
              }],
              quarterly: [{
                date: "4Q2020",
                revenue: 911322000,
                earnings: -113099000
              }, {
                date: "1Q2021",
                revenue: 769584000,
                earnings: -286882000
              }, {
                date: "2Q2021",
                revenue: 982108000,
                earnings: -151664000
              }, {
                date: "3Q2021",
                revenue: 1067471000,
                earnings: -71959000
              }]
            },
            financialCurrency: "USD"
          }
        },
        currency: "USD",
        twoHundredDayAverageChangePercent: -0.17960545,
        marketCap: 88764366848,
        forwardPE: 68.924995,
        priceToBook: 25.730286,
        sourceInterval: 15,
        exchangeDataDelayedBy: 0,
        exchangeTimezoneName: "America/New_York",
        exchangeTimezoneShortName: "EDT",
        pageViews: {
          midTermTrend: "UP",
          longTermTrend: "UP",
          shortTermTrend: "UP"
        },
        gmtOffSetMilliseconds: -14400000,
        esgPopulated: false,
        tradeable: false,
        firstTradeDateMilliseconds: 1488465000000,
        priceHint: 2,
        totalCash: 3481820930,
        floatShares: 1211746051,
        ebitda: -657089024,
        shortRatio: 3.06,
        targetPriceHigh: 111,
        targetPriceLow: 67,
        targetPriceMean: 86.19,
        targetPriceMedian: 87,
        heldPercentInsiders: 10.321,
        heldPercentInstitutions: 64.648,
        postMarketChangePercent: -0.181354,
        postMarketTime: 1634947198,
        postMarketPrice: 55.04,
        postMarketChange: -0.0999985,
        regularMarketChange: -19.970001,
        regularMarketChangePercent: -26.587673,
        regularMarketTime: 1634932823,
        regularMarketPrice: 55.14,
        regularMarketDayHigh: 60.78,
        regularMarketDayRange: "55.03 - 60.78",
        regularMarketDayLow: 55.03,
        regularMarketVolume: 152565158,
        sharesShort: 49819470,
        sharesShortPrevMonth: 44228724,
        shortPercentFloat: 4.24,
        regularMarketPreviousClose: 75.11,
        bid: 55.03,
        ask: 55.05,
        bidSize: 22,
        askSize: 12,
        exchange: "NYQ",
        market: "us_market",
        messageBoardId: "finmb_224055283",
        fullExchangeName: "NYSE",
        shortName: "Snap Inc.",
        longName: "Snap Inc.",
        regularMarketOpen: 58.75,
        averageDailyVolume3Month: 19749024,
        averageDailyVolume10Day: 38598000,
        beta: 1.262032,
        fiftyTwoWeekLowChange: 17.79,
        fiftyTwoWeekLowChangePercent: 0.47630528,
        fiftyTwoWeekRange: "37.35 - 83.34",
        fiftyTwoWeekHighChange: -28.199997,
        fiftyTwoWeekHighChangePercent: -0.33837292,
        fiftyTwoWeekLow: 37.35,
        fiftyTwoWeekHigh: 83.34,
        earningsTimestamp: 1634832600,
        earningsTimestampStart: 1634832600,
        earningsTimestampEnd: 1634832600,
        pegRatio: 2.21,
        dividendsPerShare: 0,
        revenue: 3730484990,
        priceToSales: 23.794323,
        marketState: "CLOSED",
        epsTrailingTwelveMonths: -0.408,
        epsForward: 0.8,
        epsCurrentYear: 0.36,
        epsNextQuarter: 0.05,
        priceEpsCurrentYear: 153.16666,
        priceEpsNextQuarter: 1102.7999,
        sharesOutstanding: 1325840000,
        bookValue: 2.143,
        fiftyDayAverage: 74.498,
        fiftyDayAverageChange: -19.358002,
        fiftyDayAverageChangePercent: -0.2598459,
        twoHundredDayAverage: 67.21156,
        twoHundredDayAverageChange: -12.071564,
        symbol: "SNAP"
      }],
      error: null
    }
  },
  status: 200,
  statusText: "OK",
  headers: {
    "access-control-allow-credentials": "true",
    "access-control-allow-headers": "ver",
    "access-control-allow-methods": "GET, POST",
    "access-control-allow-origin": "*",
    connection: "keep-alive",
    "content-type": "application/json",
    date: "Sat, 23 Oct 2021 14:59:55 GMT",
    server: "RapidAPI-1.2.8",
    "transfer-encoding": "chunked",
    "x-rapidapi-region": "AWS - eu-central-1",
    "x-rapidapi-version": "1.2.8",
    "x-ratelimit-requests-limit": "500",
    "x-ratelimit-requests-remaining": "352",
    "x-ratelimit-requests-reset": "2430931"
  },
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    transformRequest: [null],
    transformResponse: [null],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    headers: {
      Accept: "application/json, text/plain, */*",
      "x-rapidapi-key": "faa3f13619mshc63ad9bee129027p1b67cejsn3ab2f74d41ee",
      "x-rapidapi-host": "yh-finance.p.rapidapi.com"
    },
    params: {
      region: "US",
      symbols: "AAPL,MSFT,BKNG, GOOG,AMZN,FB,BRK-B,TSLA,NVDA,V,BABA,JNJ,WMT,MA,NSRGY,DIS,ADBE,PYPL,NFLX,NKE,CSCO,KO,PEP,INTC,RYDAF,SHOP,MCD,TMUS,AMD,SONY,SBUX,IBM,OGZPY,SBRCY,ABNB,UBER,DELL,ZM,TWTR,ADDDF,HMC,SPOT,HPQ,MDB,U,EA,YNDX,CAJ,PINS,SNAP"
    },
    method: "get",
    url: "https://yh-finance.p.rapidapi.com/market/v2/get-quotes"
  },
  request: {}
};

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/pages/AllPlayers.js":
/*!*********************************!*\
  !*** ./src/pages/AllPlayers.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var _utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/formatNumbersForUI */ "./src/utils/formatNumbersForUI.js");
/* harmony import */ var _contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contexts/calculationsContext */ "./src/contexts/calculationsContext.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/esm/react-router-dom.js");
/* harmony import */ var _components_MiniButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/MiniButton */ "./src/components/MiniButton.js");
/* harmony import */ var _utils_defineClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/defineClass */ "./src/utils/defineClass.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\pages\\AllPlayers.js",
    _s = __webpack_require__.$Refresh$.signature();











const AllPlayers = () => {
  _s();

  const {
    allUsers,
    allPrices
  } = Object(_contexts_userContext__WEBPACK_IMPORTED_MODULE_2__["useUserContext"])();
  const {
    currentPrice,
    userStockDayChangePercent,
    userStockDayChangeUSD,
    todayTotalChangeUSD,
    todayTotalChangePercent,
    investSince
  } = Object(_contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_4__["useCalculationsContext"])();
  const [todayUnit, setTodayUnit] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])("%");
  const [returnUnit, setReturnUnit] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])("%");
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])(Wrapper, {
    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("h1", {
      children: "All Players"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 30,
      columnNumber: 7
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("div", {
      className: "table_container card",
      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("table", {
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("tr", {
          className: "header",
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("th", {
            children: "Rank"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 34,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("th", {
            children: "Name"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 35,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("th", {
            children: "Account Value, $"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 36,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("th", {
            className: "return group",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("div", {
              className: "label",
              children: "Return"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 38,
              columnNumber: 15
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])(_components_MiniButton__WEBPACK_IMPORTED_MODULE_6__["default"], {
              content: "$",
              value: returnUnit,
              setValue: () => setReturnUnit("$")
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 39,
              columnNumber: 15
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])(_components_MiniButton__WEBPACK_IMPORTED_MODULE_6__["default"], {
              content: "%",
              value: returnUnit,
              setValue: () => setReturnUnit("%")
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 44,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 37,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("th", {
            className: "today group",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("div", {
              className: "label",
              children: "Today"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 51,
              columnNumber: 15
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])(_components_MiniButton__WEBPACK_IMPORTED_MODULE_6__["default"], {
              content: "$",
              value: todayUnit,
              setValue: () => setTodayUnit("$")
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 52,
              columnNumber: 15
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])(_components_MiniButton__WEBPACK_IMPORTED_MODULE_6__["default"], {
              content: "%",
              value: todayUnit,
              setValue: () => setTodayUnit("%")
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 57,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 50,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("th", {
            children: "Cash, %"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 63,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("th", {
            children: "Investing since"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 64,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 33,
          columnNumber: 11
        }, undefined), allUsers.sort((a, b) => {
          return b.accountValue - a.accountValue;
        }).map((user, i) => {
          return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("tr", {
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("td", {
              children: i + 1
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 73,
              columnNumber: 19
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("td", {
              className: "link",
              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_5__["Link"], {
                to: `/portfolio/${user.userName.toLowerCase()}`,
                children: user.userName
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 75,
                columnNumber: 21
              }, undefined)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 74,
              columnNumber: 19
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("td", {
              className: "account_value",
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_3__["usdNoPlus"])(user.accountValue)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 79,
              columnNumber: 19
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("td", {
              className: `${Object(_utils_defineClass__WEBPACK_IMPORTED_MODULE_7__["defineClass"])(user.accountValue - 10000)}`,
              children: returnUnit === "%" ? Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_3__["percent"])((user.accountValue - 10000) / 100) : Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_3__["usdPlus"])(user.accountValue - 10000)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 83,
              columnNumber: 19
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("td", {
              className: `${Object(_utils_defineClass__WEBPACK_IMPORTED_MODULE_7__["defineClass"])(todayTotalChangeUSD(user))}`,
              children: todayUnit === "%" ? Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_3__["percent"])(todayTotalChangePercent(user)) : Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_3__["usdPlus"])(todayTotalChangeUSD(user))
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 89,
              columnNumber: 19
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("td", {
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_3__["percentNoPlus"])(user.cash / user.accountValue * 100)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 95,
              columnNumber: 19
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__["jsxDEV"])("td", {
              children: investSince(user)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 98,
              columnNumber: 19
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 72,
            columnNumber: 17
          }, undefined);
        })]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 32,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 29,
    columnNumber: 5
  }, undefined);
};

_s(AllPlayers, "AuYZtpO4xtdXiySc2hl45tlLS/8=", false, function () {
  return [_contexts_userContext__WEBPACK_IMPORTED_MODULE_2__["useUserContext"], _contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_4__["useCalculationsContext"]];
});

_c = AllPlayers;
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div`
  & {
    padding: 0rem 4rem;
    font-family: var(--ff-primary);
    font-size: 2rem;
  }

  .table_container {
    /* padding: 0; */
  }
  table {
    font-size: 1.8rem;
    letter-spacing: 1px;
    width: 100%;
    border-collapse: collapse;
    border-radius: 15px;
    .header {
      .label {
        /* margin-left: 2rem; */
        position: relative;
        margin-right: 0.5rem;
        display: inline-block;
      }
    }
    th {
      font-weight: normal;
      font-size: 2rem;
      padding-top: 1.5rem;
      padding-bottom: 1.5rem;
    }

    td {
      text-align: center;
      padding-top: 1rem;
      padding-bottom: 1rem;

      &.account_value {
        text-align: right;
        padding-right: 5%;
      }
      &.link {
        cursor: pointer;
        a {
          text-decoration: none;
          color: var(--clr-white);
        }
        &:hover {
          text-decoration: underline;
        }
        /* width: 7rem; */
      }
    }
    tr:nth-child(even) {
      background-color: #293c55;
    }
  }
`;
_c2 = Wrapper;
/* harmony default export */ __webpack_exports__["default"] = (AllPlayers);

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "AllPlayers");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/pages/DayLosers.js":
/*!********************************!*\
  !*** ./src/pages/DayLosers.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/fetchOptions */ "./src/utils/fetchOptions.js");
/* harmony import */ var _utils_formatData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/formatData */ "./src/utils/formatData.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _components_Table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Table */ "./src/components/Table.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\pages\\DayLosers.js";







const DayLosers = () => {
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(_components_Table__WEBPACK_IMPORTED_MODULE_4__["default"], {
    list: null,
    dayMovers: "dayLosers"
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 8,
    columnNumber: 10
  }, undefined);
};

_c = DayLosers;
/* harmony default export */ __webpack_exports__["default"] = (DayLosers);

var _c;

__webpack_require__.$Refresh$.register(_c, "DayLosers");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/pages/HomePage.js":
/*!*******************************!*\
  !*** ./src/pages/HomePage.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\pages\\HomePage.js",
    _s = __webpack_require__.$Refresh$.signature();





const HomePage = () => {
  _s();

  const [clock, setClock] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const calendarOptions = {
    method: "GET",
    url: "https://sandbox.tradier.com/v1/markets/calendar?month=11&month=12&year=2021",
    headers: {
      Authorization: "Bearer W13Ww2MP1RJw8PhJf9NspGc4RD5P",
      Accept: "application/json"
    }
  };
  const clockOptions = {
    method: "GET",
    url: "https://sandbox.tradier.com/v1/markets/clock",
    qs: {
      delayed: "false"
    },
    headers: {
      Authorization: "Bearer W13Ww2MP1RJw8PhJf9NspGc4RD5P",
      Accept: "application/json"
    }
  };

  const getClock = async () => {
    const data = await axios__WEBPACK_IMPORTED_MODULE_1___default()(clockOptions); // console.log(data.data);
    // setClock(data)
  };

  const getCalendar = async () => {
    const data = await axios__WEBPACK_IMPORTED_MODULE_1___default()(calendarOptions); // console.log(data.data);
    // setClock(data)
  };

  getClock();
  getCalendar();
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("div", {
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__["jsxDEV"])("h1", {
      children: "Homepage"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 42,
    columnNumber: 5
  }, undefined);
};

_s(HomePage, "BWOcvTT+bbmP/RBREMUJIwWOC/o=");

_c = HomePage;
/* harmony default export */ __webpack_exports__["default"] = (HomePage);

var _c;

__webpack_require__.$Refresh$.register(_c, "HomePage");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/pages/LandingPage.js":
/*!**********************************!*\
  !*** ./src/pages/LandingPage.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _components_Hero__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Hero */ "./src/components/Hero.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\pages\\LandingPage.js";





const LandingPage = () => {
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])(Wrapper, {
    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])("header", {
      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])("div", {
        className: "landing-hero",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])(_components_Hero__WEBPACK_IMPORTED_MODULE_2__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 10,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxDEV"])("h1", {
          children: "Stock Market Simulater"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 11,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 9,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 8,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 7,
    columnNumber: 5
  }, undefined);
};

_c = LandingPage;
/* harmony default export */ __webpack_exports__["default"] = (LandingPage);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].body`
  header {
    background-image: linear-gradient(90deg, #323a56, 70%, rgba(50, 58, 86, 0)),
      url("hero.png");
    background-size: cover;
    width: 100%;
    min-height: 45vh;

    .landing-hero {
      padding: 3rem 5rem;
    }
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "LandingPage");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/pages/Portfolio.js":
/*!********************************!*\
  !*** ./src/pages/Portfolio.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _components_DonutChart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/DonutChart */ "./src/components/DonutChart.js");
/* harmony import */ var _components_HoldingsTable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/HoldingsTable */ "./src/components/HoldingsTable.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/esm/react-router-dom.js");
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var _contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../contexts/calculationsContext */ "./src/contexts/calculationsContext.js");
/* harmony import */ var _utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/formatNumbersForUI */ "./src/utils/formatNumbersForUI.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _components_MiniButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/MiniButton */ "./src/components/MiniButton.js");
/* harmony import */ var _utils_defineClass__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/defineClass */ "./src/utils/defineClass.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\pages\\Portfolio.js",
    _s = __webpack_require__.$Refresh$.signature();















const Portfolio = () => {
  _s();

  const [todayUnit, setTodayUnit] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])("%");
  const [returnUnit, setReturnUnit] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])("%");
  const {
    allUsers,
    allPrices
  } = Object(_contexts_userContext__WEBPACK_IMPORTED_MODULE_5__["useUserContext"])();
  const {
    currentPrice,
    todayTotalChangeUSD,
    todayTotalChangePercent,
    investSince
  } = Object(_contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_6__["useCalculationsContext"])();
  let {
    name
  } = Object(react_router_dom__WEBPACK_IMPORTED_MODULE_4__["useParams"])();
  name = name.toLowerCase();
  const [user, setUser] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])();
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (!allUsers) return; // if (!user?.userName === name) {

    setUser(allUsers.find(user => {
      return user.userName.toLowerCase() === name;
    })); // }
  }, [name, allPrices]);
  if (!user) return null;
  const rank = allUsers.sort((a, b) => {
    return b.accountValue - a.accountValue;
  }).findIndex(player => {
    return player.userName === user.userName;
  }) + 1;
  const {
    accountValue,
    cash,
    holdings,
    userName,
    regTimestamp
  } = user;
  const totalReturnUSD = accountValue - 10000;
  const totalReturnPercent = parseFloat((totalReturnUSD / 10000 * 100).toFixed(2));
  const investmentTerm = Date.now() - regTimestamp;
  const yearTerm = 31536000000;
  const annualReturn = yearTerm * totalReturnPercent / investmentTerm; // console.log(annualReturn);

  const donutData = holdings.map(stock => {
    return {
      label: stock.symbol,
      value: stock.quantity * currentPrice(stock)
    };
  });
  donutData.unshift({
    label: "USD",
    value: cash
  });
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(Wrapper, {
    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
      className: "overview card",
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("h2", {
        className: "title",
        children: "Overview"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 74,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
        className: "total field",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "label ",
          children: "account value"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 76,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "value",
          children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_7__["usdNoPlus"])(accountValue)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 77,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 75,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
        className: "rank field",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "label",
          children: "Rank"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 80,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "value",
          children: [rank, /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("span", {
            className: "users_amount",
            children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(react_router_dom__WEBPACK_IMPORTED_MODULE_4__["Link"], {
              to: "/allplayers",
              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("span", {
                className: "users",
                children: ["of ", allUsers.length, " PLAYERS"]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 85,
                columnNumber: 17
              }, undefined)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 84,
              columnNumber: 15
            }, undefined)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 83,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 81,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 79,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
        className: "today_change field",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "label group",
          children: ["today", /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_components_MiniButton__WEBPACK_IMPORTED_MODULE_9__["default"], {
            content: "$",
            value: todayUnit,
            setValue: () => setTodayUnit("$"),
            small: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 93,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_components_MiniButton__WEBPACK_IMPORTED_MODULE_9__["default"], {
            content: "%",
            value: todayUnit,
            setValue: () => setTodayUnit("%"),
            small: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 99,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 91,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: `value  ${Object(_utils_defineClass__WEBPACK_IMPORTED_MODULE_10__["defineClass"])(todayTotalChangePercent(user))}`,
          children: todayUnit === "%" ? Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_7__["percent"])(todayTotalChangePercent(user)) : Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_7__["usdPlus"])(todayTotalChangeUSD(user))
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 106,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 90,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
        className: "current_return field",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "label group",
          children: ["Total Return", /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_components_MiniButton__WEBPACK_IMPORTED_MODULE_9__["default"], {
            content: "$",
            value: returnUnit,
            setValue: () => setReturnUnit("$"),
            small: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 117,
            columnNumber: 13
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_components_MiniButton__WEBPACK_IMPORTED_MODULE_9__["default"], {
            content: "%",
            value: returnUnit,
            setValue: () => setReturnUnit("%"),
            small: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 123,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 115,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: `value ${Object(_utils_defineClass__WEBPACK_IMPORTED_MODULE_10__["defineClass"])(totalReturnUSD)}`,
          children: returnUnit === "%" ? Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_7__["percent"])(totalReturnPercent) : Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_7__["usdPlus"])(totalReturnUSD)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 130,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 114,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
        className: "cash field",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "label",
          children: "cash"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 137,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "value",
          children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_7__["usdNoPlus"])(cash)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 138,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 136,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
        className: "annual_return field",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: `label `,
          children: "annual return"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 141,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: `value ${Object(_utils_defineClass__WEBPACK_IMPORTED_MODULE_10__["defineClass"])(annualReturn)}`,
          children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_7__["percent"])(annualReturn)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 142,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 140,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
        className: "cash field",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "label",
          children: "Player's name"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 147,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "value name",
          children: userName
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 148,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 146,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
        className: "annual_return field",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "label",
          children: "Investing since"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 151,
          columnNumber: 11
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
          className: "value",
          children: investSince(user)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 152,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 150,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 7
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
      className: "donut card",
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("h2", {
        className: "title",
        children: "Shares of holdings"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 156,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_components_DonutChart__WEBPACK_IMPORTED_MODULE_2__["DonutChart"], {
        data: donutData
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 158,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 7
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])("div", {
      className: "table_container card",
      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_11__["jsxDEV"])(_components_HoldingsTable__WEBPACK_IMPORTED_MODULE_3__["default"], {
        user: user
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 161,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 160,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 72,
    columnNumber: 5
  }, undefined);
};

_s(Portfolio, "qtuLQEkOw4PDnExdB/QrpbYpSMY=", false, function () {
  return [_contexts_userContext__WEBPACK_IMPORTED_MODULE_5__["useUserContext"], _contexts_calculationsContext__WEBPACK_IMPORTED_MODULE_6__["useCalculationsContext"], react_router_dom__WEBPACK_IMPORTED_MODULE_4__["useParams"]];
});

_c = Portfolio;
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div`
  & {
    padding: 2rem 4rem;
    display: grid;
    grid-template-columns: calc(50% - 2rem / 2) max(470px, calc(50% - 2rem / 2));
    grid-template-rows: 40rem min-content;
    grid-gap: 2rem 2rem;
    grid-template-areas:
      "overview donut"
      "table table";
    .table_container {
      grid-area: table;
      &.card {
        padding: 0 0 1rem;
      }
    }
  }
  .card {
    padding: 1rem 2rem 2rem;
    font-family: var(--ff-primary);
    background-color: var(--clr-primary);
    border-radius: 15px;

    .title {
      font-size: 2.5rem;
      text-align: center;
      padding: 1rem 0;
    }
  }

  .overview {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: min-content;
    gap: 2rem 2rem;
    .title {
      grid-column: 1/3;
      margin-bottom: -1rem;
      font-size: 2.5rem;
      text-align: center;
    }
    .field {
      display: flex;
      flex-direction: column;
      justify-content: center;
      background-color: var(--clr-secondary);
      border-radius: 15px;
      letter-spacing: 1px;
      .group {
        display: flex;
        align-items: center;
      }
    }
    .total,
    .rank {
      .value {
        font-size: 2.5rem;
      }
      .users_amount {
        margin-left: 2rem;
        font-size: 1.5rem;
        .users {
          color: #fafafa;
          text-transform: none;
        }
        & span {
          text-decoration: underline;
          text-transform: uppercase;
          cursor: pointer;
          color: #fafafa;
        }
      }
    }
    .value {
      padding: 0.6rem 2rem;
      &.name {
        text-transform: capitalize;
      }
    }
    .label {
      text-transform: uppercase;
      font-size: 1.2rem;
      padding: 0.5rem 2rem 0rem;
    }
    .value {
      font-size: 2.2rem;
    }
  }

  .donut {
    width: max(100%, 500px);
    padding: 1rem 0 0;
    h2 {
      margin-bottom: -1rem;
      z-index: 1000000;
    }
    h2 + div {
      width: 100% !important;

      height: max(25vh, 35rem);
    }
    svg {
      border-radius: 0 0 15px 15px;
    }
  }
`;
_c2 = Wrapper;
/* harmony default export */ __webpack_exports__["default"] = (Portfolio);

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "Portfolio");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/pages/SingleStock.js":
/*!**********************************!*\
  !*** ./src/pages/SingleStock.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/esm/react-router-dom.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _components_TradingViewChart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/TradingViewChart */ "./src/components/TradingViewChart.js");
/* harmony import */ var _components_EarningsChart__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/EarningsChart */ "./src/components/EarningsChart.js");
/* harmony import */ var _utils_fetchOptions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/fetchOptions.js */ "./src/utils/fetchOptions.js");
/* harmony import */ var _utils_formatSingleCompany__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/formatSingleCompany */ "./src/utils/formatSingleCompany.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/Button/index.js");
/* harmony import */ var _components_TargetSlider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/TargetSlider */ "./src/components/TargetSlider.js");
/* harmony import */ var _mui_icons_material_StarOutline__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/icons-material/StarOutline */ "./node_modules/@mui/icons-material/StarOutline.js");
/* harmony import */ var _mui_icons_material_StarOutline__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_mui_icons_material_StarOutline__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _mui_icons_material_Star__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/icons-material/Star */ "./node_modules/@mui/icons-material/Star.js");
/* harmony import */ var _mui_icons_material_Star__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_mui_icons_material_Star__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var react_icons_hi__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-icons/hi */ "./node_modules/react-icons/hi/index.esm.js");
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var _components_Message__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../components/Message */ "./src/components/Message.js");
/* harmony import */ var _utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils/formatNumbersForUI */ "./src/utils/formatNumbersForUI.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\pages\\SingleStock.js",
    _s = __webpack_require__.$Refresh$.signature();



















let server = "http://localhost:5000";

const SingleStock = () => {
  _s();

  let {
    ticker: tickerFromUrl
  } = Object(react_router_dom__WEBPACK_IMPORTED_MODULE_1__["useParams"])();
  const symbol = tickerFromUrl.toUpperCase();
  const {
    buyStock,
    sellStock,
    currentUser,
    allUsers,
    addToWatchlist,
    deletFromWatchlist
  } = Object(_contexts_userContext__WEBPACK_IMPORTED_MODULE_13__["useUserContext"])();
  const {
    holdings,
    cash,
    accountValue,
    watchlist
  } = (allUsers === null || allUsers === void 0 ? void 0 : allUsers.find(user => user._id === currentUser._id)) || {};
  const logo = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const [data, setData] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({});
  const [quantity, setQuantity] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(0);
  const [loading, setLoading] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(true);
  const [message, setMessage] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({
    active: false,
    status: "",
    content: ""
  });
  const {
    quantity: myQuantity,
    average: myAverage
  } = (holdings === null || holdings === void 0 ? void 0 : holdings.length) > 0 ? (holdings === null || holdings === void 0 ? void 0 : holdings.find(stock => stock.symbol === symbol)) || {
    quantity: 0,
    average: 0
  } : {
    quantity: 0,
    average: 0
  };
  const purchasedValue = myQuantity * myAverage;
  const currentValue = myQuantity * data.currentPrice;
  const returnInDollars = purchasedValue ? currentValue - purchasedValue : 0;
  const returnProcent = returnInDollars / purchasedValue * 100 || 0;

  const showMessage = (status, content) => {
    setMessage({
      active: true,
      status,
      content
    });
    setTimeout(() => {
      setMessage({
        active: false,
        status,
        content
      });
    }, 2500);
  };

  const fetchData = () => {
    setLoading(true); /////////////////

    const finhubApi = `${_utils_fetchOptions_js__WEBPACK_IMPORTED_MODULE_5__["urlCompanyProfile"]}${symbol}&token=${_utils_fetchOptions_js__WEBPACK_IMPORTED_MODULE_5__["finhubApiKey"]}`;
    const mboumApi = `${_utils_fetchOptions_js__WEBPACK_IMPORTED_MODULE_5__["urlMboum"]}`;
    const getFinhubData = axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(finhubApi);
    const getTradierData = axios__WEBPACK_IMPORTED_MODULE_2___default()(Object(_utils_fetchOptions_js__WEBPACK_IMPORTED_MODULE_5__["optionsTradier"])(symbol.replace(/(\.|-)/g, "/")));
    const getMboumData = axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(mboumApi, Object(_utils_fetchOptions_js__WEBPACK_IMPORTED_MODULE_5__["optionsMboum"])(symbol));
    axios__WEBPACK_IMPORTED_MODULE_2___default.a.all([getFinhubData, getMboumData, getTradierData]).then(axios__WEBPACK_IMPORTED_MODULE_2___default.a.spread((...allData) => {
      setData(Object(_utils_formatSingleCompany__WEBPACK_IMPORTED_MODULE_6__["formatSingleCompany"])(allData));
      setLoading(false);
    })); /////////////////////////////////////
    // setData(formatSingleCompany(allData));
    // setLoading(false);
    //////////////////////
  };

  const quantityInputHandler = e => {
    if (currencyChecker() !== "USD") return;
    setQuantity(parseInt(e.target.value));
  };

  const quantityFocusHandler = e => {
    if (quantity === 0) setQuantity("");
  };

  const quantityBlurHandler = e => {
    if (e.target.value === "") setQuantity(0); // setQuantity(0);
  };

  const buyHandler = () => {
    console.log(currency);
    if (currencyChecker() !== "USD") return;

    if (quantity === 0) {
      showMessage("warning", "Please set quantity of stocks");
      return;
    }

    if (quantity * data.currentPrice > cash) {
      showMessage("error", "Not enough cash!");
      return;
    }

    buyStock(symbol, quantity, data.currentPrice);
    showMessage("success", "Successfully bought!");
  };

  const sellHandler = () => {
    if (myQuantity === 0) {
      showMessage("error", `You don't have ${symbol} stocks!`);
      return;
    }

    if (quantity > myQuantity) {
      showMessage("error", `You don't have  enough ${symbol} stocks!`);
      return;
    }

    if (quantity === 0) {
      showMessage("warning", "Please set quantity of stocks");
      return;
    }

    sellStock(symbol, quantity, data.currentPrice);
    showMessage("success", "Successfully sold");
    setQuantity(0);
  };

  const increase = () => {
    if (currencyChecker() !== "USD") return;
    setQuantity(prev => prev + 1);
  };

  const decrease = () => {
    if (quantity === 0) return;
    setQuantity(prev => {
      return prev - 1;
    });
  };

  const isInWatchList = Boolean(watchlist === null || watchlist === void 0 ? void 0 : watchlist.find(stock => stock === symbol));

  const watchlistHander = () => {
    if (isInWatchList) {
      deletFromWatchlist(symbol);
      return;
    }

    addToWatchlist(symbol);
  };

  const currency = data.priceCurrency;

  const currencyChecker = () => {
    if (currency !== "USD") {
      showMessage("warning", "Sorry, at the moment we do not support stocks traded in currencies other than the US dollar");
    }

    return currency;
  };

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    fetchData(); // logo.current.onerror = (e) => {
    //   e.target.src = `https://finnhub.io/api/logo?symbol=${symbol}`;
    //   e.target.onerror = null;
    // };
  }, []);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (!logo.current) return;

    logo.current.onerror = e => {
      e.target.src = `${server}/logos/default.png`;
      e.target.onerror = null;
    };
  });
  return !loading && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(Wrapper, {
    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_components_Message__WEBPACK_IMPORTED_MODULE_14__["default"], { ...message
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 203,
      columnNumber: 9
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
      className: "main-container",
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("section", {
        className: "chart-description",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_components_TradingViewChart__WEBPACK_IMPORTED_MODULE_3__["default"], {
          ticker: symbol
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 206,
          columnNumber: 13
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("article", {
          className: "description scrollbar",
          id: "style-8",
          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("p", {
            className: "description_content force-overflow",
            children: data.description
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 208,
            columnNumber: 15
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 207,
          columnNumber: 13
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 205,
        columnNumber: 11
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("section", {
        className: "main",
        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
          className: "main_info",
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "logo-name-industry",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("img", {
              ref: logo,
              src: `${server}/logos/${symbol}.webp`,
              alt: "logo",
              className: "logo"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 216,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "name-industry",
              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("h1", {
                className: "name",
                children: data.name
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 223,
                columnNumber: 19
              }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("p", {
                className: "label",
                children: data.industry
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 224,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 222,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 215,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "country",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "info",
              children: data.country
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 228,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "label",
              children: "Country"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 229,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 227,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "cap",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "info number",
              children: data.marketCap
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 232,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "label",
              children: "Market Cap"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 233,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 231,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "pe",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "info number",
              children: data.pe
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 236,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "label",
              children: "P/E"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 237,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 235,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_mui_material_Button__WEBPACK_IMPORTED_MODULE_8__["default"], {
            className: "watchlist_btn",
            size: "large",
            variant: "contained",
            startIcon: isInWatchList ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_mui_icons_material_Star__WEBPACK_IMPORTED_MODULE_11___default.a, {}, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 243,
              columnNumber: 44
            }, undefined) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_mui_icons_material_StarOutline__WEBPACK_IMPORTED_MODULE_10___default.a, {}, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 243,
              columnNumber: 59
            }, undefined),
            onClick: watchlistHander,
            children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "btn_text",
              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("span", {
                children: "Watchlist"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 247,
                columnNumber: 19
              }, undefined)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 246,
              columnNumber: 17
            }, undefined)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 239,
            columnNumber: 15
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 214,
          columnNumber: 13
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
          className: "trade-holdings-ratios",
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "trade",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("h2", {
              children: "Trade"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 253,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "price number field",
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["numberWithCurrencySymbol"])(data.currentPrice, currency)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 254,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "amount-container",
              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("input", {
                className: "quantity number",
                type: "number",
                min: "0",
                name: "quantity",
                value: quantity,
                onChange: quantityInputHandler,
                onFocus: quantityFocusHandler,
                onBlur: quantityBlurHandler
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 259,
                columnNumber: 19
              }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                className: "set-quantity",
                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                  className: "increase",
                  onClick: increase,
                  children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(react_icons_hi__WEBPACK_IMPORTED_MODULE_12__["HiPlusSm"], {
                    className: "set"
                  }, void 0, false, {
                    fileName: _jsxFileName,
                    lineNumber: 271,
                    columnNumber: 23
                  }, undefined)
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 270,
                  columnNumber: 21
                }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                  className: "decrease",
                  onClick: decrease,
                  children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(react_icons_hi__WEBPACK_IMPORTED_MODULE_12__["HiMinusSm"], {
                    className: "set"
                  }, void 0, false, {
                    fileName: _jsxFileName,
                    lineNumber: 274,
                    columnNumber: 23
                  }, undefined)
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 273,
                  columnNumber: 21
                }, undefined)]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 269,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 258,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "total_cost number field",
              children: quantity ? Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["numberWithCurrencySymbol"])(data.currentPrice * quantity, currency) : Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["numberWithCurrencySymbol"])(0, currency)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 278,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("p", {
              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("span", {
                className: "number",
                children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["percentNoPlus"])(data.currentPrice * quantity / accountValue * 100)
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 289,
                columnNumber: 19
              }, undefined), "\xA0 of account value"]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 288,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "buy_group group",
              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                className: "buy_max max number",
                children: ["max:\xA0", /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("span", {
                  className: "number",
                  children: parseInt(cash / data.currentPrice)
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 299,
                  columnNumber: 21
                }, undefined)]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 297,
                columnNumber: 19
              }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_mui_material_Button__WEBPACK_IMPORTED_MODULE_8__["default"], {
                onClick: buyHandler,
                size: "large",
                variant: "contained",
                className: " btn btn_buy",
                color: "success",
                children: "Buy"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 303,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 296,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "sell_group group",
              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                className: "sell_max max number",
                children: ["max:\xA0", /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("span", {
                  className: "number",
                  children: myQuantity
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 317,
                  columnNumber: 21
                }, undefined)]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 315,
                columnNumber: 19
              }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_mui_material_Button__WEBPACK_IMPORTED_MODULE_8__["default"], {
                size: "large",
                variant: "contained",
                className: "btn btn_sell",
                color: "error",
                onClick: sellHandler,
                children: "Sell"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 319,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 314,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 252,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "holdings",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("h2", {
              className: "title",
              children: "My Holdings"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 331,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "left field",
              children: "Quantity"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 332,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "right number field",
              children: myQuantity
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 333,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "left field",
              children: "Average"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 334,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "right number field",
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["usdNoPlus"])(myAverage)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 335,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "left field",
              children: "Value"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 336,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "right number field",
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["usdNoPlus"])(myQuantity * myAverage)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 337,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "left field",
              children: "Return, $"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 340,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("divf", {
              className: `right number field ${returnInDollars > 0 ? "positive" : returnInDollars < 0 ? "negative" : null}`,
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["usdPlus"])(returnInDollars)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 341,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "left field",
              children: "Return, %"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 352,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: `right number field ${returnProcent > 0 ? "positive" : returnProcent < 0 ? "negative" : null}`,
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["percent"])(returnProcent)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 353,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 330,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "ratios",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("h2", {
              children: "Ratios"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 366,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field left",
              children: "P/E"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 367,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field right number",
              children: [" ", data.pe]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 368,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field left",
              children: "EPS"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 369,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field right number",
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["numberWithCurrencySymbol"])(data.eps, currency)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 370,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field left",
              children: "ROA"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 373,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field right number",
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["percentNoPlus"])(data.roa)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 374,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field left",
              children: "ROE"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 377,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field right number",
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["percentNoPlus"])(data.roe)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 378,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field left",
              children: "D/E"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 381,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "field right number",
              children: Object(_utils_formatNumbersForUI__WEBPACK_IMPORTED_MODULE_15__["percentNoPlus"])(data.debtToEquity)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 383,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 365,
            columnNumber: 15
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 251,
          columnNumber: 13
        }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
          className: "analytics-earnings",
          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "analytics",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("h2", {
              children: "Recommendation"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 390,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "rating-recommendation",
              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                className: `rating number ${data.recommendationKey.replace(" ", "").toLowerCase()}`,
                children: data.recommendationMean
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 392,
                columnNumber: 19
              }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                  className: "recommendation",
                  children: `${data.recommendationKey}`
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 400,
                  columnNumber: 21
                }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                  className: "number_analyses",
                  children: `${data.numberOfAnalyses} analyses`
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 403,
                  columnNumber: 21
                }, undefined)]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 399,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 391,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
              className: "targets",
              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("h2", {
                children: "Price Targets"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 409,
                columnNumber: 19
              }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
                className: "target_slider",
                children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_components_TargetSlider__WEBPACK_IMPORTED_MODULE_9__["default"], {
                  low: data.targetLowPrice,
                  high: data.targetHighPrice,
                  mean: data.targetMeanPrice,
                  price: data.currentPrice
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 411,
                  columnNumber: 21
                }, undefined)
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 410,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 408,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 389,
            columnNumber: 15
          }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("div", {
            className: "earnings",
            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])("h2", {
              children: "Revenue/Earnings"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 421,
              columnNumber: 17
            }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_16__["jsxDEV"])(_components_EarningsChart__WEBPACK_IMPORTED_MODULE_4__["EarningsChart"], {
              currency: data.earningsCurrency,
              yearly: data.earningsYearly,
              quarterly: data.earningsQuarterly
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 423,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 420,
            columnNumber: 15
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 388,
          columnNumber: 13
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 213,
        columnNumber: 11
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 204,
      columnNumber: 9
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 202,
    columnNumber: 7
  }, undefined);
};

_s(SingleStock, "1SvDfEUz+bINx5nWZo+1m+AwHxo=", false, function () {
  return [react_router_dom__WEBPACK_IMPORTED_MODULE_1__["useParams"], _contexts_userContext__WEBPACK_IMPORTED_MODULE_13__["useUserContext"]];
});

_c = SingleStock;
/* harmony default export */ __webpack_exports__["default"] = (SingleStock);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].main`
  .main-container {
    margin: 2rem;
    display: grid;
    grid-template-columns: 3fr 5fr;
    column-gap: 1rem;
    .chart,
    .trade,
    .holdings,
    .ratios,
    .main_info {
      background: var(--card-gradient);
      border-radius: 1.5rem;
      box-shadow: 1px 1px 3px black;
      padding: 0.4rem 1rem;
    }
    .number {
      font-family: var(--ff-numbers);
      letter-spacing: 1px;
    }
    .chart-description {
      .chart {
        min-width: 32rem;
        height: 34.6rem;
        margin-bottom: 2rem;
      }
      .description {
        margin-top: 2rem;
        height: 28rem;
        overflow-y: scroll;

        .logo {
          float: left;
          margin-right: 2rem;
          shape-outside: circle(50% at 50% 50%);
        }
        .description_content {
          padding: 1.8rem 1rem;
          text-align: justify;
          &::first-letter {
            font-family: "Dancing Script", cursive;
            font-style: italic;
            font-size: 3rem;
            line-height: 0px;
          }
        }
      }
      .scrollbar::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);

        border: 1px solid black;
        border-radius: 10px;
      }

      .scrollbar::-webkit-scrollbar {
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);

        width: 10px;
        border-radius: 10px;
      }

      .scrollbar::-webkit-scrollbar-thumb {
        border-radius: 10px;
        background-color: var(--clr-primary);
      }
    }
    .main {
      .main_info {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: none;

        .label {
          font-size: 1.3rem;
        }
        .country,
        .cap,
        .name-industry,
        .pe {
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          margin: 0.5rem 0 0.3rem;
        }
        .pe-label {
          @media (max-width: 920px) {
            & {
              display: none;
            }
          }
        }

        .logo-name-industry {
          display: flex;

          .logo {
            height: 6rem;
            margin-right: 1rem;
          }
          .name {
            font-size: 2.5rem;
            max-width: 22rem;
          }
        }
        .info {
          font-size: 2rem;
        }

        .watchlist_btn {
          align-self: center;
          font-size: 1.7rem;
          padding: 0.5rem 0.5rem;
          line-height: 1.5rem;
          text-transform: none;
          /* padding: 0.7rem 1rem; */
          .MuiSvgIcon-root {
            font-size: 2.7rem;
          }
          span {
            margin: 0;
          }
          @media (max-width: 1100px) {
            span {
              display: block;
            }
          }
        }
      }

      .trade-holdings-ratios {
        margin-top: 1rem;
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        column-gap: 1rem;
        justify-content: space-between;
        text-align: center;
        h2 {
          margin-top: 1rem;
          font-size: 2rem;
          grid-column: 1/3;
          font-weight: bolder;
          letter-spacing: 2px;
        }
        .field {
          background-color: var(--clr-secondary);
          border-radius: 15px;
          padding: 0.5rem 1rem;
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: 2rem;
        }

        .trade {
          padding: 0rem 1rem 1rem;
          display: grid;
          grid-template-columns: 1fr 1fr;
          grid-template-rows: 4.7rem 5rem 7rem;
          column-gap: 1rem;

          .price {
            /* width: 12rem; */
          }
          .amount-container {
            display: flex;
            justify-content: space-around;
            background-color: var(--clr-secondary);
            border-radius: 15px;
            .quantity {
              &::-webkit-inner-spin-button {
                -webkit-appearance: none;
              }
              padding: 0;
              color: var(--clr-primary);
              font-size: 2.3rem;
              text-align: center;
              width: 50%;
              border: none;
              border-top-left-radius: 15px;
              border-bottom-left-radius: 15px;
              outline: none;
              /* border: 1px solid var(--clr-blue); */

              font-weight: bold;
            }
            .set-quantity {
              width: 50%;
              display: flex;
              flex-direction: column;
              /* justify-content: space-between; */
              cursor: pointer;
              line-height: 0;
              .increase {
                height: 50%;
                border-bottom: 1px solid var(--fc-disabled);
              }

              .set {
                position: relative;
                top: 0.3rem;
                text-align: center;
                cursor: pointer;
                font-size: 2rem;
                font-weight: bold;
                line-height: 0;
                padding-right: 2px;
              }
            }
          }
          .total_cost {
            margin-top: 2rem;
            grid-column: 1/3;
            letter-spacing: 2px;
            font-weight: bolder;
          }
          /* } */
          p {
            color: var(--fc-disabled);
            font-size: 1.3rem;
            grid-column: 1/3;
          }

          .max {
            margin-top: 1rem;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            color: var(--fc-disabled);
            padding-bottom: 1px;
            position: relative;
            top: 3px;
            z-index: 2;
            span {
              font-size: 1.5rem;
            }
          }
          .group {
            margin-bottom: 0.5rem;
          }
          .buy_max {
            background-color: #1b4905;
          }
          .sell_max {
            background-color: #940e0e;
          }

          .btn {
            font-size: 1.5rem;
            width: 100%;
          }
        }
        .holdings {
          font-size: 1rem;
          display: grid;
          grid-template-columns: 2fr 1fr;
          grid-template-rows: repeat(min-content, 6);
          column-gap: 1rem;
          row-gap: 1rem;
          padding: 0 1rem 1.5rem;
          .title {
            /* margin-bottom: -10px; */
          }
          .left {
            justify-content: start;
            font-size: 1.6rem;
          }
          .right {
            /* justify-content: end; */
            font-size: 1.6rem;
            &.positive {
              font-size: 1.7rem;

              color: #afa;
              letter-spacing: 1px;
              text-shadow: var(--text-shadow);
            }
            &.negative {
              font-size: 1.8rem;

              letter-spacing: 1px;
              color: #fa5555;
              text-shadow: var(--text-shadow);
            }
          }
        }
        .ratios {
          display: grid;
          grid-template-columns: 1fr 1fr;
          grid-template-rows: repeat(1fr, 5);
          column-gap: 1rem;
          row-gap: 1rem;
          padding: 0 1rem 1.5rem;
          .left {
            justify-content: start;
            font-size: 1.6rem;
          }
          .right {
            /* justify-content: end; */
            font-size: 1.6rem;
          }
          li {
            list-style: none;
            text-align: left;
          }
        }
      }
      .analytics-earnings {
        display: grid;
        column-gap: 1rem;
        grid-template-columns: 50% 50%;
        margin-right: 3rem;
        margin-top: 2rem;

        h2 {
          font-size: 2rem;
          font-family: "Raleway";
          font-weight: bolder;
          letter-spacing: 2px;
          margin: 1rem 2rem;
        }

        .analytics {
          padding: 0rem 3rem;
          .rating-recommendation {
            margin: 2rem 0 0;
            display: flex;
            justify-content: start;
            align-items: center;
            .rating {
              border-radius: 15px;
              padding: 0.7rem 1.5rem;
              font-size: 2.7rem;
              letter-spacing: 2px;
              font-weight: bolder;
              margin: 0 2rem;
              &.strongbuy {
                background-color: #256506;
              }
              &.buy {
                background-color: #348f39;
              }
              &.hold {
                background-color: #f9cf11;
              }
              &.sell {
                background-color: #d32f2f;
              }
            }
            .recommendation {
              letter-spacing: 1px;
              font-weight: bolder;
              font-size: 2.3rem;
              font-family: var(--ff-tertiary);
            }
            .number_analyses {
              font-family: var(--ff-numbers);
            }
          }
          .targets {
            h2 {
              margin: 4rem 2rem 2rem;
            }
            .target_slider {
              margin-left: 1.5rem;
              width: 90%;
            }
          }
        }
        .earnings {
          margin-right: -1rem;
          height: 22rem;
        }
      }
    }
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "SingleStock");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/pages/Stocks.js":
/*!*****************************!*\
  !*** ./src/pages/Stocks.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _components_SearchStocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/SearchStocks */ "./src/components/SearchStocks.js");
/* harmony import */ var _components_Table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Table */ "./src/components/Table.js");
/* harmony import */ var _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/fetchOptions */ "./src/utils/fetchOptions.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\pages\\Stocks.js",
    _s = __webpack_require__.$Refresh$.signature();








const Stocks = () => {
  _s();

  const [content, setContent] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({
    list: _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_4__["popularStocks"]
  });
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(Wrapper, {
    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("div", {
      className: "buttons_container",
      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("button", {
        className: `btn ${content.list ? "active" : null}`,
        onClick: () => setContent({
          list: _utils_fetchOptions__WEBPACK_IMPORTED_MODULE_4__["popularStocks"]
        }),
        children: "Popular Stocks"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 13,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("button", {
        className: `btn ${content.type === "techGrowth" ? "active" : null}`,
        onClick: () => setContent({
          type: "techGrowth"
        }),
        children: "Technology & Growth"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 19,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("button", {
        className: `btn ${content.type === "undervaluedGrowth" ? "active" : null}`,
        onClick: () => setContent({
          type: "undervaluedGrowth"
        }),
        children: "Undervalued & Growth"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 25,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("button", {
        className: `btn ${content.type === "undervaluedLargeCap" ? "active" : null}`,
        onClick: () => setContent({
          type: "undervaluedLargeCap"
        }),
        children: "Undervalued & LargeCap"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 33,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("button", {
        className: `btn ${content.type === "dayGainers" ? "active" : null}`,
        onClick: () => setContent({
          type: "dayGainers"
        }),
        children: "Day Gainers"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 9
      }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])("button", {
        className: `btn ${content.type === "dayLosers" ? "active" : null}`,
        onClick: () => setContent({
          type: "dayLosers"
        }),
        children: "Day Losers"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 47,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 12,
      columnNumber: 7
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxDEV"])(_components_Table__WEBPACK_IMPORTED_MODULE_3__["default"], { ...content
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 11,
    columnNumber: 5
  }, undefined);
};

_s(Stocks, "Rw7mQ+XxKMtrgGjZ7IF/NhoNEvc=");

_c = Stocks;
/* harmony default export */ __webpack_exports__["default"] = (Stocks);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div`
  & {
    margin-top: 3rem;
  }
  .buttons_container {
    padding-left: 3rem;
    display: flex;
    justify-content: space-around;
    max-width: 120rem;
  }
  .btn {
    border: 2px solid #afa;
    font-size: 1.8rem;
    margin-right: 1rem;
    &:hover {
      background-color: #afa;
      color: var(--clr-primary);
    }
  }
`;
_c2 = Wrapper;

var _c, _c2;

__webpack_require__.$Refresh$.register(_c, "Stocks");
__webpack_require__.$Refresh$.register(_c2, "Wrapper");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/pages/Watchlist.js":
/*!********************************!*\
  !*** ./src/pages/Watchlist.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_userContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/userContext */ "./src/contexts/userContext.js");
/* harmony import */ var _components_Table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Table */ "./src/components/Table.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

var _jsxFileName = "D:\\MyCode\\Investify\\src\\pages\\Watchlist.js",
    _s = __webpack_require__.$Refresh$.signature();







const Watchlist = () => {
  _s();

  const {
    allUsers,
    currentUser
  } = Object(_contexts_userContext__WEBPACK_IMPORTED_MODULE_1__["useUserContext"])();
  const {
    watchlist
  } = (allUsers === null || allUsers === void 0 ? void 0 : allUsers.find(user => user._id === currentUser._id)) || {};
  if (!watchlist) return null;
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])("div", {
    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])("h1", {
      children: "Watchlist"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 13,
      columnNumber: 7
    }, undefined), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__["jsxDEV"])(_components_Table__WEBPACK_IMPORTED_MODULE_2__["default"], {
      list: watchlist.join(",")
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 14,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 12,
    columnNumber: 5
  }, undefined);
};

_s(Watchlist, "7RfxTGO51GwA7MqRvuBZRc+dN0k=", false, function () {
  return [_contexts_userContext__WEBPACK_IMPORTED_MODULE_1__["useUserContext"]];
});

_c = Watchlist;
/* harmony default export */ __webpack_exports__["default"] = (Watchlist);
const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div``;

var _c;

__webpack_require__.$Refresh$.register(_c, "Watchlist");

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/reducers/user_reducer.js":
/*!**************************************!*\
  !*** ./src/reducers/user_reducer.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony import */ var _utils_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/actions */ "./src/utils/actions.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);



const user_reducer = (state, action) => {
  if (action.type === _utils_actions__WEBPACK_IMPORTED_MODULE_0__["GET_INITIAL_DATA"]) {
    return {
      currentUser: {
        _id: action.payload.currentUser._id,
        userName: action.payload.currentUser.userName
      },
      allPrices: action.payload.allPrices,
      allUsers: action.payload.allUsers.map(user => {
        return { ...user,
          accountValue: parseFloat((user.cash + user.holdings.reduce((acc, stock) => {
            return acc = acc + stock.quantity * action.payload.allPrices.find(company => company.symbol === stock.symbol).price;
          }, 0)).toFixed(2))
        };
      })
    };
  }

  if (action.type === _utils_actions__WEBPACK_IMPORTED_MODULE_0__["BUY_STOCK"]) {
    const {
      symbol,
      quantity,
      price
    } = action.payload;
    const foundStock = state.allUsers.find(user => user._id === state.currentUser._id).holdings.find(stock => stock.symbol === symbol);

    if (foundStock) {
      foundStock.average = parseFloat(((foundStock.quantity * foundStock.average + quantity * price) / (foundStock.quantity + quantity)).toFixed(2));
      foundStock.quantity += quantity;
      foundStock.purchaseDates = foundStock.purchaseDates.concat({
        timestamp: Date.now(),
        quantity,
        price
      });
      return { ...state,
        allUsers: state.allUsers.map(user => {
          if (user._id !== state.currentUser._id) {
            return user;
          }

          return { ...user,
            holdings: user.holdings.map(stock => {
              if (stock.symbol === symbol) return foundStock;
              return stock;
            }),
            cash: parseFloat((user.cash - quantity * price).toFixed(2))
          };
        }),
        allPrices: state.allPrices.map(stock => {
          if (stock.symbol === symbol) {
            return { ...stock,
              price
            };
          }

          return stock;
        })
      };
    } else {
      return { ...state,
        allUsers: state.allUsers.map(user => {
          if (user._id !== state.currentUser._id) {
            return user;
          }

          return { ...user,
            holdings: [...user.holdings, {
              symbol,
              quantity,
              average: price,
              purchaseDates: [{
                timestamp: Date.now(),
                quantity,
                price
              }]
            }],
            cash: parseFloat((user.cash - quantity * price).toFixed(2))
          };
        }),
        allPrices: state.allPrices.concat({
          symbol,
          price
        })
      };
    }
  }

  if (action.type === _utils_actions__WEBPACK_IMPORTED_MODULE_0__["SELL_STOCK"]) {
    const {
      symbol,
      quantity,
      price
    } = action.payload;
    const foundStock = state.allUsers.find(user => user._id === state.currentUser._id).holdings.find(stock => stock.symbol === symbol);
    foundStock.quantity -= quantity;

    if (foundStock.quantity === 0) {
      return { ...state,
        allUsers: state.allUsers.map(user => {
          if (user._id !== state.currentUser._id) {
            return user;
          }

          return { ...user,
            holdings: user.holdings.filter(stock => stock.symbol !== symbol),
            cash: parseFloat((user.cash + quantity * price).toFixed(2))
          };
        })
      };
    }

    return { ...state,
      allUsers: state.allUsers.map(user => {
        if (user._id !== state.currentUser._id) {
          return user;
        }

        return { ...user,
          holdings: user.holdings.map(stock => {
            if (stock.symbol === symbol) return foundStock;
            return stock;
          }),
          cash: parseFloat((user.cash + quantity * price).toFixed(2))
        };
      })
    };
  }

  if (action.type === _utils_actions__WEBPACK_IMPORTED_MODULE_0__["EDIT_NAME"]) {
    console.log(action.payload);
    return { ...state,
      currentUser: { ...state.currentUser,
        userName: action.payload
      },
      allUsers: state.allUsers.map(user => {
        if (user._id !== state.currentUser._id) {
          return user;
        }

        return { ...user,
          userName: action.payload
        };
      })
    };
  }

  if (action.type === _utils_actions__WEBPACK_IMPORTED_MODULE_0__["ADD_TO_WATCHLILST"]) {
    return { ...state,
      allUsers: state.allUsers.map(user => {
        if (user._id !== state.currentUser._id) {
          return user;
        }

        return { ...user,
          watchlist: [...user.watchlist, action.payload]
        };
      })
    };
  }

  if (action.type === _utils_actions__WEBPACK_IMPORTED_MODULE_0__["DELETE_FROM_WATCHLIST"]) {
    return { ...state,
      allUsers: state.allUsers.map(user => {
        if (user._id !== state.currentUser._id) {
          return user;
        }

        return { ...user,
          watchlist: user.watchlist.filter(symbol => symbol !== action.payload)
        };
      })
    };
  }
};

/* harmony default export */ __webpack_exports__["default"] = (user_reducer);

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/utils/actions.js":
/*!******************************!*\
  !*** ./src/utils/actions.js ***!
  \******************************/
/*! exports provided: BUY_STOCK, SELL_STOCK, ADD_TO_WATCHLILST, DELETE_FROM_WATCHLIST, SET_ACCOUNT_VALUES, GET_USER_DATA, GET_ALL_USERS, GET_ALL_PRICES, GET_INITIAL_DATA, EDIT_NAME */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BUY_STOCK", function() { return BUY_STOCK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELL_STOCK", function() { return SELL_STOCK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ADD_TO_WATCHLILST", function() { return ADD_TO_WATCHLILST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DELETE_FROM_WATCHLIST", function() { return DELETE_FROM_WATCHLIST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_ACCOUNT_VALUES", function() { return SET_ACCOUNT_VALUES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GET_USER_DATA", function() { return GET_USER_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GET_ALL_USERS", function() { return GET_ALL_USERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GET_ALL_PRICES", function() { return GET_ALL_PRICES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GET_INITIAL_DATA", function() { return GET_INITIAL_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EDIT_NAME", function() { return EDIT_NAME; });
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

// export const
const BUY_STOCK = "BUY_STOCK";
const SELL_STOCK = "SELL_STOCK";
const ADD_TO_WATCHLILST = "ADD_TO_WATCHLILST";
const DELETE_FROM_WATCHLIST = "DELETE_FROM_WATCHLIST";
const SET_ACCOUNT_VALUES = "SET_ACCOUNT_VALUES";
const GET_USER_DATA = "GET_USER_DATA";
const GET_ALL_USERS = "GET_ALL_USERS";
const GET_ALL_PRICES = "GET_ALL_PRICES";
const GET_INITIAL_DATA = "GET_INITIAL_DATA";
const EDIT_NAME = "EDIT_NAME";

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/utils/defineClass.js":
/*!**********************************!*\
  !*** ./src/utils/defineClass.js ***!
  \**********************************/
/*! exports provided: defineClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defineClass", function() { return defineClass; });
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

const defineClass = value => {
  return value === 0 ? null : value > 0 ? "positive" : "negative";
};

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/utils/fetchOptions.js":
/*!***********************************!*\
  !*** ./src/utils/fetchOptions.js ***!
  \***********************************/
/*! exports provided: popularStocks, popularStocksDescription, rapidApiKey, finhubApiKey, urlSymbolLookup, urlCompanyProfile, mboumApiKey, urlMboum, urlYahoo, optionsYahoo, optionsTradier, optionsMboum, options, urlDayLosers, urlTechGrowth, urlDayGainers, urlUndervaluedLargeCap, urlUndervaluedGrowth, specilStocksOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "popularStocks", function() { return popularStocks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "popularStocksDescription", function() { return popularStocksDescription; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rapidApiKey", function() { return rapidApiKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "finhubApiKey", function() { return finhubApiKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlSymbolLookup", function() { return urlSymbolLookup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlCompanyProfile", function() { return urlCompanyProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mboumApiKey", function() { return mboumApiKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlMboum", function() { return urlMboum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlYahoo", function() { return urlYahoo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optionsYahoo", function() { return optionsYahoo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optionsTradier", function() { return optionsTradier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optionsMboum", function() { return optionsMboum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "options", function() { return options; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlDayLosers", function() { return urlDayLosers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlTechGrowth", function() { return urlTechGrowth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlDayGainers", function() { return urlDayGainers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlUndervaluedLargeCap", function() { return urlUndervaluedLargeCap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "urlUndervaluedGrowth", function() { return urlUndervaluedGrowth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "specilStocksOptions", function() { return specilStocksOptions; });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);


const popularStocks = "AAPL,MSFT,BKNG, GOOG,AMZN,FB,BRK-B,TSLA,NVDA,V,BABA,JNJ,WMT,MA,NSRGY,DIS,ADBE,PYPL,NFLX,NKE,CSCO,KO,PEP,INTC,RYDAF,SHOP,MCD,TMUS,AMD,SONY,SBUX,IBM,OGZPY,SBRCY,ABNB,UBER,DELL,ZM,TWTR,ADDDF,HMC,SPOT,HPQ,MDB,U,EA,YNDX,CAJ,PINS,SNAP";
const popularStocksDescription = "Famous companies we face every day";
const rapidApiKey = "faa3f13619mshc63ad9bee129027p1b67cejsn3ab2f74d41ee";
const finhubApiKey = "c5ofrbaad3i9ao07nlbg";
const urlSymbolLookup = "https://finnhub.io/api/v1/search?q=";
const urlCompanyProfile = "https://finnhub.io/api/v1/stock/profile2?symbol=";
const mboumApiKey = "2367ce770fmsh40b295039b9491dp16de7ajsn3c24267be87a";
const urlMboum = "https://mboum-finance.p.rapidapi.com/mo/module/";
const urlYahoo = "https://yh-finance.p.rapidapi.com/market/v2/get-quotes";
const optionsYahoo = list => {
  return {
    params: {
      region: "US",
      symbols: list
    },
    headers: {
      "x-rapidapi-key": mboumApiKey,
      "x-rapidapi-host": "yh-finance.p.rapidapi.com"
    }
  };
};
const optionsTradier = symbolsString => {
  return {
    method: "GET",
    url: "https://sandbox.tradier.com/v1/markets/quotes",
    params: {
      symbols: symbolsString
    },
    headers: {
      Authorization: "Bearer W13Ww2MP1RJw8PhJf9NspGc4RD5P",
      Accept: "application/json"
    }
  };
};
const optionsMboum = symbol => {
  return {
    params: {
      symbol,
      module: "asset-profile,financial-data,earnings"
    },
    headers: {
      "x-rapidapi-host": "mboum-finance.p.rapidapi.com",
      "x-rapidapi-key": rapidApiKey
    }
  };
};
const options = {
  headers: {
    "Content-Type": "application/json"
  }
};
const urlDayLosers = "https://mboum-finance.p.rapidapi.com/co/collections/day_losers";
const urlTechGrowth = "https://mboum-finance.p.rapidapi.com/co/collections/growth_technology_stocks";
const urlDayGainers = "https://mboum-finance.p.rapidapi.com/co/collections/day_gainers";
const urlUndervaluedLargeCap = "https://mboum-finance.p.rapidapi.com/co/collections/undervalued_large_caps";
const urlUndervaluedGrowth = " https://mboum-finance.p.rapidapi.com/co/collections/undervalued_growth_stocks";
const specilStocksOptions = {
  params: {
    start: "0"
  },
  headers: {
    "x-rapidapi-key": rapidApiKey,
    "x-rapidapi-host": "mboum-finance.p.rapidapi.com"
  }
};

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/utils/formatData.js":
/*!*********************************!*\
  !*** ./src/utils/formatData.js ***!
  \*********************************/
/*! exports provided: formatDataList, formatDataDayMovers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDataList", function() { return formatDataList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDataDayMovers", function() { return formatDataDayMovers; });
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

const formatDataList = res => {
  return res.data.quoteResponse.result.map(stock => {
    var _stock$regularMarketC;

    return {
      // ...stock,
      symbol: stock.symbol,
      regularMarketPrice: stock.regularMarketPrice,
      fiftyTwoWeekHigh: stock.fiftyTwoWeekHigh,
      fiftyTwoWeekLow: stock.fiftyTwoWeekLow,
      shortName: formatName(stock),
      marketCap: formatMarketCap(stock),
      marketCaptoSort: stock.marketCap,
      regularMarketChangePercent: stock === null || stock === void 0 ? void 0 : (_stock$regularMarketC = stock.regularMarketChangePercent) === null || _stock$regularMarketC === void 0 ? void 0 : _stock$regularMarketC.toFixed(2),
      priceRelativeToYear: priceRelativeToYear(stock)
    };
  });
};
const formatDataDayMovers = res => {
  return res.data.quotes.map(stock => {
    var _stock$regularMarketC2;

    return {
      // ...stock,
      symbol: stock.symbol,
      regularMarketPrice: stock.regularMarketPrice,
      fiftyTwoWeekHigh: stock.fiftyTwoWeekHigh,
      fiftyTwoWeekLow: stock.fiftyTwoWeekLow,
      shortName: formatName(stock),
      marketCap: formatMarketCap(stock),
      marketCaptoSort: stock.marketCap,
      regularMarketChangePercent: stock === null || stock === void 0 ? void 0 : (_stock$regularMarketC2 = stock.regularMarketChangePercent) === null || _stock$regularMarketC2 === void 0 ? void 0 : _stock$regularMarketC2.toFixed(2),
      priceRelativeToYear: priceRelativeToYear(stock)
    };
  });
}; // const allNeedData = {
//   // shortName,
//   fiftyTwoWeekHigh: high,
//   fiftyTwoWeekLow: low,
//   // marketCap,
//   regularMarketPrice: price,
//   // regularMarketChangePercent: change,
//   symbol}

const formatName = stock => {
  if (!stock.shortName) {
    return;
  }

  let stockName = stock.shortName.slice(0, stock.shortName.indexOf(" ")).toLowerCase().replace(/[A-z]/, stock.shortName[0].toUpperCase()).replace(",", "");

  switch (stock.symbol) {
    case "AMZN":
      stockName = "Amazon";
      break;

    case "RYDAF":
      stockName = "Shell";
      break;

    case "AMD":
      stockName = "AMD";
      break;

    case "EA":
      stockName = "EA";
      break;

    case "DIS":
      stockName = "Disney";
      break;

    case "JNJ":
      stockName = "Johnson";
      break;

    case "IBM":
      stockName = "IBM";
      break;

    case "NVID":
      stockName = "NVIDIA";
      break;

    case "HPQ":
      stockName = "HP";
      break;

    case "MDB":
      stockName = "MongoDB";
      break;

    case "JNJ":
      stockName = "Johnson";
      break;

    case "EA":
      stockName = "EA";
      break;

    default:
      break;
  }

  return stockName;
};

const formatMarketCap = stock => {
  if (!stock.marketCap) return;

  if (`${stock.marketCap}`.length >= 13) {
    return `${(stock.marketCap / 10 ** 12).toFixed(3)} T`;
  } else {
    return `${(stock.marketCap / 10 ** 9).toFixed(2)} B`;
  }
};

const priceRelativeToYear = stock => {
  return ((stock === null || stock === void 0 ? void 0 : stock.regularMarketPrice) - (stock === null || stock === void 0 ? void 0 : stock.fiftyTwoWeekLow)) / ((stock === null || stock === void 0 ? void 0 : stock.fiftyTwoWeekHigh) - (stock === null || stock === void 0 ? void 0 : stock.regularMarketPrice)) || null;
};

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/utils/formatNumbersForUI.js":
/*!*****************************************!*\
  !*** ./src/utils/formatNumbersForUI.js ***!
  \*****************************************/
/*! exports provided: usdPlus, usdNoPlus, numberWithCurrencySymbol, percent, percentNoPlus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "usdPlus", function() { return usdPlus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "usdNoPlus", function() { return usdNoPlus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberWithCurrencySymbol", function() { return numberWithCurrencySymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "percent", function() { return percent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "percentNoPlus", function() { return percentNoPlus; });
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

const usdPlus = number => {
  if (isNaN(number)) return number;
  const options = {
    style: "currency",
    currency: "USD",
    signDisplay: "exceptZero"
  };
  return new Intl.NumberFormat("us-US", options).format(number);
};
const usdNoPlus = number => {
  if (isNaN(number)) return number;
  const options = {
    style: "currency",
    currency: "USD"
  };
  return new Intl.NumberFormat("us-US", options).format(number);
};
const numberWithCurrencySymbol = (number, currency) => {
  if (isNaN(number) || currency === "N/A") return number;
  const options = {
    style: "currency",
    currency
  };
  return new Intl.NumberFormat("us-US", options).format(number);
};
const percent = number => {
  if (isNaN(number)) return number;

  if (number < 0.01 && number > 0) {
    number = 0.01;
  }

  const options = {
    style: "percent",
    signDisplay: "exceptZero",
    minimumFractionDigits: 2
  };
  return new Intl.NumberFormat("en-GB", options).format(number / 100);
};
const percentNoPlus = number => {
  if (isNaN(number)) return number;
  const options = {
    style: "percent",
    minimumFractionDigits: 2
  };
  return new Intl.NumberFormat("en-GB", options).format(number / 100);
};

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ "./src/utils/formatSingleCompany.js":
/*!******************************************!*\
  !*** ./src/utils/formatSingleCompany.js ***!
  \******************************************/
/*! exports provided: formatSingleCompany */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__react_refresh_utils__, __react_refresh_error_overlay__) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatSingleCompany", function() { return formatSingleCompany; });
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");
__webpack_require__.$Refresh$.setup(module.i);

const formatSingleCompany = allData => {
  var _allData$0$data, _allData$0$data2, _allData$0$data3, _allData$1$data, _allData$1$data$asset, _allData$1$data2, _allData$1$data2$asse, _allData$1$data3, _allData$1$data3$asse, _allData$1$data4, _allData$1$data4$earn, _allData$1$data5, _allData$1$data5$earn, _allData$1$data5$earn2, _allData$1$data6, _allData$1$data6$earn, _allData$1$data6$earn2, _allData$1$data7, _allData$1$data7$earn, _allData$2$data, _allData$2$data$quote, _allData$2$data$quote2, _allData$1$data8, _allData$1$data8$fina, _allData$1$data8$fina2, _allData$1$data9, _allData$1$data9$fina, _allData$1$data10, _allData$1$data10$fin, _allData$1$data11, _allData$1$data11$fin, _allData$1$data11$fin2, _allData$1$data12, _allData$1$data12$fin, _allData$1$data12$fin2, _allData$1$data13, _allData$1$data13$fin, _allData$1$data13$fin2, _allData$1$data14, _allData$1$data14$fin, _allData$1$data14$fin2, _allData$1$data15, _allData$1$data15$fin, _allData$1$data15$fin2, _allData$1$data16, _allData$1$data16$fin, _allData$1$data16$fin2, _allData$1$data17, _allData$1$data17$fin, _allData$1$data17$fin2, _allData$1$data18, _allData$1$data18$fin, _allData$1$data18$fin2, _allData$1$data$earni, _allData$1$data$earni2, _allData$1$data$earni3, _allData$, _allData$$data, _allData$$data$financ, _allData$$data$financ2;

  let data = {
    name: ((_allData$0$data = allData[0].data) === null || _allData$0$data === void 0 ? void 0 : _allData$0$data.name) || "N/A",
    logo: (_allData$0$data2 = allData[0].data) === null || _allData$0$data2 === void 0 ? void 0 : _allData$0$data2.logo,
    marketCap: ((_allData$0$data3 = allData[0].data) === null || _allData$0$data3 === void 0 ? void 0 : _allData$0$data3.marketCapitalization) || "N/A",
    // url: allData[0].data?.weburl,
    industry: ((_allData$1$data = allData[1].data) === null || _allData$1$data === void 0 ? void 0 : (_allData$1$data$asset = _allData$1$data.assetProfile) === null || _allData$1$data$asset === void 0 ? void 0 : _allData$1$data$asset.industry) || "N/A",
    country: ((_allData$1$data2 = allData[1].data) === null || _allData$1$data2 === void 0 ? void 0 : (_allData$1$data2$asse = _allData$1$data2.assetProfile) === null || _allData$1$data2$asse === void 0 ? void 0 : _allData$1$data2$asse.country) || "N/A",
    description: ((_allData$1$data3 = allData[1].data) === null || _allData$1$data3 === void 0 ? void 0 : (_allData$1$data3$asse = _allData$1$data3.assetProfile) === null || _allData$1$data3$asse === void 0 ? void 0 : _allData$1$data3$asse.longBusinessSummary) || "N/A",
    earningsCurrency: (_allData$1$data4 = allData[1].data) === null || _allData$1$data4 === void 0 ? void 0 : (_allData$1$data4$earn = _allData$1$data4.earnings) === null || _allData$1$data4$earn === void 0 ? void 0 : _allData$1$data4$earn.financialCurrency,
    earningsYearly: (_allData$1$data5 = allData[1].data) === null || _allData$1$data5 === void 0 ? void 0 : (_allData$1$data5$earn = _allData$1$data5.earnings) === null || _allData$1$data5$earn === void 0 ? void 0 : (_allData$1$data5$earn2 = _allData$1$data5$earn.financialsChart) === null || _allData$1$data5$earn2 === void 0 ? void 0 : _allData$1$data5$earn2.yearly,
    earningsQuarterly: (_allData$1$data6 = allData[1].data) === null || _allData$1$data6 === void 0 ? void 0 : (_allData$1$data6$earn = _allData$1$data6.earnings) === null || _allData$1$data6$earn === void 0 ? void 0 : (_allData$1$data6$earn2 = _allData$1$data6$earn.financialsChart) === null || _allData$1$data6$earn2 === void 0 ? void 0 : _allData$1$data6$earn2.quarterly,
    earnings: (_allData$1$data7 = allData[1].data) === null || _allData$1$data7 === void 0 ? void 0 : (_allData$1$data7$earn = _allData$1$data7.earnings) === null || _allData$1$data7$earn === void 0 ? void 0 : _allData$1$data7$earn.earningsChart,
    // currentQuarterEstimate:
    //   allData[1].data?.earnings?.earningsChart?.currentQuarterEstimate?.raw,
    // currentQuarterEstimateDate:
    //   allData[1].data?.earnings?.earningsChart?.currentQuarterEstimateDate,
    // currentQuarterEstimateYear:
    //   allData[1].data?.earnings?.earningsChart?.currentQuarterEstimateYear,
    currentPrice: ((_allData$2$data = allData[2].data) === null || _allData$2$data === void 0 ? void 0 : (_allData$2$data$quote = _allData$2$data.quotes) === null || _allData$2$data$quote === void 0 ? void 0 : (_allData$2$data$quote2 = _allData$2$data$quote.quote) === null || _allData$2$data$quote2 === void 0 ? void 0 : _allData$2$data$quote2.last) || ((_allData$1$data8 = allData[1].data) === null || _allData$1$data8 === void 0 ? void 0 : (_allData$1$data8$fina = _allData$1$data8.financialData) === null || _allData$1$data8$fina === void 0 ? void 0 : (_allData$1$data8$fina2 = _allData$1$data8$fina.currentPrice) === null || _allData$1$data8$fina2 === void 0 ? void 0 : _allData$1$data8$fina2.raw) || "N/A",
    priceCurrency: ((_allData$1$data9 = allData[1].data) === null || _allData$1$data9 === void 0 ? void 0 : (_allData$1$data9$fina = _allData$1$data9.financialData) === null || _allData$1$data9$fina === void 0 ? void 0 : _allData$1$data9$fina.financialCurrency) || "N/A",
    recommendationKey: ((_allData$1$data10 = allData[1].data) === null || _allData$1$data10 === void 0 ? void 0 : (_allData$1$data10$fin = _allData$1$data10.financialData) === null || _allData$1$data10$fin === void 0 ? void 0 : _allData$1$data10$fin.recommendationKey) || "N/A",
    recommendationMean: ((_allData$1$data11 = allData[1].data) === null || _allData$1$data11 === void 0 ? void 0 : (_allData$1$data11$fin = _allData$1$data11.financialData) === null || _allData$1$data11$fin === void 0 ? void 0 : (_allData$1$data11$fin2 = _allData$1$data11$fin.recommendationMean) === null || _allData$1$data11$fin2 === void 0 ? void 0 : _allData$1$data11$fin2.raw) || "N/A",
    targetHighPrice: ((_allData$1$data12 = allData[1].data) === null || _allData$1$data12 === void 0 ? void 0 : (_allData$1$data12$fin = _allData$1$data12.financialData) === null || _allData$1$data12$fin === void 0 ? void 0 : (_allData$1$data12$fin2 = _allData$1$data12$fin.targetHighPrice) === null || _allData$1$data12$fin2 === void 0 ? void 0 : _allData$1$data12$fin2.raw) || "N/A",
    targetLowPrice: ((_allData$1$data13 = allData[1].data) === null || _allData$1$data13 === void 0 ? void 0 : (_allData$1$data13$fin = _allData$1$data13.financialData) === null || _allData$1$data13$fin === void 0 ? void 0 : (_allData$1$data13$fin2 = _allData$1$data13$fin.targetLowPrice) === null || _allData$1$data13$fin2 === void 0 ? void 0 : _allData$1$data13$fin2.raw) || "N/A",
    targetMeanPrice: ((_allData$1$data14 = allData[1].data) === null || _allData$1$data14 === void 0 ? void 0 : (_allData$1$data14$fin = _allData$1$data14.financialData) === null || _allData$1$data14$fin === void 0 ? void 0 : (_allData$1$data14$fin2 = _allData$1$data14$fin.targetMeanPrice) === null || _allData$1$data14$fin2 === void 0 ? void 0 : _allData$1$data14$fin2.raw) || "N/A",
    numberOfAnalyses: ((_allData$1$data15 = allData[1].data) === null || _allData$1$data15 === void 0 ? void 0 : (_allData$1$data15$fin = _allData$1$data15.financialData) === null || _allData$1$data15$fin === void 0 ? void 0 : (_allData$1$data15$fin2 = _allData$1$data15$fin.numberOfAnalystOpinions) === null || _allData$1$data15$fin2 === void 0 ? void 0 : _allData$1$data15$fin2.raw) || "N/A",
    roa: ((_allData$1$data16 = allData[1].data) === null || _allData$1$data16 === void 0 ? void 0 : (_allData$1$data16$fin = _allData$1$data16.financialData) === null || _allData$1$data16$fin === void 0 ? void 0 : (_allData$1$data16$fin2 = _allData$1$data16$fin.returnOnAssets) === null || _allData$1$data16$fin2 === void 0 ? void 0 : _allData$1$data16$fin2.raw) * 100 || "N/A",
    roe: ((_allData$1$data17 = allData[1].data) === null || _allData$1$data17 === void 0 ? void 0 : (_allData$1$data17$fin = _allData$1$data17.financialData) === null || _allData$1$data17$fin === void 0 ? void 0 : (_allData$1$data17$fin2 = _allData$1$data17$fin.returnOnEquity) === null || _allData$1$data17$fin2 === void 0 ? void 0 : _allData$1$data17$fin2.raw) * 100 || "N/A",
    debtToEquity: ((_allData$1$data18 = allData[1].data) === null || _allData$1$data18 === void 0 ? void 0 : (_allData$1$data18$fin = _allData$1$data18.financialData) === null || _allData$1$data18$fin === void 0 ? void 0 : (_allData$1$data18$fin2 = _allData$1$data18$fin.debtToEquity) === null || _allData$1$data18$fin2 === void 0 ? void 0 : _allData$1$data18$fin2.raw) || "N/A"
  };
  const name = data.name.split(" ").length > 2 ? data.name.split(" ").filter((word, i, arr) => i < 2).join(" ") : data.name;
  data.name = name;

  const formatMarketCap = marketCap => {
    const length = `${parseInt(marketCap)}`.length;

    if (length >= 7) {
      return `${(marketCap / 10 ** 6).toFixed(2)}T`;
    } else if (length >= 4) {
      return `${(marketCap / 10 ** 3).toFixed(2)}B`;
    } else return `${marketCap}M`;
  };

  data.marketCap = formatMarketCap(data.marketCap);
  const priceCurrency = data.priceCurrency === "CNY" || data.priceCurrency === "JPY" || data.priceCurrency === "RUB" ? "USD" : data.priceCurrency;
  data.priceCurrency = priceCurrency; // API's fault

  const eps = ((_allData$1$data$earni = allData[1].data.earnings) === null || _allData$1$data$earni === void 0 ? void 0 : (_allData$1$data$earni2 = _allData$1$data$earni.earningsChart) === null || _allData$1$data$earni2 === void 0 ? void 0 : (_allData$1$data$earni3 = _allData$1$data$earni2.quarterly) === null || _allData$1$data$earni3 === void 0 ? void 0 : _allData$1$data$earni3.reduce((epsTtm, quarter) => {
    var _quarter$actual;

    return epsTtm = epsTtm + (quarter === null || quarter === void 0 ? void 0 : (_quarter$actual = quarter.actual) === null || _quarter$actual === void 0 ? void 0 : _quarter$actual.raw);
  }, 0)) || "N/A";
  data.eps = eps;
  const priceToEarnings = parseFloat((((_allData$ = allData[1]) === null || _allData$ === void 0 ? void 0 : (_allData$$data = _allData$.data) === null || _allData$$data === void 0 ? void 0 : (_allData$$data$financ = _allData$$data.financialData) === null || _allData$$data$financ === void 0 ? void 0 : (_allData$$data$financ2 = _allData$$data$financ.currentPrice) === null || _allData$$data$financ2 === void 0 ? void 0 : _allData$$data$financ2.raw) / eps).toFixed(2)) || "N/A";
  data.pe = priceToEarnings === "N/A" ? "N/A" : priceToEarnings === Infinity ? "N/A" : priceToEarnings < 0 ? "<0" : priceToEarnings;
  data.recommendationKey = data.recommendationMean === "N/A" ? "N/A" : data.recommendationMean <= 2 ? "Strong Buy" : data.recommendationMean < 3 ? "Buy" : data.recommendationMean < 4 ? "Hold" : "Sell";
  return data;
};

const currentExports = __react_refresh_utils__.getModuleExports(module.i);
__react_refresh_utils__.registerExportsForReactRefresh(currentExports, module.i);

if (true) {
  const isHotUpdate = !!module.hot.data;
  const prevExports = isHotUpdate ? module.hot.data.prevExports : null;

  if (__react_refresh_utils__.isReactRefreshBoundary(currentExports)) {
    module.hot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = currentExports;
      }
    );
    module.hot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (
          typeof __react_refresh_error_overlay__ !== 'undefined' &&
          __react_refresh_error_overlay__
        ) {
          __react_refresh_error_overlay__.handleRuntimeError(error);
        }

        if (typeof __react_refresh_test__ !== 'undefined' && __react_refresh_test__) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[module.i].hot.accept(hotErrorHandler);
      }
    );

    if (isHotUpdate) {
      if (
        __react_refresh_utils__.isReactRefreshBoundary(prevExports) &&
        __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)
      ) {
        module.hot.invalidate();
      } else {
        __react_refresh_utils__.enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (
              typeof __react_refresh_error_overlay__ !== 'undefined' &&
              __react_refresh_error_overlay__
            ) {
              __react_refresh_error_overlay__.clearRuntimeErrors();
            }
          }
        );
      }
    }
  } else {
    if (isHotUpdate && __react_refresh_utils__.isReactRefreshBoundary(prevExports)) {
      module.hot.invalidate();
    }
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js"), __webpack_require__(/*! ./node_modules/react-dev-utils/refreshOverlayInterop.js */ "./node_modules/react-dev-utils/refreshOverlayInterop.js")))

/***/ }),

/***/ 1:
/*!**********************************************************************************************************************************************************************************************!*\
  !*** multi (webpack)/hot/dev-server.js ./node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js ./node_modules/react-dev-utils/webpackHotDevClient.js ./src/index.js ***!
  \**********************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! D:\MyCode\Investify\node_modules\webpack\hot\dev-server.js */"./node_modules/webpack/hot/dev-server.js");
__webpack_require__(/*! D:\MyCode\Investify\node_modules\@pmmmwh\react-refresh-webpack-plugin\client\ReactRefreshEntry.js */"./node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js");
__webpack_require__(/*! D:\MyCode\Investify\node_modules\react-dev-utils\webpackHotDevClient.js */"./node_modules/react-dev-utils/webpackHotDevClient.js");
module.exports = __webpack_require__(/*! D:\MyCode\Investify\src\index.js */"./src/index.js");


/***/ })

},[[1,"runtime-main","vendors~main"]]]);
//# sourceMappingURL=main.chunk.js.map